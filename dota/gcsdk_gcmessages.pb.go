// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: gcsdk_gcmessages.proto

package dota

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ESourceEngine int32

const (
	ESourceEngine_k_ESE_Source1 ESourceEngine = 0
	ESourceEngine_k_ESE_Source2 ESourceEngine = 1
)

// Enum value maps for ESourceEngine.
var (
	ESourceEngine_name = map[int32]string{
		0: "k_ESE_Source1",
		1: "k_ESE_Source2",
	}
	ESourceEngine_value = map[string]int32{
		"k_ESE_Source1": 0,
		"k_ESE_Source2": 1,
	}
)

func (x ESourceEngine) Enum() *ESourceEngine {
	p := new(ESourceEngine)
	*p = x
	return p
}

func (x ESourceEngine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESourceEngine) Descriptor() protoreflect.EnumDescriptor {
	return file_gcsdk_gcmessages_proto_enumTypes[0].Descriptor()
}

func (ESourceEngine) Type() protoreflect.EnumType {
	return &file_gcsdk_gcmessages_proto_enumTypes[0]
}

func (x ESourceEngine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESourceEngine) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESourceEngine(num)
	return nil
}

// Deprecated: Use ESourceEngine.Descriptor instead.
func (ESourceEngine) EnumDescriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

type PartnerAccountType int32

const (
	PartnerAccountType_PARTNER_NONE          PartnerAccountType = 0
	PartnerAccountType_PARTNER_PERFECT_WORLD PartnerAccountType = 1
	PartnerAccountType_PARTNER_INVALID       PartnerAccountType = 3
)

// Enum value maps for PartnerAccountType.
var (
	PartnerAccountType_name = map[int32]string{
		0: "PARTNER_NONE",
		1: "PARTNER_PERFECT_WORLD",
		3: "PARTNER_INVALID",
	}
	PartnerAccountType_value = map[string]int32{
		"PARTNER_NONE":          0,
		"PARTNER_PERFECT_WORLD": 1,
		"PARTNER_INVALID":       3,
	}
)

func (x PartnerAccountType) Enum() *PartnerAccountType {
	p := new(PartnerAccountType)
	*p = x
	return p
}

func (x PartnerAccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartnerAccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_gcsdk_gcmessages_proto_enumTypes[1].Descriptor()
}

func (PartnerAccountType) Type() protoreflect.EnumType {
	return &file_gcsdk_gcmessages_proto_enumTypes[1]
}

func (x PartnerAccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PartnerAccountType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PartnerAccountType(num)
	return nil
}

// Deprecated: Use PartnerAccountType.Descriptor instead.
func (PartnerAccountType) EnumDescriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

type GCConnectionStatus int32

const (
	GCConnectionStatus_GCConnectionStatus_HAVE_SESSION              GCConnectionStatus = 0
	GCConnectionStatus_GCConnectionStatus_GC_GOING_DOWN             GCConnectionStatus = 1
	GCConnectionStatus_GCConnectionStatus_NO_SESSION                GCConnectionStatus = 2
	GCConnectionStatus_GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE GCConnectionStatus = 3
	GCConnectionStatus_GCConnectionStatus_NO_STEAM                  GCConnectionStatus = 4
	GCConnectionStatus_GCConnectionStatus_SUSPENDED                 GCConnectionStatus = 5
	GCConnectionStatus_GCConnectionStatus_STEAM_GOING_DOWN          GCConnectionStatus = 6
)

// Enum value maps for GCConnectionStatus.
var (
	GCConnectionStatus_name = map[int32]string{
		0: "GCConnectionStatus_HAVE_SESSION",
		1: "GCConnectionStatus_GC_GOING_DOWN",
		2: "GCConnectionStatus_NO_SESSION",
		3: "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE",
		4: "GCConnectionStatus_NO_STEAM",
		5: "GCConnectionStatus_SUSPENDED",
		6: "GCConnectionStatus_STEAM_GOING_DOWN",
	}
	GCConnectionStatus_value = map[string]int32{
		"GCConnectionStatus_HAVE_SESSION":              0,
		"GCConnectionStatus_GC_GOING_DOWN":             1,
		"GCConnectionStatus_NO_SESSION":                2,
		"GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE": 3,
		"GCConnectionStatus_NO_STEAM":                  4,
		"GCConnectionStatus_SUSPENDED":                 5,
		"GCConnectionStatus_STEAM_GOING_DOWN":          6,
	}
)

func (x GCConnectionStatus) Enum() *GCConnectionStatus {
	p := new(GCConnectionStatus)
	*p = x
	return p
}

func (x GCConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GCConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gcsdk_gcmessages_proto_enumTypes[2].Descriptor()
}

func (GCConnectionStatus) Type() protoreflect.EnumType {
	return &file_gcsdk_gcmessages_proto_enumTypes[2]
}

func (x GCConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GCConnectionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GCConnectionStatus(num)
	return nil
}

// Deprecated: Use GCConnectionStatus.Descriptor instead.
func (GCConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2}
}

type CMsgSHA1Digest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block1 *uint64 `protobuf:"fixed64,1,req,name=block1" json:"block1,omitempty"`
	Block2 *uint64 `protobuf:"fixed64,2,req,name=block2" json:"block2,omitempty"`
	Block3 *uint32 `protobuf:"fixed32,3,req,name=block3" json:"block3,omitempty"`
}

func (x *CMsgSHA1Digest) Reset() {
	*x = CMsgSHA1Digest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSHA1Digest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSHA1Digest) ProtoMessage() {}

func (x *CMsgSHA1Digest) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSHA1Digest.ProtoReflect.Descriptor instead.
func (*CMsgSHA1Digest) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSHA1Digest) GetBlock1() uint64 {
	if x != nil && x.Block1 != nil {
		return *x.Block1
	}
	return 0
}

func (x *CMsgSHA1Digest) GetBlock2() uint64 {
	if x != nil && x.Block2 != nil {
		return *x.Block2
	}
	return 0
}

func (x *CMsgSHA1Digest) GetBlock3() uint32 {
	if x != nil && x.Block3 != nil {
		return *x.Block3
	}
	return 0
}

type CMsgSOIDOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id   *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (x *CMsgSOIDOwner) Reset() {
	*x = CMsgSOIDOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOIDOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOIDOwner) ProtoMessage() {}

func (x *CMsgSOIDOwner) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOIDOwner.ProtoReflect.Descriptor instead.
func (*CMsgSOIDOwner) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgSOIDOwner) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSOIDOwner) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type CMsgSOSingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32         `protobuf:"varint,2,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData []byte         `protobuf:"bytes,3,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
	Version    *uint64        `protobuf:"fixed64,4,opt,name=version" json:"version,omitempty"`
	OwnerSoid  *CMsgSOIDOwner `protobuf:"bytes,5,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId  *uint32        `protobuf:"varint,6,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (x *CMsgSOSingleObject) Reset() {
	*x = CMsgSOSingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOSingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOSingleObject) ProtoMessage() {}

func (x *CMsgSOSingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOSingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOSingleObject) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgSOSingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOSingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

func (x *CMsgSOSingleObject) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOSingleObject) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOSingleObject) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSOMultipleObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectsModified []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,2,rep,name=objects_modified,json=objectsModified" json:"objects_modified,omitempty"`
	Version         *uint64                               `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	ObjectsAdded    []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,4,rep,name=objects_added,json=objectsAdded" json:"objects_added,omitempty"`
	ObjectsRemoved  []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,5,rep,name=objects_removed,json=objectsRemoved" json:"objects_removed,omitempty"`
	OwnerSoid       *CMsgSOIDOwner                        `protobuf:"bytes,6,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId       *uint32                               `protobuf:"varint,7,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (x *CMsgSOMultipleObjects) Reset() {
	*x = CMsgSOMultipleObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOMultipleObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects) ProtoMessage() {}

func (x *CMsgSOMultipleObjects) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgSOMultipleObjects) GetObjectsModified() []*CMsgSOMultipleObjects_SingleObject {
	if x != nil {
		return x.ObjectsModified
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOMultipleObjects) GetObjectsAdded() []*CMsgSOMultipleObjects_SingleObject {
	if x != nil {
		return x.ObjectsAdded
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetObjectsRemoved() []*CMsgSOMultipleObjects_SingleObject {
	if x != nil {
		return x.ObjectsRemoved
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSOCacheSubscribed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects     []*CMsgSOCacheSubscribed_SubscribedType `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version     *uint64                                 `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid   *CMsgSOIDOwner                          `protobuf:"bytes,4,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId   *uint32                                 `protobuf:"varint,5,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList []uint32                                `protobuf:"varint,6,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion *uint64                                 `protobuf:"fixed64,7,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
}

func (x *CMsgSOCacheSubscribed) Reset() {
	*x = CMsgSOCacheSubscribed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgSOCacheSubscribed) GetObjects() []*CMsgSOCacheSubscribed_SubscribedType {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscribedUpToDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint64        `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
	OwnerSoid   *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId   *uint32        `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList []uint32       `protobuf:"varint,4,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion *uint64        `protobuf:"fixed64,5,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
}

func (x *CMsgSOCacheSubscribedUpToDate) Reset() {
	*x = CMsgSOCacheSubscribedUpToDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribedUpToDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribedUpToDate) ProtoMessage() {}

func (x *CMsgSOCacheSubscribedUpToDate) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribedUpToDate.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribedUpToDate) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSOCacheSubscribedUpToDate) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribedUpToDate) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscribedUpToDate) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscribedUpToDate) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscribedUpToDate) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheUnsubscribed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerSoid *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheUnsubscribed) Reset() {
	*x = CMsgSOCacheUnsubscribed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheUnsubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheUnsubscribed) ProtoMessage() {}

func (x *CMsgSOCacheUnsubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheUnsubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheUnsubscribed) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgSOCacheUnsubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheSubscriptionCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	OwnerSoid   *CMsgSOIDOwner `protobuf:"bytes,3,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId   *uint32        `protobuf:"varint,4,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList []uint32       `protobuf:"varint,5,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion *uint64        `protobuf:"fixed64,6,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
}

func (x *CMsgSOCacheSubscriptionCheck) Reset() {
	*x = CMsgSOCacheSubscriptionCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscriptionCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionCheck) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionCheck) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionCheck.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionCheck) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgSOCacheSubscriptionCheck) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscriptionCheck) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscriptionCheck) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscriptionRefresh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerSoid *CMsgSOIDOwner `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
}

func (x *CMsgSOCacheSubscriptionRefresh) Reset() {
	*x = CMsgSOCacheSubscriptionRefresh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscriptionRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionRefresh) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionRefresh.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionRefresh) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgSOCacheSubscriptionRefresh) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *uint64 `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgSOCacheVersion) Reset() {
	*x = CMsgSOCacheVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheVersion) ProtoMessage() {}

func (x *CMsgSOCacheVersion) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheVersion) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgSOCacheVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CMsgGCMultiplexMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgtype  *uint32  `protobuf:"varint,1,opt,name=msgtype" json:"msgtype,omitempty"`
	Payload  []byte   `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	Steamids []uint64 `protobuf:"fixed64,3,rep,name=steamids" json:"steamids,omitempty"`
}

func (x *CMsgGCMultiplexMessage) Reset() {
	*x = CMsgGCMultiplexMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCMultiplexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMultiplexMessage) ProtoMessage() {}

func (x *CMsgGCMultiplexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMultiplexMessage.ProtoReflect.Descriptor instead.
func (*CMsgGCMultiplexMessage) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgGCMultiplexMessage) GetMsgtype() uint32 {
	if x != nil && x.Msgtype != nil {
		return *x.Msgtype
	}
	return 0
}

func (x *CMsgGCMultiplexMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CMsgGCMultiplexMessage) GetSteamids() []uint64 {
	if x != nil {
		return x.Steamids
	}
	return nil
}

type CMsgGCToGCSubGCStarting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex *uint32 `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
}

func (x *CMsgGCToGCSubGCStarting) Reset() {
	*x = CMsgGCToGCSubGCStarting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSubGCStarting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSubGCStarting) ProtoMessage() {}

func (x *CMsgGCToGCSubGCStarting) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSubGCStarting.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSubGCStarting) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgGCToGCSubGCStarting) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

type CGCToGCMsgMasterAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex    *uint32                        `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	MachineName *string                        `protobuf:"bytes,3,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	ProcessName *string                        `protobuf:"bytes,4,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	Directory   []*CGCToGCMsgMasterAck_Process `protobuf:"bytes,6,rep,name=directory" json:"directory,omitempty"`
}

func (x *CGCToGCMsgMasterAck) Reset() {
	*x = CGCToGCMsgMasterAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CGCToGCMsgMasterAck) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterAck) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

func (x *CGCToGCMsgMasterAck) GetProcessName() string {
	if x != nil && x.ProcessName != nil {
		return *x.ProcessName
	}
	return ""
}

func (x *CGCToGCMsgMasterAck) GetDirectory() []*CGCToGCMsgMasterAck_Process {
	if x != nil {
		return x.Directory
	}
	return nil
}

type CGCToGCMsgMasterAck_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
}

// Default values for CGCToGCMsgMasterAck_Response fields.
const (
	Default_CGCToGCMsgMasterAck_Response_Eresult = int32(2)
)

func (x *CGCToGCMsgMasterAck_Response) Reset() {
	*x = CGCToGCMsgMasterAck_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck_Response) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck_Response) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck_Response.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck_Response) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CGCToGCMsgMasterAck_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CGCToGCMsgMasterAck_Response_Eresult
}

type CMsgGCToGCUniverseStartup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInitialStartup *bool `protobuf:"varint,1,opt,name=is_initial_startup,json=isInitialStartup" json:"is_initial_startup,omitempty"`
}

func (x *CMsgGCToGCUniverseStartup) Reset() {
	*x = CMsgGCToGCUniverseStartup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCUniverseStartup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCUniverseStartup) ProtoMessage() {}

func (x *CMsgGCToGCUniverseStartup) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCUniverseStartup.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCUniverseStartup) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgGCToGCUniverseStartup) GetIsInitialStartup() bool {
	if x != nil && x.IsInitialStartup != nil {
		return *x.IsInitialStartup
	}
	return false
}

type CMsgGCToGCUniverseStartupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
}

func (x *CMsgGCToGCUniverseStartupResponse) Reset() {
	*x = CMsgGCToGCUniverseStartupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCUniverseStartupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCUniverseStartupResponse) ProtoMessage() {}

func (x *CMsgGCToGCUniverseStartupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCUniverseStartupResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCUniverseStartupResponse) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgGCToGCUniverseStartupResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CGCToGCMsgMasterStartupComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GcInfo []*CGCToGCMsgMasterStartupComplete_GCInfo `protobuf:"bytes,1,rep,name=gc_info,json=gcInfo" json:"gc_info,omitempty"`
}

func (x *CGCToGCMsgMasterStartupComplete) Reset() {
	*x = CGCToGCMsgMasterStartupComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterStartupComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CGCToGCMsgMasterStartupComplete) GetGcInfo() []*CGCToGCMsgMasterStartupComplete_GCInfo {
	if x != nil {
		return x.GcInfo
	}
	return nil
}

type CGCToGCMsgRouted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	SenderId   *uint64 `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	NetMessage []byte  `protobuf:"bytes,3,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
}

func (x *CGCToGCMsgRouted) Reset() {
	*x = CGCToGCMsgRouted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgRouted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRouted) ProtoMessage() {}

func (x *CGCToGCMsgRouted) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRouted.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRouted) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CGCToGCMsgRouted) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CGCToGCMsgRoutedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType    *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	NetMessage []byte  `protobuf:"bytes,2,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
}

func (x *CGCToGCMsgRoutedReply) Reset() {
	*x = CGCToGCMsgRoutedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgRoutedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRoutedReply) ProtoMessage() {}

func (x *CGCToGCMsgRoutedReply) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRoutedReply.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRoutedReply) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CGCToGCMsgRoutedReply) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRoutedReply) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CMsgGCUpdateSubGCSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
}

func (x *CMsgGCUpdateSubGCSessionInfo) Reset() {
	*x = CMsgGCUpdateSubGCSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCUpdateSubGCSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSubGCSessionInfo) ProtoMessage() {}

func (x *CMsgGCUpdateSubGCSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSubGCSessionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSubGCSessionInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgGCUpdateSubGCSessionInfo) GetUpdates() []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type CMsgGCRequestSubGCSessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CMsgGCRequestSubGCSessionInfo) Reset() {
	*x = CMsgGCRequestSubGCSessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestSubGCSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSubGCSessionInfo) ProtoMessage() {}

func (x *CMsgGCRequestSubGCSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSubGCSessionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSubGCSessionInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgGCRequestSubGCSessionInfo) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgGCRequestSubGCSessionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip      *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
	Trusted *bool   `protobuf:"varint,2,opt,name=trusted" json:"trusted,omitempty"`
	Port    *uint32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Success *bool   `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) Reset() {
	*x = CMsgGCRequestSubGCSessionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSubGCSessionInfoResponse) ProtoMessage() {}

func (x *CMsgGCRequestSubGCSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSubGCSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSubGCSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgSOCacheHaveVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soid              *CMsgSOIDOwner `protobuf:"bytes,1,opt,name=soid" json:"soid,omitempty"`
	Version           *uint64        `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	ServiceId         *uint32        `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	CachedFileVersion *uint32        `protobuf:"varint,4,opt,name=cached_file_version,json=cachedFileVersion" json:"cached_file_version,omitempty"`
}

func (x *CMsgSOCacheHaveVersion) Reset() {
	*x = CMsgSOCacheHaveVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheHaveVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheHaveVersion) ProtoMessage() {}

func (x *CMsgSOCacheHaveVersion) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheHaveVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheHaveVersion) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgSOCacheHaveVersion) GetSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.Soid
	}
	return nil
}

func (x *CMsgSOCacheHaveVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheHaveVersion) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheHaveVersion) GetCachedFileVersion() uint32 {
	if x != nil && x.CachedFileVersion != nil {
		return *x.CachedFileVersion
	}
	return 0
}

type CMsgClientHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             *uint32                   `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	SocacheHaveVersions []*CMsgSOCacheHaveVersion `protobuf:"bytes,2,rep,name=socache_have_versions,json=socacheHaveVersions" json:"socache_have_versions,omitempty"`
	ClientSessionNeed   *uint32                   `protobuf:"varint,3,opt,name=client_session_need,json=clientSessionNeed" json:"client_session_need,omitempty"`
	ClientLauncher      *PartnerAccountType       `protobuf:"varint,4,opt,name=client_launcher,json=clientLauncher,enum=dota.PartnerAccountType,def=0" json:"client_launcher,omitempty"`
	SecretKey           *string                   `protobuf:"bytes,5,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	ClientLanguage      *uint32                   `protobuf:"varint,6,opt,name=client_language,json=clientLanguage" json:"client_language,omitempty"`
	Engine              *ESourceEngine            `protobuf:"varint,7,opt,name=engine,enum=dota.ESourceEngine,def=0" json:"engine,omitempty"`
	SteamdatagramLogin  []byte                    `protobuf:"bytes,8,opt,name=steamdatagram_login,json=steamdatagramLogin" json:"steamdatagram_login,omitempty"`
	PlatformId          *uint32                   `protobuf:"varint,9,opt,name=platform_id,json=platformId" json:"platform_id,omitempty"`
	GameMsg             []byte                    `protobuf:"bytes,10,opt,name=game_msg,json=gameMsg" json:"game_msg,omitempty"`
	OsType              *int32                    `protobuf:"varint,11,opt,name=os_type,json=osType" json:"os_type,omitempty"`
	RenderSystem        *uint32                   `protobuf:"varint,12,opt,name=render_system,json=renderSystem" json:"render_system,omitempty"`
	RenderSystemReq     *uint32                   `protobuf:"varint,13,opt,name=render_system_req,json=renderSystemReq" json:"render_system_req,omitempty"`
	ScreenWidth         *uint32                   `protobuf:"varint,14,opt,name=screen_width,json=screenWidth" json:"screen_width,omitempty"`
	ScreenHeight        *uint32                   `protobuf:"varint,15,opt,name=screen_height,json=screenHeight" json:"screen_height,omitempty"`
	ScreenRefresh       *uint32                   `protobuf:"varint,16,opt,name=screen_refresh,json=screenRefresh" json:"screen_refresh,omitempty"`
	RenderWidth         *uint32                   `protobuf:"varint,17,opt,name=render_width,json=renderWidth" json:"render_width,omitempty"`
	RenderHeight        *uint32                   `protobuf:"varint,18,opt,name=render_height,json=renderHeight" json:"render_height,omitempty"`
	SwapWidth           *uint32                   `protobuf:"varint,19,opt,name=swap_width,json=swapWidth" json:"swap_width,omitempty"`
	SwapHeight          *uint32                   `protobuf:"varint,20,opt,name=swap_height,json=swapHeight" json:"swap_height,omitempty"`
}

// Default values for CMsgClientHello fields.
const (
	Default_CMsgClientHello_ClientLauncher = PartnerAccountType_PARTNER_NONE
	Default_CMsgClientHello_Engine         = ESourceEngine_k_ESE_Source1
)

func (x *CMsgClientHello) Reset() {
	*x = CMsgClientHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientHello) ProtoMessage() {}

func (x *CMsgClientHello) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientHello.ProtoReflect.Descriptor instead.
func (*CMsgClientHello) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgClientHello) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgClientHello) GetSocacheHaveVersions() []*CMsgSOCacheHaveVersion {
	if x != nil {
		return x.SocacheHaveVersions
	}
	return nil
}

func (x *CMsgClientHello) GetClientSessionNeed() uint32 {
	if x != nil && x.ClientSessionNeed != nil {
		return *x.ClientSessionNeed
	}
	return 0
}

func (x *CMsgClientHello) GetClientLauncher() PartnerAccountType {
	if x != nil && x.ClientLauncher != nil {
		return *x.ClientLauncher
	}
	return Default_CMsgClientHello_ClientLauncher
}

func (x *CMsgClientHello) GetSecretKey() string {
	if x != nil && x.SecretKey != nil {
		return *x.SecretKey
	}
	return ""
}

func (x *CMsgClientHello) GetClientLanguage() uint32 {
	if x != nil && x.ClientLanguage != nil {
		return *x.ClientLanguage
	}
	return 0
}

func (x *CMsgClientHello) GetEngine() ESourceEngine {
	if x != nil && x.Engine != nil {
		return *x.Engine
	}
	return Default_CMsgClientHello_Engine
}

func (x *CMsgClientHello) GetSteamdatagramLogin() []byte {
	if x != nil {
		return x.SteamdatagramLogin
	}
	return nil
}

func (x *CMsgClientHello) GetPlatformId() uint32 {
	if x != nil && x.PlatformId != nil {
		return *x.PlatformId
	}
	return 0
}

func (x *CMsgClientHello) GetGameMsg() []byte {
	if x != nil {
		return x.GameMsg
	}
	return nil
}

func (x *CMsgClientHello) GetOsType() int32 {
	if x != nil && x.OsType != nil {
		return *x.OsType
	}
	return 0
}

func (x *CMsgClientHello) GetRenderSystem() uint32 {
	if x != nil && x.RenderSystem != nil {
		return *x.RenderSystem
	}
	return 0
}

func (x *CMsgClientHello) GetRenderSystemReq() uint32 {
	if x != nil && x.RenderSystemReq != nil {
		return *x.RenderSystemReq
	}
	return 0
}

func (x *CMsgClientHello) GetScreenWidth() uint32 {
	if x != nil && x.ScreenWidth != nil {
		return *x.ScreenWidth
	}
	return 0
}

func (x *CMsgClientHello) GetScreenHeight() uint32 {
	if x != nil && x.ScreenHeight != nil {
		return *x.ScreenHeight
	}
	return 0
}

func (x *CMsgClientHello) GetScreenRefresh() uint32 {
	if x != nil && x.ScreenRefresh != nil {
		return *x.ScreenRefresh
	}
	return 0
}

func (x *CMsgClientHello) GetRenderWidth() uint32 {
	if x != nil && x.RenderWidth != nil {
		return *x.RenderWidth
	}
	return 0
}

func (x *CMsgClientHello) GetRenderHeight() uint32 {
	if x != nil && x.RenderHeight != nil {
		return *x.RenderHeight
	}
	return 0
}

func (x *CMsgClientHello) GetSwapWidth() uint32 {
	if x != nil && x.SwapWidth != nil {
		return *x.SwapWidth
	}
	return 0
}

func (x *CMsgClientHello) GetSwapHeight() uint32 {
	if x != nil && x.SwapHeight != nil {
		return *x.SwapHeight
	}
	return 0
}

type CMsgClientWelcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version                   *uint32                         `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	GameData                  []byte                          `protobuf:"bytes,2,opt,name=game_data,json=gameData" json:"game_data,omitempty"`
	OutofdateSubscribedCaches []*CMsgSOCacheSubscribed        `protobuf:"bytes,3,rep,name=outofdate_subscribed_caches,json=outofdateSubscribedCaches" json:"outofdate_subscribed_caches,omitempty"`
	UptodateSubscribedCaches  []*CMsgSOCacheSubscriptionCheck `protobuf:"bytes,4,rep,name=uptodate_subscribed_caches,json=uptodateSubscribedCaches" json:"uptodate_subscribed_caches,omitempty"`
	Location                  *CMsgClientWelcome_Location     `protobuf:"bytes,5,opt,name=location" json:"location,omitempty"`
	SaveGameKey               []byte                          `protobuf:"bytes,6,opt,name=save_game_key,json=saveGameKey" json:"save_game_key,omitempty"`
	ItemSchemaCrc             *uint32                         `protobuf:"fixed32,7,opt,name=item_schema_crc,json=itemSchemaCrc" json:"item_schema_crc,omitempty"`
	ItemsGameUrl              *string                         `protobuf:"bytes,8,opt,name=items_game_url,json=itemsGameUrl" json:"items_game_url,omitempty"`
	GcSocacheFileVersion      *uint32                         `protobuf:"varint,9,opt,name=gc_socache_file_version,json=gcSocacheFileVersion" json:"gc_socache_file_version,omitempty"`
	TxnCountryCode            *string                         `protobuf:"bytes,10,opt,name=txn_country_code,json=txnCountryCode" json:"txn_country_code,omitempty"`
	GameData2                 []byte                          `protobuf:"bytes,11,opt,name=game_data2,json=gameData2" json:"game_data2,omitempty"`
	Rtime32GcWelcomeTimestamp *uint32                         `protobuf:"varint,12,opt,name=rtime32_gc_welcome_timestamp,json=rtime32GcWelcomeTimestamp" json:"rtime32_gc_welcome_timestamp,omitempty"`
	Currency                  *uint32                         `protobuf:"varint,13,opt,name=currency" json:"currency,omitempty"`
	Balance                   *uint32                         `protobuf:"varint,14,opt,name=balance" json:"balance,omitempty"`
	BalanceUrl                *string                         `protobuf:"bytes,15,opt,name=balance_url,json=balanceUrl" json:"balance_url,omitempty"`
}

func (x *CMsgClientWelcome) Reset() {
	*x = CMsgClientWelcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientWelcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientWelcome) ProtoMessage() {}

func (x *CMsgClientWelcome) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientWelcome.ProtoReflect.Descriptor instead.
func (*CMsgClientWelcome) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgClientWelcome) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgClientWelcome) GetGameData() []byte {
	if x != nil {
		return x.GameData
	}
	return nil
}

func (x *CMsgClientWelcome) GetOutofdateSubscribedCaches() []*CMsgSOCacheSubscribed {
	if x != nil {
		return x.OutofdateSubscribedCaches
	}
	return nil
}

func (x *CMsgClientWelcome) GetUptodateSubscribedCaches() []*CMsgSOCacheSubscriptionCheck {
	if x != nil {
		return x.UptodateSubscribedCaches
	}
	return nil
}

func (x *CMsgClientWelcome) GetLocation() *CMsgClientWelcome_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CMsgClientWelcome) GetSaveGameKey() []byte {
	if x != nil {
		return x.SaveGameKey
	}
	return nil
}

func (x *CMsgClientWelcome) GetItemSchemaCrc() uint32 {
	if x != nil && x.ItemSchemaCrc != nil {
		return *x.ItemSchemaCrc
	}
	return 0
}

func (x *CMsgClientWelcome) GetItemsGameUrl() string {
	if x != nil && x.ItemsGameUrl != nil {
		return *x.ItemsGameUrl
	}
	return ""
}

func (x *CMsgClientWelcome) GetGcSocacheFileVersion() uint32 {
	if x != nil && x.GcSocacheFileVersion != nil {
		return *x.GcSocacheFileVersion
	}
	return 0
}

func (x *CMsgClientWelcome) GetTxnCountryCode() string {
	if x != nil && x.TxnCountryCode != nil {
		return *x.TxnCountryCode
	}
	return ""
}

func (x *CMsgClientWelcome) GetGameData2() []byte {
	if x != nil {
		return x.GameData2
	}
	return nil
}

func (x *CMsgClientWelcome) GetRtime32GcWelcomeTimestamp() uint32 {
	if x != nil && x.Rtime32GcWelcomeTimestamp != nil {
		return *x.Rtime32GcWelcomeTimestamp
	}
	return 0
}

func (x *CMsgClientWelcome) GetCurrency() uint32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

func (x *CMsgClientWelcome) GetBalance() uint32 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

func (x *CMsgClientWelcome) GetBalanceUrl() string {
	if x != nil && x.BalanceUrl != nil {
		return *x.BalanceUrl
	}
	return ""
}

type CMsgConnectionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                        *GCConnectionStatus `protobuf:"varint,1,opt,name=status,enum=dota.GCConnectionStatus,def=0" json:"status,omitempty"`
	ClientSessionNeed             *uint32             `protobuf:"varint,2,opt,name=client_session_need,json=clientSessionNeed" json:"client_session_need,omitempty"`
	QueuePosition                 *int32              `protobuf:"varint,3,opt,name=queue_position,json=queuePosition" json:"queue_position,omitempty"`
	QueueSize                     *int32              `protobuf:"varint,4,opt,name=queue_size,json=queueSize" json:"queue_size,omitempty"`
	WaitSeconds                   *int32              `protobuf:"varint,5,opt,name=wait_seconds,json=waitSeconds" json:"wait_seconds,omitempty"`
	EstimatedWaitSecondsRemaining *int32              `protobuf:"varint,6,opt,name=estimated_wait_seconds_remaining,json=estimatedWaitSecondsRemaining" json:"estimated_wait_seconds_remaining,omitempty"`
}

// Default values for CMsgConnectionStatus fields.
const (
	Default_CMsgConnectionStatus_Status = GCConnectionStatus_GCConnectionStatus_HAVE_SESSION
)

func (x *CMsgConnectionStatus) Reset() {
	*x = CMsgConnectionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgConnectionStatus) ProtoMessage() {}

func (x *CMsgConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgConnectionStatus.ProtoReflect.Descriptor instead.
func (*CMsgConnectionStatus) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgConnectionStatus) GetStatus() GCConnectionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_CMsgConnectionStatus_Status
}

func (x *CMsgConnectionStatus) GetClientSessionNeed() uint32 {
	if x != nil && x.ClientSessionNeed != nil {
		return *x.ClientSessionNeed
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueuePosition() int32 {
	if x != nil && x.QueuePosition != nil {
		return *x.QueuePosition
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueueSize() int32 {
	if x != nil && x.QueueSize != nil {
		return *x.QueueSize
	}
	return 0
}

func (x *CMsgConnectionStatus) GetWaitSeconds() int32 {
	if x != nil && x.WaitSeconds != nil {
		return *x.WaitSeconds
	}
	return 0
}

func (x *CMsgConnectionStatus) GetEstimatedWaitSecondsRemaining() int32 {
	if x != nil && x.EstimatedWaitSecondsRemaining != nil {
		return *x.EstimatedWaitSecondsRemaining
	}
	return 0
}

type CMsgGCToGCSOCacheSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber      *uint64                                        `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	SubscribeToId   *uint64                                        `protobuf:"fixed64,2,opt,name=subscribe_to_id,json=subscribeToId" json:"subscribe_to_id,omitempty"`
	SyncVersion     *uint64                                        `protobuf:"fixed64,3,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
	HaveVersions    []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions `protobuf:"bytes,4,rep,name=have_versions,json=haveVersions" json:"have_versions,omitempty"`
	SubscribeToType *uint32                                        `protobuf:"varint,5,opt,name=subscribe_to_type,json=subscribeToType" json:"subscribe_to_type,omitempty"`
}

func (x *CMsgGCToGCSOCacheSubscribe) Reset() {
	*x = CMsgGCToGCSOCacheSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSOCacheSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheSubscribe) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheSubscribe.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheSubscribe) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscriber() uint64 {
	if x != nil && x.Subscriber != nil {
		return *x.Subscriber
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscribeToId() uint64 {
	if x != nil && x.SubscribeToId != nil {
		return *x.SubscribeToId
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetHaveVersions() []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions {
	if x != nil {
		return x.HaveVersions
	}
	return nil
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscribeToType() uint32 {
	if x != nil && x.SubscribeToType != nil {
		return *x.SubscribeToType
	}
	return 0
}

type CMsgGCToGCSOCacheUnsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriber          *uint64 `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	UnsubscribeFromId   *uint64 `protobuf:"fixed64,2,opt,name=unsubscribe_from_id,json=unsubscribeFromId" json:"unsubscribe_from_id,omitempty"`
	UnsubscribeFromType *uint32 `protobuf:"varint,3,opt,name=unsubscribe_from_type,json=unsubscribeFromType" json:"unsubscribe_from_type,omitempty"`
}

func (x *CMsgGCToGCSOCacheUnsubscribe) Reset() {
	*x = CMsgGCToGCSOCacheUnsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSOCacheUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheUnsubscribe) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheUnsubscribe.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheUnsubscribe) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetSubscriber() uint64 {
	if x != nil && x.Subscriber != nil {
		return *x.Subscriber
	}
	return 0
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetUnsubscribeFromId() uint64 {
	if x != nil && x.UnsubscribeFromId != nil {
		return *x.UnsubscribeFromId
	}
	return 0
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetUnsubscribeFromType() uint32 {
	if x != nil && x.UnsubscribeFromType != nil {
		return *x.UnsubscribeFromType
	}
	return 0
}

type CMsgGCClientPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCClientPing) Reset() {
	*x = CMsgGCClientPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCClientPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCClientPing) ProtoMessage() {}

func (x *CMsgGCClientPing) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCClientPing.ProtoReflect.Descriptor instead.
func (*CMsgGCClientPing) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{28}
}

type CMsgGCToGCForwardAccountDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid        *uint64                                  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AccountDetails *CGCSystemMsg_GetAccountDetails_Response `protobuf:"bytes,2,opt,name=account_details,json=accountDetails" json:"account_details,omitempty"`
	AgeSeconds     *uint32                                  `protobuf:"varint,3,opt,name=age_seconds,json=ageSeconds" json:"age_seconds,omitempty"`
}

func (x *CMsgGCToGCForwardAccountDetails) Reset() {
	*x = CMsgGCToGCForwardAccountDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCForwardAccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCForwardAccountDetails) ProtoMessage() {}

func (x *CMsgGCToGCForwardAccountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCForwardAccountDetails.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCForwardAccountDetails) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgGCToGCForwardAccountDetails) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCToGCForwardAccountDetails) GetAccountDetails() *CGCSystemMsg_GetAccountDetails_Response {
	if x != nil {
		return x.AccountDetails
	}
	return nil
}

func (x *CMsgGCToGCForwardAccountDetails) GetAgeSeconds() uint32 {
	if x != nil && x.AgeSeconds != nil {
		return *x.AgeSeconds
	}
	return 0
}

type CMsgGCToGCLoadSessionSOCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId             *uint32                          `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ForwardAccountDetails *CMsgGCToGCForwardAccountDetails `protobuf:"bytes,2,opt,name=forward_account_details,json=forwardAccountDetails" json:"forward_account_details,omitempty"`
}

func (x *CMsgGCToGCLoadSessionSOCache) Reset() {
	*x = CMsgGCToGCLoadSessionSOCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCLoadSessionSOCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCLoadSessionSOCache) ProtoMessage() {}

func (x *CMsgGCToGCLoadSessionSOCache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCLoadSessionSOCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCLoadSessionSOCache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgGCToGCLoadSessionSOCache) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCLoadSessionSOCache) GetForwardAccountDetails() *CMsgGCToGCForwardAccountDetails {
	if x != nil {
		return x.ForwardAccountDetails
	}
	return nil
}

type CMsgGCToGCLoadSessionSOCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCLoadSessionSOCacheResponse) Reset() {
	*x = CMsgGCToGCLoadSessionSOCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCLoadSessionSOCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCLoadSessionSOCacheResponse) ProtoMessage() {}

func (x *CMsgGCToGCLoadSessionSOCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCLoadSessionSOCacheResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCLoadSessionSOCacheResponse) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{31}
}

type CMsgGCToGCUpdateSessionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSessions   *uint32 `protobuf:"varint,1,opt,name=user_sessions,json=userSessions" json:"user_sessions,omitempty"`
	ServerSessions *uint32 `protobuf:"varint,2,opt,name=server_sessions,json=serverSessions" json:"server_sessions,omitempty"`
	InLogonSurge   *bool   `protobuf:"varint,3,opt,name=in_logon_surge,json=inLogonSurge" json:"in_logon_surge,omitempty"`
}

func (x *CMsgGCToGCUpdateSessionStats) Reset() {
	*x = CMsgGCToGCUpdateSessionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCUpdateSessionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCUpdateSessionStats) ProtoMessage() {}

func (x *CMsgGCToGCUpdateSessionStats) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCUpdateSessionStats.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCUpdateSessionStats) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgGCToGCUpdateSessionStats) GetUserSessions() uint32 {
	if x != nil && x.UserSessions != nil {
		return *x.UserSessions
	}
	return 0
}

func (x *CMsgGCToGCUpdateSessionStats) GetServerSessions() uint32 {
	if x != nil && x.ServerSessions != nil {
		return *x.ServerSessions
	}
	return 0
}

func (x *CMsgGCToGCUpdateSessionStats) GetInLogonSurge() bool {
	if x != nil && x.InLogonSurge != nil {
		return *x.InLogonSurge
	}
	return false
}

type CMsgGCToClientRequestDropped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToClientRequestDropped) Reset() {
	*x = CMsgGCToClientRequestDropped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientRequestDropped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientRequestDropped) ProtoMessage() {}

func (x *CMsgGCToClientRequestDropped) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientRequestDropped.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientRequestDropped) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{33}
}

type CWorkshop_PopulateItemDescriptions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32                                                                     `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Languages []*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock `protobuf:"bytes,2,rep,name=languages" json:"languages,omitempty"`
}

func (x *CWorkshop_PopulateItemDescriptions_Request) Reset() {
	*x = CWorkshop_PopulateItemDescriptions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_PopulateItemDescriptions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_PopulateItemDescriptions_Request) ProtoMessage() {}

func (x *CWorkshop_PopulateItemDescriptions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_PopulateItemDescriptions_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_PopulateItemDescriptions_Request) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{34}
}

func (x *CWorkshop_PopulateItemDescriptions_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_PopulateItemDescriptions_Request) GetLanguages() []*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock {
	if x != nil {
		return x.Languages
	}
	return nil
}

type CWorkshop_GetContributors_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid *uint32 `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
}

func (x *CWorkshop_GetContributors_Request) Reset() {
	*x = CWorkshop_GetContributors_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetContributors_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetContributors_Request) ProtoMessage() {}

func (x *CWorkshop_GetContributors_Request) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetContributors_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetContributors_Request) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{35}
}

func (x *CWorkshop_GetContributors_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_GetContributors_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

type CWorkshop_GetContributors_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contributors []uint64 `protobuf:"fixed64,1,rep,name=contributors" json:"contributors,omitempty"`
}

func (x *CWorkshop_GetContributors_Response) Reset() {
	*x = CWorkshop_GetContributors_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetContributors_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetContributors_Response) ProtoMessage() {}

func (x *CWorkshop_GetContributors_Response) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetContributors_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetContributors_Response) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{36}
}

func (x *CWorkshop_GetContributors_Response) GetContributors() []uint64 {
	if x != nil {
		return x.Contributors
	}
	return nil
}

type CWorkshop_SetItemPaymentRules_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid                         *uint32                                                          `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Gameitemid                    *uint32                                                          `protobuf:"varint,2,opt,name=gameitemid" json:"gameitemid,omitempty"`
	AssociatedWorkshopFiles       []*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule `protobuf:"bytes,3,rep,name=associated_workshop_files,json=associatedWorkshopFiles" json:"associated_workshop_files,omitempty"`
	PartnerAccounts               []*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule  `protobuf:"bytes,4,rep,name=partner_accounts,json=partnerAccounts" json:"partner_accounts,omitempty"`
	ValidateOnly                  *bool                                                            `protobuf:"varint,5,opt,name=validate_only,json=validateOnly" json:"validate_only,omitempty"`
	MakeWorkshopFilesSubscribable *bool                                                            `protobuf:"varint,6,opt,name=make_workshop_files_subscribable,json=makeWorkshopFilesSubscribable" json:"make_workshop_files_subscribable,omitempty"`
}

func (x *CWorkshop_SetItemPaymentRules_Request) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Request) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Request) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Request) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{37}
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetAssociatedWorkshopFiles() []*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule {
	if x != nil {
		return x.AssociatedWorkshopFiles
	}
	return nil
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetPartnerAccounts() []*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule {
	if x != nil {
		return x.PartnerAccounts
	}
	return nil
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetValidateOnly() bool {
	if x != nil && x.ValidateOnly != nil {
		return *x.ValidateOnly
	}
	return false
}

func (x *CWorkshop_SetItemPaymentRules_Request) GetMakeWorkshopFilesSubscribable() bool {
	if x != nil && x.MakeWorkshopFilesSubscribable != nil {
		return *x.MakeWorkshopFilesSubscribable
	}
	return false
}

type CWorkshop_SetItemPaymentRules_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidationErrors []string `protobuf:"bytes,1,rep,name=validation_errors,json=validationErrors" json:"validation_errors,omitempty"`
}

func (x *CWorkshop_SetItemPaymentRules_Response) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Response) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Response) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Response) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{38}
}

func (x *CWorkshop_SetItemPaymentRules_Response) GetValidationErrors() []string {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

type CCommunity_ClanAnnouncementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gid          *uint64  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Clanid       *uint64  `protobuf:"varint,2,opt,name=clanid" json:"clanid,omitempty"`
	Posterid     *uint64  `protobuf:"varint,3,opt,name=posterid" json:"posterid,omitempty"`
	Headline     *string  `protobuf:"bytes,4,opt,name=headline" json:"headline,omitempty"`
	Posttime     *uint32  `protobuf:"varint,5,opt,name=posttime" json:"posttime,omitempty"`
	Updatetime   *uint32  `protobuf:"varint,6,opt,name=updatetime" json:"updatetime,omitempty"`
	Body         *string  `protobuf:"bytes,7,opt,name=body" json:"body,omitempty"`
	Commentcount *int32   `protobuf:"varint,8,opt,name=commentcount" json:"commentcount,omitempty"`
	Tags         []string `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
	Language     *int32   `protobuf:"varint,10,opt,name=language" json:"language,omitempty"`
	Hidden       *bool    `protobuf:"varint,11,opt,name=hidden" json:"hidden,omitempty"`
	ForumTopicId *uint64  `protobuf:"fixed64,12,opt,name=forum_topic_id,json=forumTopicId" json:"forum_topic_id,omitempty"`
}

func (x *CCommunity_ClanAnnouncementInfo) Reset() {
	*x = CCommunity_ClanAnnouncementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCommunity_ClanAnnouncementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_ClanAnnouncementInfo) ProtoMessage() {}

func (x *CCommunity_ClanAnnouncementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_ClanAnnouncementInfo.ProtoReflect.Descriptor instead.
func (*CCommunity_ClanAnnouncementInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{39}
}

func (x *CCommunity_ClanAnnouncementInfo) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetClanid() uint64 {
	if x != nil && x.Clanid != nil {
		return *x.Clanid
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetPosterid() uint64 {
	if x != nil && x.Posterid != nil {
		return *x.Posterid
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetHeadline() string {
	if x != nil && x.Headline != nil {
		return *x.Headline
	}
	return ""
}

func (x *CCommunity_ClanAnnouncementInfo) GetPosttime() uint32 {
	if x != nil && x.Posttime != nil {
		return *x.Posttime
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetUpdatetime() uint32 {
	if x != nil && x.Updatetime != nil {
		return *x.Updatetime
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *CCommunity_ClanAnnouncementInfo) GetCommentcount() int32 {
	if x != nil && x.Commentcount != nil {
		return *x.Commentcount
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CCommunity_ClanAnnouncementInfo) GetLanguage() int32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *CCommunity_ClanAnnouncementInfo) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *CCommunity_ClanAnnouncementInfo) GetForumTopicId() uint64 {
	if x != nil && x.ForumTopicId != nil {
		return *x.ForumTopicId
	}
	return 0
}

type CCommunity_GetClanAnnouncements_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid              *uint64  `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	Offset               *uint32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Count                *uint32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Maxchars             *uint32  `protobuf:"varint,4,opt,name=maxchars" json:"maxchars,omitempty"`
	StripHtml            *bool    `protobuf:"varint,5,opt,name=strip_html,json=stripHtml" json:"strip_html,omitempty"`
	RequiredTags         []string `protobuf:"bytes,6,rep,name=required_tags,json=requiredTags" json:"required_tags,omitempty"`
	RequireNoTags        *bool    `protobuf:"varint,7,opt,name=require_no_tags,json=requireNoTags" json:"require_no_tags,omitempty"`
	LanguagePreference   []uint32 `protobuf:"varint,8,rep,name=language_preference,json=languagePreference" json:"language_preference,omitempty"`
	HiddenOnly           *bool    `protobuf:"varint,9,opt,name=hidden_only,json=hiddenOnly" json:"hidden_only,omitempty"`
	OnlyGid              *bool    `protobuf:"varint,10,opt,name=only_gid,json=onlyGid" json:"only_gid,omitempty"`
	RtimeOldestDate      *uint32  `protobuf:"varint,11,opt,name=rtime_oldest_date,json=rtimeOldestDate" json:"rtime_oldest_date,omitempty"`
	IncludeHidden        *bool    `protobuf:"varint,12,opt,name=include_hidden,json=includeHidden" json:"include_hidden,omitempty"`
	IncludePartnerEvents *bool    `protobuf:"varint,13,opt,name=include_partner_events,json=includePartnerEvents" json:"include_partner_events,omitempty"`
}

func (x *CCommunity_GetClanAnnouncements_Request) Reset() {
	*x = CCommunity_GetClanAnnouncements_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCommunity_GetClanAnnouncements_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetClanAnnouncements_Request) ProtoMessage() {}

func (x *CCommunity_GetClanAnnouncements_Request) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetClanAnnouncements_Request.ProtoReflect.Descriptor instead.
func (*CCommunity_GetClanAnnouncements_Request) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{40}
}

func (x *CCommunity_GetClanAnnouncements_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CCommunity_GetClanAnnouncements_Request) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *CCommunity_GetClanAnnouncements_Request) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CCommunity_GetClanAnnouncements_Request) GetMaxchars() uint32 {
	if x != nil && x.Maxchars != nil {
		return *x.Maxchars
	}
	return 0
}

func (x *CCommunity_GetClanAnnouncements_Request) GetStripHtml() bool {
	if x != nil && x.StripHtml != nil {
		return *x.StripHtml
	}
	return false
}

func (x *CCommunity_GetClanAnnouncements_Request) GetRequiredTags() []string {
	if x != nil {
		return x.RequiredTags
	}
	return nil
}

func (x *CCommunity_GetClanAnnouncements_Request) GetRequireNoTags() bool {
	if x != nil && x.RequireNoTags != nil {
		return *x.RequireNoTags
	}
	return false
}

func (x *CCommunity_GetClanAnnouncements_Request) GetLanguagePreference() []uint32 {
	if x != nil {
		return x.LanguagePreference
	}
	return nil
}

func (x *CCommunity_GetClanAnnouncements_Request) GetHiddenOnly() bool {
	if x != nil && x.HiddenOnly != nil {
		return *x.HiddenOnly
	}
	return false
}

func (x *CCommunity_GetClanAnnouncements_Request) GetOnlyGid() bool {
	if x != nil && x.OnlyGid != nil {
		return *x.OnlyGid
	}
	return false
}

func (x *CCommunity_GetClanAnnouncements_Request) GetRtimeOldestDate() uint32 {
	if x != nil && x.RtimeOldestDate != nil {
		return *x.RtimeOldestDate
	}
	return 0
}

func (x *CCommunity_GetClanAnnouncements_Request) GetIncludeHidden() bool {
	if x != nil && x.IncludeHidden != nil {
		return *x.IncludeHidden
	}
	return false
}

func (x *CCommunity_GetClanAnnouncements_Request) GetIncludePartnerEvents() bool {
	if x != nil && x.IncludePartnerEvents != nil {
		return *x.IncludePartnerEvents
	}
	return false
}

type CCommunity_GetClanAnnouncements_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maxchars      *uint32                            `protobuf:"varint,1,opt,name=maxchars" json:"maxchars,omitempty"`
	StripHtml     *bool                              `protobuf:"varint,2,opt,name=strip_html,json=stripHtml" json:"strip_html,omitempty"`
	Announcements []*CCommunity_ClanAnnouncementInfo `protobuf:"bytes,3,rep,name=announcements" json:"announcements,omitempty"`
}

func (x *CCommunity_GetClanAnnouncements_Response) Reset() {
	*x = CCommunity_GetClanAnnouncements_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCommunity_GetClanAnnouncements_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetClanAnnouncements_Response) ProtoMessage() {}

func (x *CCommunity_GetClanAnnouncements_Response) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetClanAnnouncements_Response.ProtoReflect.Descriptor instead.
func (*CCommunity_GetClanAnnouncements_Response) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{41}
}

func (x *CCommunity_GetClanAnnouncements_Response) GetMaxchars() uint32 {
	if x != nil && x.Maxchars != nil {
		return *x.Maxchars
	}
	return 0
}

func (x *CCommunity_GetClanAnnouncements_Response) GetStripHtml() bool {
	if x != nil && x.StripHtml != nil {
		return *x.StripHtml
	}
	return false
}

func (x *CCommunity_GetClanAnnouncements_Response) GetAnnouncements() []*CCommunity_ClanAnnouncementInfo {
	if x != nil {
		return x.Announcements
	}
	return nil
}

type CBroadcast_PostGameDataFrame_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid       *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid     *uint64 `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	BroadcastId *uint64 `protobuf:"fixed64,3,opt,name=broadcast_id,json=broadcastId" json:"broadcast_id,omitempty"`
	FrameData   []byte  `protobuf:"bytes,4,opt,name=frame_data,json=frameData" json:"frame_data,omitempty"`
}

func (x *CBroadcast_PostGameDataFrame_Request) Reset() {
	*x = CBroadcast_PostGameDataFrame_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBroadcast_PostGameDataFrame_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBroadcast_PostGameDataFrame_Request) ProtoMessage() {}

func (x *CBroadcast_PostGameDataFrame_Request) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBroadcast_PostGameDataFrame_Request.ProtoReflect.Descriptor instead.
func (*CBroadcast_PostGameDataFrame_Request) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{42}
}

func (x *CBroadcast_PostGameDataFrame_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CBroadcast_PostGameDataFrame_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CBroadcast_PostGameDataFrame_Request) GetBroadcastId() uint64 {
	if x != nil && x.BroadcastId != nil {
		return *x.BroadcastId
	}
	return 0
}

func (x *CBroadcast_PostGameDataFrame_Request) GetFrameData() []byte {
	if x != nil {
		return x.FrameData
	}
	return nil
}

type CMsgSerializedSOCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileVersion          *uint32                        `protobuf:"varint,1,opt,name=file_version,json=fileVersion" json:"file_version,omitempty"`
	Caches               []*CMsgSerializedSOCache_Cache `protobuf:"bytes,2,rep,name=caches" json:"caches,omitempty"`
	GcSocacheFileVersion *uint32                        `protobuf:"varint,3,opt,name=gc_socache_file_version,json=gcSocacheFileVersion" json:"gc_socache_file_version,omitempty"`
}

func (x *CMsgSerializedSOCache) Reset() {
	*x = CMsgSerializedSOCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSerializedSOCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSerializedSOCache) ProtoMessage() {}

func (x *CMsgSerializedSOCache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSerializedSOCache.ProtoReflect.Descriptor instead.
func (*CMsgSerializedSOCache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgSerializedSOCache) GetFileVersion() uint32 {
	if x != nil && x.FileVersion != nil {
		return *x.FileVersion
	}
	return 0
}

func (x *CMsgSerializedSOCache) GetCaches() []*CMsgSerializedSOCache_Cache {
	if x != nil {
		return x.Caches
	}
	return nil
}

func (x *CMsgSerializedSOCache) GetGcSocacheFileVersion() uint32 {
	if x != nil && x.GcSocacheFileVersion != nil {
		return *x.GcSocacheFileVersion
	}
	return 0
}

type CMsgGCToClientPollConvarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConvarName *string `protobuf:"bytes,1,opt,name=convar_name,json=convarName" json:"convar_name,omitempty"`
	PollId     *uint32 `protobuf:"varint,2,opt,name=poll_id,json=pollId" json:"poll_id,omitempty"`
}

func (x *CMsgGCToClientPollConvarRequest) Reset() {
	*x = CMsgGCToClientPollConvarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientPollConvarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientPollConvarRequest) ProtoMessage() {}

func (x *CMsgGCToClientPollConvarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientPollConvarRequest.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientPollConvarRequest) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgGCToClientPollConvarRequest) GetConvarName() string {
	if x != nil && x.ConvarName != nil {
		return *x.ConvarName
	}
	return ""
}

func (x *CMsgGCToClientPollConvarRequest) GetPollId() uint32 {
	if x != nil && x.PollId != nil {
		return *x.PollId
	}
	return 0
}

type CMsgGCToClientPollConvarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PollId      *uint32 `protobuf:"varint,1,opt,name=poll_id,json=pollId" json:"poll_id,omitempty"`
	ConvarValue *string `protobuf:"bytes,2,opt,name=convar_value,json=convarValue" json:"convar_value,omitempty"`
}

func (x *CMsgGCToClientPollConvarResponse) Reset() {
	*x = CMsgGCToClientPollConvarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientPollConvarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientPollConvarResponse) ProtoMessage() {}

func (x *CMsgGCToClientPollConvarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientPollConvarResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientPollConvarResponse) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgGCToClientPollConvarResponse) GetPollId() uint32 {
	if x != nil && x.PollId != nil {
		return *x.PollId
	}
	return 0
}

func (x *CMsgGCToClientPollConvarResponse) GetConvarValue() string {
	if x != nil && x.ConvarValue != nil {
		return *x.ConvarValue
	}
	return ""
}

type CGCMsgCompressedMsgToClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId         *uint32 `protobuf:"varint,1,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	CompressedMsg []byte  `protobuf:"bytes,2,opt,name=compressed_msg,json=compressedMsg" json:"compressed_msg,omitempty"`
}

func (x *CGCMsgCompressedMsgToClient) Reset() {
	*x = CGCMsgCompressedMsgToClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCMsgCompressedMsgToClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCMsgCompressedMsgToClient) ProtoMessage() {}

func (x *CGCMsgCompressedMsgToClient) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCMsgCompressedMsgToClient.ProtoReflect.Descriptor instead.
func (*CGCMsgCompressedMsgToClient) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{46}
}

func (x *CGCMsgCompressedMsgToClient) GetMsgId() uint32 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *CGCMsgCompressedMsgToClient) GetCompressedMsg() []byte {
	if x != nil {
		return x.CompressedMsg
	}
	return nil
}

type CMsgGCToGCMasterBroadcastMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsersPerSecond *uint32 `protobuf:"varint,1,opt,name=users_per_second,json=usersPerSecond" json:"users_per_second,omitempty"`
	SendToUsers    *bool   `protobuf:"varint,2,opt,name=send_to_users,json=sendToUsers" json:"send_to_users,omitempty"`
	SendToServers  *bool   `protobuf:"varint,3,opt,name=send_to_servers,json=sendToServers" json:"send_to_servers,omitempty"`
	MsgId          *uint32 `protobuf:"varint,4,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	MsgData        []byte  `protobuf:"bytes,5,opt,name=msg_data,json=msgData" json:"msg_data,omitempty"`
}

func (x *CMsgGCToGCMasterBroadcastMessage) Reset() {
	*x = CMsgGCToGCMasterBroadcastMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCMasterBroadcastMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCMasterBroadcastMessage) ProtoMessage() {}

func (x *CMsgGCToGCMasterBroadcastMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCMasterBroadcastMessage.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCMasterBroadcastMessage) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgGCToGCMasterBroadcastMessage) GetUsersPerSecond() uint32 {
	if x != nil && x.UsersPerSecond != nil {
		return *x.UsersPerSecond
	}
	return 0
}

func (x *CMsgGCToGCMasterBroadcastMessage) GetSendToUsers() bool {
	if x != nil && x.SendToUsers != nil {
		return *x.SendToUsers
	}
	return false
}

func (x *CMsgGCToGCMasterBroadcastMessage) GetSendToServers() bool {
	if x != nil && x.SendToServers != nil {
		return *x.SendToServers
	}
	return false
}

func (x *CMsgGCToGCMasterBroadcastMessage) GetMsgId() uint32 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *CMsgGCToGCMasterBroadcastMessage) GetMsgData() []byte {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type CMsgGCToGCMasterSubscribeToCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoidType   *uint32  `protobuf:"varint,1,opt,name=soid_type,json=soidType" json:"soid_type,omitempty"`
	SoidId     *uint64  `protobuf:"fixed64,2,opt,name=soid_id,json=soidId" json:"soid_id,omitempty"`
	AccountIds []uint32 `protobuf:"varint,3,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	SteamIds   []uint64 `protobuf:"fixed64,4,rep,name=steam_ids,json=steamIds" json:"steam_ids,omitempty"`
}

func (x *CMsgGCToGCMasterSubscribeToCache) Reset() {
	*x = CMsgGCToGCMasterSubscribeToCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCMasterSubscribeToCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCMasterSubscribeToCache) ProtoMessage() {}

func (x *CMsgGCToGCMasterSubscribeToCache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCMasterSubscribeToCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCMasterSubscribeToCache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgGCToGCMasterSubscribeToCache) GetSoidType() uint32 {
	if x != nil && x.SoidType != nil {
		return *x.SoidType
	}
	return 0
}

func (x *CMsgGCToGCMasterSubscribeToCache) GetSoidId() uint64 {
	if x != nil && x.SoidId != nil {
		return *x.SoidId
	}
	return 0
}

func (x *CMsgGCToGCMasterSubscribeToCache) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

func (x *CMsgGCToGCMasterSubscribeToCache) GetSteamIds() []uint64 {
	if x != nil {
		return x.SteamIds
	}
	return nil
}

type CMsgGCToGCMasterSubscribeToCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCMasterSubscribeToCacheResponse) Reset() {
	*x = CMsgGCToGCMasterSubscribeToCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCMasterSubscribeToCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCMasterSubscribeToCacheResponse) ProtoMessage() {}

func (x *CMsgGCToGCMasterSubscribeToCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCMasterSubscribeToCacheResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCMasterSubscribeToCacheResponse) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{49}
}

type CMsgGCToGCMasterSubscribeToCacheAsync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscribeMsg *CMsgGCToGCMasterSubscribeToCache `protobuf:"bytes,1,opt,name=subscribe_msg,json=subscribeMsg" json:"subscribe_msg,omitempty"`
}

func (x *CMsgGCToGCMasterSubscribeToCacheAsync) Reset() {
	*x = CMsgGCToGCMasterSubscribeToCacheAsync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCMasterSubscribeToCacheAsync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCMasterSubscribeToCacheAsync) ProtoMessage() {}

func (x *CMsgGCToGCMasterSubscribeToCacheAsync) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCMasterSubscribeToCacheAsync.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCMasterSubscribeToCacheAsync) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgGCToGCMasterSubscribeToCacheAsync) GetSubscribeMsg() *CMsgGCToGCMasterSubscribeToCache {
	if x != nil {
		return x.SubscribeMsg
	}
	return nil
}

type CMsgGCToGCMasterUnsubscribeFromCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoidType   *uint32  `protobuf:"varint,1,opt,name=soid_type,json=soidType" json:"soid_type,omitempty"`
	SoidId     *uint64  `protobuf:"fixed64,2,opt,name=soid_id,json=soidId" json:"soid_id,omitempty"`
	AccountIds []uint32 `protobuf:"varint,3,rep,name=account_ids,json=accountIds" json:"account_ids,omitempty"`
	SteamIds   []uint64 `protobuf:"fixed64,4,rep,name=steam_ids,json=steamIds" json:"steam_ids,omitempty"`
}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) Reset() {
	*x = CMsgGCToGCMasterUnsubscribeFromCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCMasterUnsubscribeFromCache) ProtoMessage() {}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCMasterUnsubscribeFromCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCMasterUnsubscribeFromCache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) GetSoidType() uint32 {
	if x != nil && x.SoidType != nil {
		return *x.SoidType
	}
	return 0
}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) GetSoidId() uint64 {
	if x != nil && x.SoidId != nil {
		return *x.SoidId
	}
	return 0
}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) GetAccountIds() []uint32 {
	if x != nil {
		return x.AccountIds
	}
	return nil
}

func (x *CMsgGCToGCMasterUnsubscribeFromCache) GetSteamIds() []uint64 {
	if x != nil {
		return x.SteamIds
	}
	return nil
}

type CMsgGCToGCMasterDestroyCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoidType *uint32 `protobuf:"varint,1,opt,name=soid_type,json=soidType" json:"soid_type,omitempty"`
	SoidId   *uint64 `protobuf:"fixed64,2,opt,name=soid_id,json=soidId" json:"soid_id,omitempty"`
}

func (x *CMsgGCToGCMasterDestroyCache) Reset() {
	*x = CMsgGCToGCMasterDestroyCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCMasterDestroyCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCMasterDestroyCache) ProtoMessage() {}

func (x *CMsgGCToGCMasterDestroyCache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCMasterDestroyCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCMasterDestroyCache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgGCToGCMasterDestroyCache) GetSoidType() uint32 {
	if x != nil && x.SoidType != nil {
		return *x.SoidType
	}
	return 0
}

func (x *CMsgGCToGCMasterDestroyCache) GetSoidId() uint64 {
	if x != nil && x.SoidId != nil {
		return *x.SoidId
	}
	return 0
}

type CMsgSOMultipleObjects_SingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData []byte `protobuf:"bytes,2,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
}

func (x *CMsgSOMultipleObjects_SingleObject) Reset() {
	*x = CMsgSOMultipleObjects_SingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOMultipleObjects_SingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects_SingleObject) ProtoMessage() {}

func (x *CMsgSOMultipleObjects_SingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects_SingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects_SingleObject) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgSOMultipleObjects_SingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOMultipleObjects_SingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CMsgSOCacheSubscribed_SubscribedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId     *int32   `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData [][]byte `protobuf:"bytes,2,rep,name=object_data,json=objectData" json:"object_data,omitempty"`
}

func (x *CMsgSOCacheSubscribed_SubscribedType) Reset() {
	*x = CMsgSOCacheSubscribed_SubscribedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed_SubscribedType) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed_SubscribedType) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed_SubscribedType.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed_SubscribedType) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetObjectData() [][]byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CGCToGCMsgMasterAck_Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex      *uint32  `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	TypeInstances []uint32 `protobuf:"varint,2,rep,name=type_instances,json=typeInstances" json:"type_instances,omitempty"`
}

func (x *CGCToGCMsgMasterAck_Process) Reset() {
	*x = CGCToGCMsgMasterAck_Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterAck_Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck_Process) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck_Process) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck_Process.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck_Process) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CGCToGCMsgMasterAck_Process) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterAck_Process) GetTypeInstances() []uint32 {
	if x != nil {
		return x.TypeInstances
	}
	return nil
}

type CGCToGCMsgMasterStartupComplete_GCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirIndex    *uint32 `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	MachineName *string `protobuf:"bytes,2,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) Reset() {
	*x = CGCToGCMsgMasterStartupComplete_GCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete_GCInfo) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete_GCInfo.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete_GCInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{16, 0}
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

type CMsgGCUpdateSubGCSessionInfo_CMsgUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Ip      *uint32 `protobuf:"fixed32,2,opt,name=ip" json:"ip,omitempty"`
	Trusted *bool   `protobuf:"varint,3,opt,name=trusted" json:"trusted,omitempty"`
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Reset() {
	*x = CMsgGCUpdateSubGCSessionInfo_CMsgUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoMessage() {}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSubGCSessionInfo_CMsgUpdate.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{19, 0}
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

type CMsgClientWelcome_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	Country   *string  `protobuf:"bytes,3,opt,name=country" json:"country,omitempty"`
}

func (x *CMsgClientWelcome_Location) Reset() {
	*x = CMsgClientWelcome_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientWelcome_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientWelcome_Location) ProtoMessage() {}

func (x *CMsgClientWelcome_Location) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientWelcome_Location.ProtoReflect.Descriptor instead.
func (*CMsgClientWelcome_Location) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{24, 0}
}

func (x *CMsgClientWelcome_Location) GetLatitude() float32 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *CMsgClientWelcome_Location) GetLongitude() float32 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *CMsgClientWelcome_Location) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

type CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId *uint32 `protobuf:"varint,1,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	Version   *uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Reset() {
	*x = CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{26, 0}
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gameitemid      *uint32 `protobuf:"varint,1,opt,name=gameitemid" json:"gameitemid,omitempty"`
	ItemDescription *string `protobuf:"bytes,2,opt,name=item_description,json=itemDescription" json:"item_description,omitempty"`
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) Reset() {
	*x = CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) ProtoMessage() {}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription.ProtoReflect.Descriptor instead.
func (*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{34, 0}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetGameitemid() uint32 {
	if x != nil && x.Gameitemid != nil {
		return *x.Gameitemid
	}
	return 0
}

func (x *CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription) GetItemDescription() string {
	if x != nil && x.ItemDescription != nil {
		return *x.ItemDescription
	}
	return ""
}

type CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language     *string                                                             `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Descriptions []*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription `protobuf:"bytes,2,rep,name=descriptions" json:"descriptions,omitempty"`
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) Reset() {
	*x = CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) ProtoMessage() {}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock.ProtoReflect.Descriptor instead.
func (*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{34, 1}
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock) GetDescriptions() []*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

type CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkshopFileId    *uint64  `protobuf:"varint,1,opt,name=workshop_file_id,json=workshopFileId" json:"workshop_file_id,omitempty"`
	RevenuePercentage *float32 `protobuf:"fixed32,2,opt,name=revenue_percentage,json=revenuePercentage" json:"revenue_percentage,omitempty"`
	RuleDescription   *string  `protobuf:"bytes,3,opt,name=rule_description,json=ruleDescription" json:"rule_description,omitempty"`
	RuleType          *uint32  `protobuf:"varint,4,opt,name=rule_type,json=ruleType" json:"rule_type,omitempty"`
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{37, 0}
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetWorkshopFileId() uint64 {
	if x != nil && x.WorkshopFileId != nil {
		return *x.WorkshopFileId
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetRevenuePercentage() float32 {
	if x != nil && x.RevenuePercentage != nil {
		return *x.RevenuePercentage
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetRuleDescription() string {
	if x != nil && x.RuleDescription != nil {
		return *x.RuleDescription
	}
	return ""
}

func (x *CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule) GetRuleType() uint32 {
	if x != nil && x.RuleType != nil {
		return *x.RuleType
	}
	return 0
}

type CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId         *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	RevenuePercentage *float32 `protobuf:"fixed32,2,opt,name=revenue_percentage,json=revenuePercentage" json:"revenue_percentage,omitempty"`
	RuleDescription   *string  `protobuf:"bytes,3,opt,name=rule_description,json=ruleDescription" json:"rule_description,omitempty"`
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) Reset() {
	*x = CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) ProtoMessage() {}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule.ProtoReflect.Descriptor instead.
func (*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{37, 1}
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) GetRevenuePercentage() float32 {
	if x != nil && x.RevenuePercentage != nil {
		return *x.RevenuePercentage
	}
	return 0
}

func (x *CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule) GetRuleDescription() string {
	if x != nil && x.RuleDescription != nil {
		return *x.RuleDescription
	}
	return ""
}

type CMsgSerializedSOCache_TypeCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *uint32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Objects   [][]byte `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	ServiceId *uint32  `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (x *CMsgSerializedSOCache_TypeCache) Reset() {
	*x = CMsgSerializedSOCache_TypeCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSerializedSOCache_TypeCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSerializedSOCache_TypeCache) ProtoMessage() {}

func (x *CMsgSerializedSOCache_TypeCache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSerializedSOCache_TypeCache.ProtoReflect.Descriptor instead.
func (*CMsgSerializedSOCache_TypeCache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{43, 0}
}

func (x *CMsgSerializedSOCache_TypeCache) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSerializedSOCache_TypeCache) GetObjects() [][]byte {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSerializedSOCache_TypeCache) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSerializedSOCache_Cache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *uint32                                `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id         *uint64                                `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Versions   []*CMsgSerializedSOCache_Cache_Version `protobuf:"bytes,3,rep,name=versions" json:"versions,omitempty"`
	TypeCaches []*CMsgSerializedSOCache_TypeCache     `protobuf:"bytes,4,rep,name=type_caches,json=typeCaches" json:"type_caches,omitempty"`
}

func (x *CMsgSerializedSOCache_Cache) Reset() {
	*x = CMsgSerializedSOCache_Cache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSerializedSOCache_Cache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSerializedSOCache_Cache) ProtoMessage() {}

func (x *CMsgSerializedSOCache_Cache) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSerializedSOCache_Cache.ProtoReflect.Descriptor instead.
func (*CMsgSerializedSOCache_Cache) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{43, 1}
}

func (x *CMsgSerializedSOCache_Cache) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSerializedSOCache_Cache) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgSerializedSOCache_Cache) GetVersions() []*CMsgSerializedSOCache_Cache_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *CMsgSerializedSOCache_Cache) GetTypeCaches() []*CMsgSerializedSOCache_TypeCache {
	if x != nil {
		return x.TypeCaches
	}
	return nil
}

type CMsgSerializedSOCache_Cache_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *uint32 `protobuf:"varint,1,opt,name=service" json:"service,omitempty"`
	Version *uint64 `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (x *CMsgSerializedSOCache_Cache_Version) Reset() {
	*x = CMsgSerializedSOCache_Cache_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gcsdk_gcmessages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSerializedSOCache_Cache_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSerializedSOCache_Cache_Version) ProtoMessage() {}

func (x *CMsgSerializedSOCache_Cache_Version) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSerializedSOCache_Cache_Version.ProtoReflect.Descriptor instead.
func (*CMsgSerializedSOCache_Cache_Version) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{43, 1, 0}
}

func (x *CMsgSerializedSOCache_Cache_Version) GetService() uint32 {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return 0
}

func (x *CMsgSerializedSOCache_Cache_Version) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

var File_gcsdk_gcmessages_proto protoreflect.FileDescriptor

var file_gcsdk_gcmessages_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x63, 0x73, 0x64, 0x6b, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a, 0x13,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x48, 0x41, 0x31, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x31, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x06, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x31, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x32, 0x18, 0x02, 0x20, 0x02, 0x28, 0x06, 0x52, 0x06, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x33, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x07, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x33, 0x22, 0x33, 0x0a,
	0x0d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49,
	0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0xd1, 0x03, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x10, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x4f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0d, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x54,
	0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x0a, 0x80, 0xa6, 0x1d, 0x80, 0x02, 0x88,
	0xa6, 0x1d, 0x80, 0x08, 0x22, 0xdc, 0x02, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x44,
	0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f,
	0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4a, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x55, 0x70, 0x54,
	0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53,
	0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x79, 0x6e,
	0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x22, 0xd1, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x53, 0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b,
	0x73, 0x79, 0x6e, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x1e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x32, 0x0a,
	0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49,
	0x44, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x6f, 0x69,
	0x64, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x68, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73,
	0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x06, 0x52, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x17, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x75, 0x62, 0x47, 0x43, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x69, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x88, 0x02, 0x0a, 0x13, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x64, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x1a,
	0x4d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0d, 0x74, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x3b,
	0x0a, 0x1c, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x19, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x22, 0x3d, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x1f, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75,
	0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x67, 0x63, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x2e, 0x47, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x67, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x48, 0x0a, 0x06, 0x47, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x10, 0x43, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x15, 0x43, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x6e, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb9, 0x01, 0x0a,
	0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x47, 0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x47, 0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x0a, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x43, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x47, 0x43, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x04, 0x73, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x49, 0x44, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x04, 0x73, 0x6f, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xd0, 0x06, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x50, 0x0a, 0x15, 0x73, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x73, 0x6f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x48, 0x61, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x65,
	0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x0c, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x45, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x3a,
	0x0d, 0x6b, 0x5f, 0x45, 0x53, 0x45, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x52, 0x06,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64,
	0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72,
	0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0xb1, 0x06, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x5b, 0x0a, 0x1b, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x52, 0x19, 0x6f, 0x75, 0x74, 0x6f, 0x66, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x60,
	0x0a, 0x1a, 0x75, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x4f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x18, 0x75, 0x70, 0x74, 0x6f, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73,
	0x12, 0x3c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x61, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0d, 0x69, 0x74, 0x65,
	0x6d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x43, 0x72, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x35, 0x0a, 0x17, 0x67, 0x63, 0x5f, 0x73, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x14, 0x67, 0x63, 0x53, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x78, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x78, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32,
	0x12, 0x3f, 0x0a, 0x1c, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x33, 0x32, 0x5f, 0x67, 0x63, 0x5f, 0x77,
	0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x33, 0x32, 0x47,
	0x63, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x1a, 0x5e, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xcb, 0x02, 0x0a, 0x14, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x1f, 0x47, 0x43, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x48, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x65, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61,
	0x69, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x47, 0x0a,
	0x20, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x5f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xd8, 0x02, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x56, 0x0a, 0x0d, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x61,
	0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x68, 0x61, 0x76, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x4b, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x76, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x11, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x22, 0xb4, 0x01, 0x0a, 0x1f, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x56, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x47, 0x43, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4d, 0x73, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x4c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x4f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x5d, 0x0a, 0x17, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x15, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x26, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x6f,
	0x61, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x72, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x53, 0x75, 0x72, 0x67, 0x65, 0x22, 0x1e, 0x0a,
	0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x22, 0xbe, 0x03,
	0x0a, 0x2a, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x6c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x1a, 0x62, 0x0a, 0x15, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa7, 0x01, 0x0a, 0x1d, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x6a, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x59,
	0x0a, 0x21, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x22, 0x43, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x73, 0x22, 0x8c, 0x06, 0x0a, 0x25, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x12, 0x7f, 0x0a, 0x19, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x17, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x20, 0x6d, 0x61, 0x6b, 0x65,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x6d, 0x61, 0x6b, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x61, 0x62, 0x6c,
	0x65, 0x1a, 0xba, 0x01, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f,
	0x70, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x91,
	0x01, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x26, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xe5, 0x02, 0x0a, 0x1f, 0x43, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x43, 0x6c, 0x61, 0x6e, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x63, 0x6c, 0x61, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x66,
	0x6f, 0x72, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x22, 0xef, 0x03, 0x0a, 0x27, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x63, 0x68, 0x61, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x63, 0x68, 0x61, 0x72,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x48, 0x74, 0x6d, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x6e, 0x6f, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4e, 0x6f, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2f, 0x0a,
	0x13, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x12, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4f, 0x6e, 0x6c, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6f, 0x6e, 0x6c, 0x79, 0x47, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x6c, 0x64, 0x65,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x34, 0x0a,
	0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x28, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x63, 0x68, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x63, 0x68, 0x61, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x70, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x4b, 0x0a, 0x0d, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x5f, 0x43, 0x6c, 0x61, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x24, 0x43, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x50, 0x6f, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x82, 0x04, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x67,
	0x63, 0x5f, 0x73, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x67, 0x63,
	0x53, 0x6f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x58, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xf9, 0x01, 0x0a,
	0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x46, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x4f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x0a, 0x74,
	0x79, 0x70, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x76, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x76, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70,
	0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x61, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5b, 0x0a, 0x1b, 0x43, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x4d,
	0x73, 0x67, 0x22, 0xca, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x96, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x69, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x06, 0x73, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x08,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x4b, 0x0a,
	0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x0c, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x9a, 0x01, 0x0a, 0x24, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x06, 0x73, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x06, 0x52, 0x08, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x69, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x69, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x73, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x2a, 0x35, 0x0a,
	0x0d, 0x45, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x6b, 0x5f, 0x45, 0x53, 0x45, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x5f, 0x45, 0x53, 0x45, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x32, 0x10, 0x01, 0x2a, 0x56, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x41,
	0x52, 0x54, 0x4e, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x45, 0x43, 0x54, 0x5f,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x52, 0x54, 0x4e,
	0x45, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x03, 0x2a, 0xa0, 0x02, 0x0a,
	0x12, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x53,
	0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x43, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x47,
	0x43, 0x5f, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x21,
	0x0a, 0x1d, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x02, 0x12, 0x30, 0x0a, 0x2c, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x54, 0x45,
	0x41, 0x4d, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45,
	0x4e, 0x44, 0x45, 0x44, 0x10, 0x05, 0x12, 0x27, 0x0a, 0x23, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x54, 0x45,
	0x41, 0x4d, 0x5f, 0x47, 0x4f, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x42,
	0x05, 0x48, 0x01, 0x80, 0x01, 0x00,
}

var (
	file_gcsdk_gcmessages_proto_rawDescOnce sync.Once
	file_gcsdk_gcmessages_proto_rawDescData = file_gcsdk_gcmessages_proto_rawDesc
)

func file_gcsdk_gcmessages_proto_rawDescGZIP() []byte {
	file_gcsdk_gcmessages_proto_rawDescOnce.Do(func() {
		file_gcsdk_gcmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_gcsdk_gcmessages_proto_rawDescData)
	})
	return file_gcsdk_gcmessages_proto_rawDescData
}

var file_gcsdk_gcmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_gcsdk_gcmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_gcsdk_gcmessages_proto_goTypes = []interface{}{
	(ESourceEngine)(0),                                                               // 0: dota.ESourceEngine
	(PartnerAccountType)(0),                                                          // 1: dota.PartnerAccountType
	(GCConnectionStatus)(0),                                                          // 2: dota.GCConnectionStatus
	(*CMsgSHA1Digest)(nil),                                                           // 3: dota.CMsgSHA1Digest
	(*CMsgSOIDOwner)(nil),                                                            // 4: dota.CMsgSOIDOwner
	(*CMsgSOSingleObject)(nil),                                                       // 5: dota.CMsgSOSingleObject
	(*CMsgSOMultipleObjects)(nil),                                                    // 6: dota.CMsgSOMultipleObjects
	(*CMsgSOCacheSubscribed)(nil),                                                    // 7: dota.CMsgSOCacheSubscribed
	(*CMsgSOCacheSubscribedUpToDate)(nil),                                            // 8: dota.CMsgSOCacheSubscribedUpToDate
	(*CMsgSOCacheUnsubscribed)(nil),                                                  // 9: dota.CMsgSOCacheUnsubscribed
	(*CMsgSOCacheSubscriptionCheck)(nil),                                             // 10: dota.CMsgSOCacheSubscriptionCheck
	(*CMsgSOCacheSubscriptionRefresh)(nil),                                           // 11: dota.CMsgSOCacheSubscriptionRefresh
	(*CMsgSOCacheVersion)(nil),                                                       // 12: dota.CMsgSOCacheVersion
	(*CMsgGCMultiplexMessage)(nil),                                                   // 13: dota.CMsgGCMultiplexMessage
	(*CMsgGCToGCSubGCStarting)(nil),                                                  // 14: dota.CMsgGCToGCSubGCStarting
	(*CGCToGCMsgMasterAck)(nil),                                                      // 15: dota.CGCToGCMsgMasterAck
	(*CGCToGCMsgMasterAck_Response)(nil),                                             // 16: dota.CGCToGCMsgMasterAck_Response
	(*CMsgGCToGCUniverseStartup)(nil),                                                // 17: dota.CMsgGCToGCUniverseStartup
	(*CMsgGCToGCUniverseStartupResponse)(nil),                                        // 18: dota.CMsgGCToGCUniverseStartupResponse
	(*CGCToGCMsgMasterStartupComplete)(nil),                                          // 19: dota.CGCToGCMsgMasterStartupComplete
	(*CGCToGCMsgRouted)(nil),                                                         // 20: dota.CGCToGCMsgRouted
	(*CGCToGCMsgRoutedReply)(nil),                                                    // 21: dota.CGCToGCMsgRoutedReply
	(*CMsgGCUpdateSubGCSessionInfo)(nil),                                             // 22: dota.CMsgGCUpdateSubGCSessionInfo
	(*CMsgGCRequestSubGCSessionInfo)(nil),                                            // 23: dota.CMsgGCRequestSubGCSessionInfo
	(*CMsgGCRequestSubGCSessionInfoResponse)(nil),                                    // 24: dota.CMsgGCRequestSubGCSessionInfoResponse
	(*CMsgSOCacheHaveVersion)(nil),                                                   // 25: dota.CMsgSOCacheHaveVersion
	(*CMsgClientHello)(nil),                                                          // 26: dota.CMsgClientHello
	(*CMsgClientWelcome)(nil),                                                        // 27: dota.CMsgClientWelcome
	(*CMsgConnectionStatus)(nil),                                                     // 28: dota.CMsgConnectionStatus
	(*CMsgGCToGCSOCacheSubscribe)(nil),                                               // 29: dota.CMsgGCToGCSOCacheSubscribe
	(*CMsgGCToGCSOCacheUnsubscribe)(nil),                                             // 30: dota.CMsgGCToGCSOCacheUnsubscribe
	(*CMsgGCClientPing)(nil),                                                         // 31: dota.CMsgGCClientPing
	(*CMsgGCToGCForwardAccountDetails)(nil),                                          // 32: dota.CMsgGCToGCForwardAccountDetails
	(*CMsgGCToGCLoadSessionSOCache)(nil),                                             // 33: dota.CMsgGCToGCLoadSessionSOCache
	(*CMsgGCToGCLoadSessionSOCacheResponse)(nil),                                     // 34: dota.CMsgGCToGCLoadSessionSOCacheResponse
	(*CMsgGCToGCUpdateSessionStats)(nil),                                             // 35: dota.CMsgGCToGCUpdateSessionStats
	(*CMsgGCToClientRequestDropped)(nil),                                             // 36: dota.CMsgGCToClientRequestDropped
	(*CWorkshop_PopulateItemDescriptions_Request)(nil),                               // 37: dota.CWorkshop_PopulateItemDescriptions_Request
	(*CWorkshop_GetContributors_Request)(nil),                                        // 38: dota.CWorkshop_GetContributors_Request
	(*CWorkshop_GetContributors_Response)(nil),                                       // 39: dota.CWorkshop_GetContributors_Response
	(*CWorkshop_SetItemPaymentRules_Request)(nil),                                    // 40: dota.CWorkshop_SetItemPaymentRules_Request
	(*CWorkshop_SetItemPaymentRules_Response)(nil),                                   // 41: dota.CWorkshop_SetItemPaymentRules_Response
	(*CCommunity_ClanAnnouncementInfo)(nil),                                          // 42: dota.CCommunity_ClanAnnouncementInfo
	(*CCommunity_GetClanAnnouncements_Request)(nil),                                  // 43: dota.CCommunity_GetClanAnnouncements_Request
	(*CCommunity_GetClanAnnouncements_Response)(nil),                                 // 44: dota.CCommunity_GetClanAnnouncements_Response
	(*CBroadcast_PostGameDataFrame_Request)(nil),                                     // 45: dota.CBroadcast_PostGameDataFrame_Request
	(*CMsgSerializedSOCache)(nil),                                                    // 46: dota.CMsgSerializedSOCache
	(*CMsgGCToClientPollConvarRequest)(nil),                                          // 47: dota.CMsgGCToClientPollConvarRequest
	(*CMsgGCToClientPollConvarResponse)(nil),                                         // 48: dota.CMsgGCToClientPollConvarResponse
	(*CGCMsgCompressedMsgToClient)(nil),                                              // 49: dota.CGCMsgCompressedMsgToClient
	(*CMsgGCToGCMasterBroadcastMessage)(nil),                                         // 50: dota.CMsgGCToGCMasterBroadcastMessage
	(*CMsgGCToGCMasterSubscribeToCache)(nil),                                         // 51: dota.CMsgGCToGCMasterSubscribeToCache
	(*CMsgGCToGCMasterSubscribeToCacheResponse)(nil),                                 // 52: dota.CMsgGCToGCMasterSubscribeToCacheResponse
	(*CMsgGCToGCMasterSubscribeToCacheAsync)(nil),                                    // 53: dota.CMsgGCToGCMasterSubscribeToCacheAsync
	(*CMsgGCToGCMasterUnsubscribeFromCache)(nil),                                     // 54: dota.CMsgGCToGCMasterUnsubscribeFromCache
	(*CMsgGCToGCMasterDestroyCache)(nil),                                             // 55: dota.CMsgGCToGCMasterDestroyCache
	(*CMsgSOMultipleObjects_SingleObject)(nil),                                       // 56: dota.CMsgSOMultipleObjects.SingleObject
	(*CMsgSOCacheSubscribed_SubscribedType)(nil),                                     // 57: dota.CMsgSOCacheSubscribed.SubscribedType
	(*CGCToGCMsgMasterAck_Process)(nil),                                              // 58: dota.CGCToGCMsgMasterAck.Process
	(*CGCToGCMsgMasterStartupComplete_GCInfo)(nil),                                   // 59: dota.CGCToGCMsgMasterStartupComplete.GCInfo
	(*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate)(nil),                                  // 60: dota.CMsgGCUpdateSubGCSessionInfo.CMsgUpdate
	(*CMsgClientWelcome_Location)(nil),                                               // 61: dota.CMsgClientWelcome.Location
	(*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions)(nil),                              // 62: dota.CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions
	(*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription)(nil),         // 63: dota.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
	(*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock)(nil), // 64: dota.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
	(*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule)(nil),            // 65: dota.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
	(*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule)(nil),             // 66: dota.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
	(*CMsgSerializedSOCache_TypeCache)(nil),                                          // 67: dota.CMsgSerializedSOCache.TypeCache
	(*CMsgSerializedSOCache_Cache)(nil),                                              // 68: dota.CMsgSerializedSOCache.Cache
	(*CMsgSerializedSOCache_Cache_Version)(nil),                                      // 69: dota.CMsgSerializedSOCache.Cache.Version
	(*CGCSystemMsg_GetAccountDetails_Response)(nil),                                  // 70: dota.CGCSystemMsg_GetAccountDetails_Response
}
var file_gcsdk_gcmessages_proto_depIdxs = []int32{
	4,  // 0: dota.CMsgSOSingleObject.owner_soid:type_name -> dota.CMsgSOIDOwner
	56, // 1: dota.CMsgSOMultipleObjects.objects_modified:type_name -> dota.CMsgSOMultipleObjects.SingleObject
	56, // 2: dota.CMsgSOMultipleObjects.objects_added:type_name -> dota.CMsgSOMultipleObjects.SingleObject
	56, // 3: dota.CMsgSOMultipleObjects.objects_removed:type_name -> dota.CMsgSOMultipleObjects.SingleObject
	4,  // 4: dota.CMsgSOMultipleObjects.owner_soid:type_name -> dota.CMsgSOIDOwner
	57, // 5: dota.CMsgSOCacheSubscribed.objects:type_name -> dota.CMsgSOCacheSubscribed.SubscribedType
	4,  // 6: dota.CMsgSOCacheSubscribed.owner_soid:type_name -> dota.CMsgSOIDOwner
	4,  // 7: dota.CMsgSOCacheSubscribedUpToDate.owner_soid:type_name -> dota.CMsgSOIDOwner
	4,  // 8: dota.CMsgSOCacheUnsubscribed.owner_soid:type_name -> dota.CMsgSOIDOwner
	4,  // 9: dota.CMsgSOCacheSubscriptionCheck.owner_soid:type_name -> dota.CMsgSOIDOwner
	4,  // 10: dota.CMsgSOCacheSubscriptionRefresh.owner_soid:type_name -> dota.CMsgSOIDOwner
	58, // 11: dota.CGCToGCMsgMasterAck.directory:type_name -> dota.CGCToGCMsgMasterAck.Process
	59, // 12: dota.CGCToGCMsgMasterStartupComplete.gc_info:type_name -> dota.CGCToGCMsgMasterStartupComplete.GCInfo
	60, // 13: dota.CMsgGCUpdateSubGCSessionInfo.updates:type_name -> dota.CMsgGCUpdateSubGCSessionInfo.CMsgUpdate
	4,  // 14: dota.CMsgSOCacheHaveVersion.soid:type_name -> dota.CMsgSOIDOwner
	25, // 15: dota.CMsgClientHello.socache_have_versions:type_name -> dota.CMsgSOCacheHaveVersion
	1,  // 16: dota.CMsgClientHello.client_launcher:type_name -> dota.PartnerAccountType
	0,  // 17: dota.CMsgClientHello.engine:type_name -> dota.ESourceEngine
	7,  // 18: dota.CMsgClientWelcome.outofdate_subscribed_caches:type_name -> dota.CMsgSOCacheSubscribed
	10, // 19: dota.CMsgClientWelcome.uptodate_subscribed_caches:type_name -> dota.CMsgSOCacheSubscriptionCheck
	61, // 20: dota.CMsgClientWelcome.location:type_name -> dota.CMsgClientWelcome.Location
	2,  // 21: dota.CMsgConnectionStatus.status:type_name -> dota.GCConnectionStatus
	62, // 22: dota.CMsgGCToGCSOCacheSubscribe.have_versions:type_name -> dota.CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions
	70, // 23: dota.CMsgGCToGCForwardAccountDetails.account_details:type_name -> dota.CGCSystemMsg_GetAccountDetails_Response
	32, // 24: dota.CMsgGCToGCLoadSessionSOCache.forward_account_details:type_name -> dota.CMsgGCToGCForwardAccountDetails
	64, // 25: dota.CWorkshop_PopulateItemDescriptions_Request.languages:type_name -> dota.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
	65, // 26: dota.CWorkshop_SetItemPaymentRules_Request.associated_workshop_files:type_name -> dota.CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
	66, // 27: dota.CWorkshop_SetItemPaymentRules_Request.partner_accounts:type_name -> dota.CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
	42, // 28: dota.CCommunity_GetClanAnnouncements_Response.announcements:type_name -> dota.CCommunity_ClanAnnouncementInfo
	68, // 29: dota.CMsgSerializedSOCache.caches:type_name -> dota.CMsgSerializedSOCache.Cache
	51, // 30: dota.CMsgGCToGCMasterSubscribeToCacheAsync.subscribe_msg:type_name -> dota.CMsgGCToGCMasterSubscribeToCache
	63, // 31: dota.CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions:type_name -> dota.CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
	69, // 32: dota.CMsgSerializedSOCache.Cache.versions:type_name -> dota.CMsgSerializedSOCache.Cache.Version
	67, // 33: dota.CMsgSerializedSOCache.Cache.type_caches:type_name -> dota.CMsgSerializedSOCache.TypeCache
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_gcsdk_gcmessages_proto_init() }
func file_gcsdk_gcmessages_proto_init() {
	if File_gcsdk_gcmessages_proto != nil {
		return
	}
	file_steammessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gcsdk_gcmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSHA1Digest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOIDOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOSingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOMultipleObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribedUpToDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheUnsubscribed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscriptionCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscriptionRefresh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCMultiplexMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSubGCStarting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCUniverseStartup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCUniverseStartupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterStartupComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgRouted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgRoutedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCUpdateSubGCSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestSubGCSessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestSubGCSessionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheHaveVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientWelcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgConnectionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSOCacheSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSOCacheUnsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCClientPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCForwardAccountDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCLoadSessionSOCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCLoadSessionSOCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCUpdateSessionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientRequestDropped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_PopulateItemDescriptions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetContributors_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetContributors_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCommunity_ClanAnnouncementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCommunity_GetClanAnnouncements_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCommunity_GetClanAnnouncements_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBroadcast_PostGameDataFrame_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSerializedSOCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientPollConvarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientPollConvarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCMsgCompressedMsgToClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCMasterBroadcastMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCMasterSubscribeToCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCMasterSubscribeToCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCMasterSubscribeToCacheAsync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCMasterUnsubscribeFromCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCMasterDestroyCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOMultipleObjects_SingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSOCacheSubscribed_SubscribedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterAck_Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCToGCMsgMasterStartupComplete_GCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientWelcome_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSerializedSOCache_TypeCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSerializedSOCache_Cache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gcsdk_gcmessages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSerializedSOCache_Cache_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gcsdk_gcmessages_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcsdk_gcmessages_proto_goTypes,
		DependencyIndexes: file_gcsdk_gcmessages_proto_depIdxs,
		EnumInfos:         file_gcsdk_gcmessages_proto_enumTypes,
		MessageInfos:      file_gcsdk_gcmessages_proto_msgTypes,
	}.Build()
	File_gcsdk_gcmessages_proto = out.File
	file_gcsdk_gcmessages_proto_rawDesc = nil
	file_gcsdk_gcmessages_proto_goTypes = nil
	file_gcsdk_gcmessages_proto_depIdxs = nil
}

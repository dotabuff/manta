// Code generated by protoc-gen-go.
// source: dota_broadcastmessages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EDotaBroadcastMessages int32

const (
	EDotaBroadcastMessages_DOTA_BM_LANLobbyRequest EDotaBroadcastMessages = 1
	EDotaBroadcastMessages_DOTA_BM_LANLobbyReply   EDotaBroadcastMessages = 2
)

var EDotaBroadcastMessages_name = map[int32]string{
	1: "DOTA_BM_LANLobbyRequest",
	2: "DOTA_BM_LANLobbyReply",
}
var EDotaBroadcastMessages_value = map[string]int32{
	"DOTA_BM_LANLobbyRequest": 1,
	"DOTA_BM_LANLobbyReply":   2,
}

func (x EDotaBroadcastMessages) Enum() *EDotaBroadcastMessages {
	p := new(EDotaBroadcastMessages)
	*p = x
	return p
}
func (x EDotaBroadcastMessages) String() string {
	return proto.EnumName(EDotaBroadcastMessages_name, int32(x))
}
func (x *EDotaBroadcastMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDotaBroadcastMessages_value, data, "EDotaBroadcastMessages")
	if err != nil {
		return err
	}
	*x = EDotaBroadcastMessages(value)
	return nil
}
func (EDotaBroadcastMessages) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

type CDOTABroadcastMsg struct {
	Type             *EDotaBroadcastMessages `protobuf:"varint,1,req,name=type,enum=dota.EDotaBroadcastMessages,def=1" json:"type,omitempty"`
	Msg              []byte                  `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTABroadcastMsg) Reset()                    { *m = CDOTABroadcastMsg{} }
func (m *CDOTABroadcastMsg) String() string            { return proto.CompactTextString(m) }
func (*CDOTABroadcastMsg) ProtoMessage()               {}
func (*CDOTABroadcastMsg) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

const Default_CDOTABroadcastMsg_Type EDotaBroadcastMessages = EDotaBroadcastMessages_DOTA_BM_LANLobbyRequest

func (m *CDOTABroadcastMsg) GetType() EDotaBroadcastMessages {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTABroadcastMsg_Type
}

func (m *CDOTABroadcastMsg) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type CDOTABroadcastMsg_LANLobbyRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTABroadcastMsg_LANLobbyRequest) Reset()         { *m = CDOTABroadcastMsg_LANLobbyRequest{} }
func (m *CDOTABroadcastMsg_LANLobbyRequest) String() string { return proto.CompactTextString(m) }
func (*CDOTABroadcastMsg_LANLobbyRequest) ProtoMessage()    {}
func (*CDOTABroadcastMsg_LANLobbyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{1}
}

type CDOTABroadcastMsg_LANLobbyReply struct {
	Id               *uint64                                         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TournamentId     *uint32                                         `protobuf:"varint,2,opt,name=tournament_id,json=tournamentId" json:"tournament_id,omitempty"`
	TournamentGameId *uint32                                         `protobuf:"varint,3,opt,name=tournament_game_id,json=tournamentGameId" json:"tournament_game_id,omitempty"`
	Members          []*CDOTABroadcastMsg_LANLobbyReply_CLobbyMember `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
	RequiresPassKey  *bool                                           `protobuf:"varint,5,opt,name=requires_pass_key,json=requiresPassKey" json:"requires_pass_key,omitempty"`
	LeaderAccountId  *uint32                                         `protobuf:"varint,6,opt,name=leader_account_id,json=leaderAccountId" json:"leader_account_id,omitempty"`
	GameMode         *uint32                                         `protobuf:"varint,7,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	Name             *string                                         `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	Players          *uint32                                         `protobuf:"varint,9,opt,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *CDOTABroadcastMsg_LANLobbyReply) Reset()                    { *m = CDOTABroadcastMsg_LANLobbyReply{} }
func (m *CDOTABroadcastMsg_LANLobbyReply) String() string            { return proto.CompactTextString(m) }
func (*CDOTABroadcastMsg_LANLobbyReply) ProtoMessage()               {}
func (*CDOTABroadcastMsg_LANLobbyReply) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *CDOTABroadcastMsg_LANLobbyReply) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetTournamentGameId() uint32 {
	if m != nil && m.TournamentGameId != nil {
		return *m.TournamentGameId
	}
	return 0
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetMembers() []*CDOTABroadcastMsg_LANLobbyReply_CLobbyMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetRequiresPassKey() bool {
	if m != nil && m.RequiresPassKey != nil {
		return *m.RequiresPassKey
	}
	return false
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetLeaderAccountId() uint32 {
	if m != nil && m.LeaderAccountId != nil {
		return *m.LeaderAccountId
	}
	return 0
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetGameMode() uint32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDOTABroadcastMsg_LANLobbyReply) GetPlayers() uint32 {
	if m != nil && m.Players != nil {
		return *m.Players
	}
	return 0
}

type CDOTABroadcastMsg_LANLobbyReply_CLobbyMember struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTABroadcastMsg_LANLobbyReply_CLobbyMember) Reset() {
	*m = CDOTABroadcastMsg_LANLobbyReply_CLobbyMember{}
}
func (m *CDOTABroadcastMsg_LANLobbyReply_CLobbyMember) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTABroadcastMsg_LANLobbyReply_CLobbyMember) ProtoMessage() {}
func (*CDOTABroadcastMsg_LANLobbyReply_CLobbyMember) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{2, 0}
}

func (m *CDOTABroadcastMsg_LANLobbyReply_CLobbyMember) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CDOTABroadcastMsg_LANLobbyReply_CLobbyMember) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func init() {
	proto.RegisterType((*CDOTABroadcastMsg)(nil), "dota.CDOTABroadcastMsg")
	proto.RegisterType((*CDOTABroadcastMsg_LANLobbyRequest)(nil), "dota.CDOTABroadcastMsg_LANLobbyRequest")
	proto.RegisterType((*CDOTABroadcastMsg_LANLobbyReply)(nil), "dota.CDOTABroadcastMsg_LANLobbyReply")
	proto.RegisterType((*CDOTABroadcastMsg_LANLobbyReply_CLobbyMember)(nil), "dota.CDOTABroadcastMsg_LANLobbyReply.CLobbyMember")
	proto.RegisterEnum("dota.EDotaBroadcastMessages", EDotaBroadcastMessages_name, EDotaBroadcastMessages_value)
}

func init() { proto.RegisterFile("dota_broadcastmessages.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x6f, 0x13, 0x31,
	0x10, 0xc5, 0xf1, 0x66, 0x4b, 0x92, 0x69, 0xda, 0xa6, 0x23, 0x01, 0x86, 0x16, 0x75, 0x49, 0x2f,
	0xab, 0x0a, 0xe5, 0x90, 0x23, 0xb7, 0xa4, 0x45, 0x10, 0x91, 0x84, 0xca, 0xe2, 0x6e, 0x39, 0xf1,
	0x28, 0x8a, 0x88, 0xeb, 0xed, 0xda, 0x39, 0xec, 0x8d, 0x2f, 0xc7, 0xf7, 0x42, 0xf6, 0x12, 0x12,
	0x11, 0xfe, 0xdc, 0x66, 0xe7, 0xfd, 0x66, 0xde, 0xbc, 0x95, 0xe1, 0x52, 0x5b, 0xaf, 0xe4, 0xbc,
	0xb4, 0x4a, 0x2f, 0x94, 0xf3, 0x86, 0x9c, 0x53, 0x4b, 0x72, 0xfd, 0xa2, 0xb4, 0xde, 0x62, 0x1a,
	0xd4, 0x5e, 0x01, 0xe7, 0xb7, 0x77, 0x9f, 0xbf, 0x0c, 0x47, 0x5b, 0x6a, 0xea, 0x96, 0x38, 0x86,
	0xd4, 0x57, 0x05, 0x71, 0x96, 0x25, 0xf9, 0xe9, 0xe0, 0xb2, 0x1f, 0xc8, 0xfe, 0xfb, 0x3b, 0xeb,
	0xd5, 0x0e, 0xfb, 0xb9, 0xec, 0xdd, 0x8b, 0x30, 0x2d, 0x47, 0x53, 0x39, 0x19, 0xce, 0x26, 0x76,
	0x3e, 0xaf, 0x04, 0x3d, 0x6e, 0xc8, 0x79, 0x11, 0x57, 0x60, 0x17, 0x1a, 0xc6, 0x2d, 0x79, 0x92,
	0xb1, 0xbc, 0x23, 0x42, 0xd9, 0xbb, 0x86, 0x37, 0x07, 0x8e, 0xbf, 0x0f, 0xf7, 0xbe, 0x37, 0xe0,
	0xea, 0x5f, 0x54, 0xb1, 0xae, 0xf0, 0x14, 0x92, 0x95, 0xe6, 0x2c, 0x63, 0x79, 0x2a, 0x92, 0x95,
	0xc6, 0x6b, 0x38, 0xf1, 0x76, 0x53, 0x3e, 0x28, 0x43, 0x0f, 0x5e, 0xae, 0x74, 0x34, 0x3d, 0x11,
	0x9d, 0x5d, 0x73, 0xac, 0xf1, 0x2d, 0xe0, 0x1e, 0xb4, 0x54, 0x86, 0x02, 0xd9, 0x88, 0x64, 0x77,
	0xa7, 0x7c, 0x50, 0x86, 0xc6, 0x1a, 0x27, 0xd0, 0x34, 0x64, 0xe6, 0x54, 0x3a, 0x9e, 0x66, 0x8d,
	0xfc, 0x78, 0x30, 0xa8, 0xff, 0xc5, 0x7f, 0x4e, 0xeb, 0xdf, 0xc6, 0x7a, 0x1a, 0x47, 0xc5, 0x76,
	0x05, 0xde, 0xc0, 0x79, 0x49, 0x8f, 0x9b, 0x55, 0x49, 0x4e, 0x16, 0xca, 0x39, 0xf9, 0x95, 0x2a,
	0x7e, 0x94, 0xb1, 0xbc, 0x25, 0xce, 0xb6, 0xc2, 0xbd, 0x72, 0xee, 0x13, 0x55, 0x81, 0x5d, 0x93,
	0xd2, 0x54, 0x4a, 0xb5, 0x58, 0xd8, 0x4d, 0x1d, 0xe8, 0x69, 0x3c, 0xf3, 0xac, 0x16, 0x86, 0x75,
	0x7f, 0xac, 0xf1, 0x02, 0xda, 0x31, 0x88, 0xb1, 0x9a, 0x78, 0x33, 0x32, 0xad, 0xd0, 0x98, 0x5a,
	0x4d, 0x88, 0x90, 0x86, 0x48, 0xbc, 0x95, 0xb1, 0xbc, 0x2d, 0x62, 0x8d, 0x1c, 0x9a, 0xc5, 0x5a,
	0x55, 0x21, 0x56, 0x3b, 0xe2, 0xdb, 0xcf, 0x57, 0x33, 0xe8, 0xec, 0xdf, 0x8e, 0xaf, 0x01, 0xf6,
	0xfc, 0x59, 0x84, 0xdb, 0xea, 0x97, 0xf3, 0x15, 0x1c, 0xd7, 0x93, 0x32, 0x7a, 0x24, 0xd1, 0x03,
	0xea, 0xd6, 0x4c, 0x19, 0xba, 0xb9, 0x87, 0xe7, 0x7f, 0x7e, 0x37, 0x78, 0x01, 0x7f, 0x7b, 0x39,
	0x5d, 0x86, 0x2f, 0xe1, 0xd9, 0xa1, 0x58, 0xac, 0xab, 0x6e, 0x32, 0x3a, 0xfa, 0xc8, 0xbe, 0xb1,
	0x27, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x70, 0x38, 0xf5, 0xc9, 0xdc, 0x02, 0x00, 0x00,
}

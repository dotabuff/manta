// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: econ_gcmessages.proto

package dota

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EGCItemMsg int32

const (
	EGCItemMsg_k_EMsgGCBase                                           EGCItemMsg = 1000
	EGCItemMsg_k_EMsgGCSetItemPosition                                EGCItemMsg = 1001
	EGCItemMsg_k_EMsgGCDelete                                         EGCItemMsg = 1004
	EGCItemMsg_k_EMsgGCVerifyCacheSubscription                        EGCItemMsg = 1005
	EGCItemMsg_k_EMsgClientToGCNameItem                               EGCItemMsg = 1006
	EGCItemMsg_k_EMsgGCPaintItem                                      EGCItemMsg = 1009
	EGCItemMsg_k_EMsgGCPaintItemResponse                              EGCItemMsg = 1010
	EGCItemMsg_k_EMsgGCGoldenWrenchBroadcast                          EGCItemMsg = 1011
	EGCItemMsg_k_EMsgGCMOTDRequest                                    EGCItemMsg = 1012
	EGCItemMsg_k_EMsgGCMOTDRequestResponse                            EGCItemMsg = 1013
	EGCItemMsg_k_EMsgGCAddItemToSocket_DEPRECATED                     EGCItemMsg = 1014
	EGCItemMsg_k_EMsgGCAddItemToSocketResponse_DEPRECATED             EGCItemMsg = 1015
	EGCItemMsg_k_EMsgGCAddSocketToBaseItem_DEPRECATED                 EGCItemMsg = 1016
	EGCItemMsg_k_EMsgGCAddSocketToItem_DEPRECATED                     EGCItemMsg = 1017
	EGCItemMsg_k_EMsgGCAddSocketToItemResponse_DEPRECATED             EGCItemMsg = 1018
	EGCItemMsg_k_EMsgGCNameBaseItem                                   EGCItemMsg = 1019
	EGCItemMsg_k_EMsgGCNameBaseItemResponse                           EGCItemMsg = 1020
	EGCItemMsg_k_EMsgGCRemoveSocketItem_DEPRECATED                    EGCItemMsg = 1021
	EGCItemMsg_k_EMsgGCRemoveSocketItemResponse_DEPRECATED            EGCItemMsg = 1022
	EGCItemMsg_k_EMsgGCCustomizeItemTexture                           EGCItemMsg = 1023
	EGCItemMsg_k_EMsgGCCustomizeItemTextureResponse                   EGCItemMsg = 1024
	EGCItemMsg_k_EMsgGCUseItemRequest                                 EGCItemMsg = 1025
	EGCItemMsg_k_EMsgGCUseItemResponse                                EGCItemMsg = 1026
	EGCItemMsg_k_EMsgGCGiftedItems                                    EGCItemMsg = 1027
	EGCItemMsg_k_EMsgGCRemoveItemName                                 EGCItemMsg = 1030
	EGCItemMsg_k_EMsgGCRemoveItemPaint                                EGCItemMsg = 1031
	EGCItemMsg_k_EMsgGCUnwrapGiftRequest                              EGCItemMsg = 1037
	EGCItemMsg_k_EMsgGCUnwrapGiftResponse                             EGCItemMsg = 1038
	EGCItemMsg_k_EMsgGCSetItemStyle_DEPRECATED                        EGCItemMsg = 1039
	EGCItemMsg_k_EMsgGCUsedClaimCodeItem                              EGCItemMsg = 1040
	EGCItemMsg_k_EMsgGCSortItems                                      EGCItemMsg = 1041
	EGCItemMsg_k_EMsgGC_RevolvingLootList_DEPRECATED                  EGCItemMsg = 1042
	EGCItemMsg_k_EMsgGCUpdateItemSchema                               EGCItemMsg = 1049
	EGCItemMsg_k_EMsgGCRemoveCustomTexture                            EGCItemMsg = 1051
	EGCItemMsg_k_EMsgGCRemoveCustomTextureResponse                    EGCItemMsg = 1052
	EGCItemMsg_k_EMsgGCRemoveMakersMark                               EGCItemMsg = 1053
	EGCItemMsg_k_EMsgGCRemoveMakersMarkResponse                       EGCItemMsg = 1054
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndex                         EGCItemMsg = 1055
	EGCItemMsg_k_EMsgGCRemoveUniqueCraftIndexResponse                 EGCItemMsg = 1056
	EGCItemMsg_k_EMsgGCSaxxyBroadcast                                 EGCItemMsg = 1057
	EGCItemMsg_k_EMsgGCBackpackSortFinished                           EGCItemMsg = 1058
	EGCItemMsg_k_EMsgGCAdjustItemEquippedState                        EGCItemMsg = 1059
	EGCItemMsg_k_EMsgGCCollectItem                                    EGCItemMsg = 1061
	EGCItemMsg_k_EMsgGCItemAcknowledged                               EGCItemMsg = 1062
	EGCItemMsg_k_EMsgGCPresets_SelectPresetForClass                   EGCItemMsg = 1063
	EGCItemMsg_k_EMsgGCPresets_SetItemPosition                        EGCItemMsg = 1064
	EGCItemMsg_k_EMsgGCPresets_SelectPresetForClassReply              EGCItemMsg = 1067
	EGCItemMsg_k_EMsgClientToGCNameItemResponse                       EGCItemMsg = 1068
	EGCItemMsg_k_EMsgGCApplyConsumableEffects                         EGCItemMsg = 1069
	EGCItemMsg_k_EMsgGCShowItemsPickedUp                              EGCItemMsg = 1071
	EGCItemMsg_k_EMsgGCClientDisplayNotification                      EGCItemMsg = 1072
	EGCItemMsg_k_EMsgGCApplyStrangePart                               EGCItemMsg = 1073
	EGCItemMsg_k_EMsgGC_IncrementKillCountResponse                    EGCItemMsg = 1075
	EGCItemMsg_k_EMsgGCApplyPennantUpgrade                            EGCItemMsg = 1076
	EGCItemMsg_k_EMsgGCSetItemPositions                               EGCItemMsg = 1077
	EGCItemMsg_k_EMsgGCSetItemPositions_RateLimited                   EGCItemMsg = 1096
	EGCItemMsg_k_EMsgGCApplyEggEssence                                EGCItemMsg = 1078
	EGCItemMsg_k_EMsgGCNameEggEssenceResponse                         EGCItemMsg = 1079
	EGCItemMsg_k_EMsgGCFulfillDynamicRecipeComponent                  EGCItemMsg = 1082
	EGCItemMsg_k_EMsgGCFulfillDynamicRecipeComponentResponse          EGCItemMsg = 1083
	EGCItemMsg_k_EMsgGCClientRequestMarketData                        EGCItemMsg = 1084
	EGCItemMsg_k_EMsgGCClientRequestMarketDataResponse                EGCItemMsg = 1085
	EGCItemMsg_k_EMsgGCExtractGems                                    EGCItemMsg = 1086
	EGCItemMsg_k_EMsgGCAddSocket                                      EGCItemMsg = 1087
	EGCItemMsg_k_EMsgGCAddItemToSocket                                EGCItemMsg = 1088
	EGCItemMsg_k_EMsgGCAddItemToSocketResponse                        EGCItemMsg = 1089
	EGCItemMsg_k_EMsgGCAddSocketResponse                              EGCItemMsg = 1090
	EGCItemMsg_k_EMsgGCResetStrangeGemCount                           EGCItemMsg = 1091
	EGCItemMsg_k_EMsgGCRequestCrateItems                              EGCItemMsg = 1092
	EGCItemMsg_k_EMsgGCRequestCrateItemsResponse                      EGCItemMsg = 1093
	EGCItemMsg_k_EMsgGCExtractGemsResponse                            EGCItemMsg = 1094
	EGCItemMsg_k_EMsgGCResetStrangeGemCountResponse                   EGCItemMsg = 1095
	EGCItemMsg_k_EMsgGCServerUseItemRequest                           EGCItemMsg = 1103
	EGCItemMsg_k_EMsgGCAddGiftItem                                    EGCItemMsg = 1104
	EGCItemMsg_k_EMsgGCRemoveItemGiftMessage                          EGCItemMsg = 1105
	EGCItemMsg_k_EMsgGCRemoveItemGiftMessageResponse                  EGCItemMsg = 1106
	EGCItemMsg_k_EMsgGCRemoveItemGifterAccountId                      EGCItemMsg = 1107
	EGCItemMsg_k_EMsgGCRemoveItemGifterAccountIdResponse              EGCItemMsg = 1108
	EGCItemMsg_k_EMsgClientToGCRemoveItemGifterAttributes             EGCItemMsg = 1109
	EGCItemMsg_k_EMsgClientToGCRemoveItemName                         EGCItemMsg = 1110
	EGCItemMsg_k_EMsgClientToGCRemoveItemDescription                  EGCItemMsg = 1111
	EGCItemMsg_k_EMsgClientToGCRemoveItemAttributeResponse            EGCItemMsg = 1112
	EGCItemMsg_k_EMsgGCTradingBase                                    EGCItemMsg = 1500
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequest                   EGCItemMsg = 1501
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeResponse                  EGCItemMsg = 1502
	EGCItemMsg_k_EMsgGCTrading_StartSession                           EGCItemMsg = 1503
	EGCItemMsg_k_EMsgGCTrading_SessionClosed                          EGCItemMsg = 1509
	EGCItemMsg_k_EMsgGCTrading_InitiateTradeRequestResponse           EGCItemMsg = 1514
	EGCItemMsg_k_EMsgGCServerBrowser_FavoriteServer                   EGCItemMsg = 1601
	EGCItemMsg_k_EMsgGCServerBrowser_BlacklistServer                  EGCItemMsg = 1602
	EGCItemMsg_k_EMsgGCServerRentalsBase                              EGCItemMsg = 1700
	EGCItemMsg_k_EMsgGCDev_NewItemRequest                             EGCItemMsg = 2001
	EGCItemMsg_k_EMsgGCDev_NewItemRequestResponse                     EGCItemMsg = 2002
	EGCItemMsg_k_EMsgGCDev_UnlockAllItemStylesRequest                 EGCItemMsg = 2003
	EGCItemMsg_k_EMsgGCDev_UnlockAllItemStylesResponse                EGCItemMsg = 2004
	EGCItemMsg_k_EMsgGCStorePurchaseFinalize                          EGCItemMsg = 2504
	EGCItemMsg_k_EMsgGCStorePurchaseFinalizeResponse                  EGCItemMsg = 2505
	EGCItemMsg_k_EMsgGCStorePurchaseCancel                            EGCItemMsg = 2506
	EGCItemMsg_k_EMsgGCStorePurchaseCancelResponse                    EGCItemMsg = 2507
	EGCItemMsg_k_EMsgGCStorePurchaseInit                              EGCItemMsg = 2510
	EGCItemMsg_k_EMsgGCStorePurchaseInitResponse                      EGCItemMsg = 2511
	EGCItemMsg_k_EMsgGCToGCBannedWordListUpdated                      EGCItemMsg = 2515
	EGCItemMsg_k_EMsgGCToGCDirtySDOCache                              EGCItemMsg = 2516
	EGCItemMsg_k_EMsgGCToGCDirtyMultipleSDOCache                      EGCItemMsg = 2517
	EGCItemMsg_k_EMsgGCToGCUpdateSQLKeyValue                          EGCItemMsg = 2518
	EGCItemMsg_k_EMsgGCToGCBroadcastConsoleCommand                    EGCItemMsg = 2521
	EGCItemMsg_k_EMsgGCServerVersionUpdated                           EGCItemMsg = 2522
	EGCItemMsg_k_EMsgGCApplyAutograph                                 EGCItemMsg = 2523
	EGCItemMsg_k_EMsgGCToGCWebAPIAccountChanged                       EGCItemMsg = 2524
	EGCItemMsg_k_EMsgGCClientVersionUpdated                           EGCItemMsg = 2528
	EGCItemMsg_k_EMsgGCItemPurgatory_FinalizePurchase                 EGCItemMsg = 2531
	EGCItemMsg_k_EMsgGCItemPurgatory_FinalizePurchaseResponse         EGCItemMsg = 2532
	EGCItemMsg_k_EMsgGCItemPurgatory_RefundPurchase                   EGCItemMsg = 2533
	EGCItemMsg_k_EMsgGCItemPurgatory_RefundPurchaseResponse           EGCItemMsg = 2534
	EGCItemMsg_k_EMsgGCToGCPlayerStrangeCountAdjustments              EGCItemMsg = 2535
	EGCItemMsg_k_EMsgGCRequestStoreSalesData                          EGCItemMsg = 2536
	EGCItemMsg_k_EMsgGCRequestStoreSalesDataResponse                  EGCItemMsg = 2537
	EGCItemMsg_k_EMsgGCRequestStoreSalesDataUpToDateResponse          EGCItemMsg = 2538
	EGCItemMsg_k_EMsgGCToGCPingRequest                                EGCItemMsg = 2539
	EGCItemMsg_k_EMsgGCToGCPingResponse                               EGCItemMsg = 2540
	EGCItemMsg_k_EMsgGCToGCGetUserSessionServer                       EGCItemMsg = 2541
	EGCItemMsg_k_EMsgGCToGCGetUserSessionServerResponse               EGCItemMsg = 2542
	EGCItemMsg_k_EMsgGCToGCGetUserServerMembers                       EGCItemMsg = 2543
	EGCItemMsg_k_EMsgGCToGCGetUserServerMembersResponse               EGCItemMsg = 2544
	EGCItemMsg_k_EMsgGCToGCGetUserPCBangNo                            EGCItemMsg = 2545
	EGCItemMsg_k_EMsgGCToGCGetUserPCBangNoResponse                    EGCItemMsg = 2546
	EGCItemMsg_k_EMsgGCToGCCanUseDropRateBonus                        EGCItemMsg = 2547
	EGCItemMsg_k_EMsgSQLAddDropRateBonus                              EGCItemMsg = 2548
	EGCItemMsg_k_EMsgGCToGCRefreshSOCache                             EGCItemMsg = 2549
	EGCItemMsg_k_EMsgGCToGCApplyLocalizationDiff                      EGCItemMsg = 2550
	EGCItemMsg_k_EMsgGCToGCApplyLocalizationDiffResponse              EGCItemMsg = 2551
	EGCItemMsg_k_EMsgGCToGCCheckAccountTradeStatus                    EGCItemMsg = 2552
	EGCItemMsg_k_EMsgGCToGCCheckAccountTradeStatusResponse            EGCItemMsg = 2553
	EGCItemMsg_k_EMsgGCToGCGrantAccountRolledItems                    EGCItemMsg = 2554
	EGCItemMsg_k_EMsgGCToGCGrantSelfMadeItemToAccount                 EGCItemMsg = 2555
	EGCItemMsg_k_EMsgGCPartnerBalanceRequest                          EGCItemMsg = 2557
	EGCItemMsg_k_EMsgGCPartnerBalanceResponse                         EGCItemMsg = 2558
	EGCItemMsg_k_EMsgGCPartnerRechargeRedirectURLRequest              EGCItemMsg = 2559
	EGCItemMsg_k_EMsgGCPartnerRechargeRedirectURLResponse             EGCItemMsg = 2560
	EGCItemMsg_k_EMsgGCStatueCraft                                    EGCItemMsg = 2561
	EGCItemMsg_k_EMsgGCRedeemCode                                     EGCItemMsg = 2562
	EGCItemMsg_k_EMsgGCRedeemCodeResponse                             EGCItemMsg = 2563
	EGCItemMsg_k_EMsgGCToGCItemConsumptionRollback                    EGCItemMsg = 2564
	EGCItemMsg_k_EMsgClientToGCWrapAndDeliverGift                     EGCItemMsg = 2565
	EGCItemMsg_k_EMsgClientToGCWrapAndDeliverGiftResponse             EGCItemMsg = 2566
	EGCItemMsg_k_EMsgClientToGCUnpackBundleResponse                   EGCItemMsg = 2567
	EGCItemMsg_k_EMsgGCToClientStoreTransactionCompleted              EGCItemMsg = 2568
	EGCItemMsg_k_EMsgClientToGCEquipItems                             EGCItemMsg = 2569
	EGCItemMsg_k_EMsgClientToGCEquipItemsResponse                     EGCItemMsg = 2570
	EGCItemMsg_k_EMsgClientToGCUnlockItemStyle                        EGCItemMsg = 2571
	EGCItemMsg_k_EMsgClientToGCUnlockItemStyleResponse                EGCItemMsg = 2572
	EGCItemMsg_k_EMsgClientToGCSetItemInventoryCategory               EGCItemMsg = 2573
	EGCItemMsg_k_EMsgClientToGCUnlockCrate                            EGCItemMsg = 2574
	EGCItemMsg_k_EMsgClientToGCUnlockCrateResponse                    EGCItemMsg = 2575
	EGCItemMsg_k_EMsgClientToGCUnpackBundle                           EGCItemMsg = 2576
	EGCItemMsg_k_EMsgClientToGCSetItemStyle                           EGCItemMsg = 2577
	EGCItemMsg_k_EMsgClientToGCSetItemStyleResponse                   EGCItemMsg = 2578
	EGCItemMsg_k_EMsgSQLGCToGCGrantBackpackSlots                      EGCItemMsg = 2580
	EGCItemMsg_k_EMsgClientToGCLookupAccountName                      EGCItemMsg = 2581
	EGCItemMsg_k_EMsgClientToGCLookupAccountNameResponse              EGCItemMsg = 2582
	EGCItemMsg_k_EMsgGCToGCDevRevokeUserItems                         EGCItemMsg = 2583
	EGCItemMsg_k_EMsgClientToGCCreateStaticRecipe                     EGCItemMsg = 2584
	EGCItemMsg_k_EMsgClientToGCCreateStaticRecipeResponse             EGCItemMsg = 2585
	EGCItemMsg_k_EMsgGCToGCStoreProcessCDKeyTransaction               EGCItemMsg = 2586
	EGCItemMsg_k_EMsgGCToGCStoreProcessCDKeyTransactionResponse       EGCItemMsg = 2587
	EGCItemMsg_k_EMsgGCToGCStoreProcessSettlement                     EGCItemMsg = 2588
	EGCItemMsg_k_EMsgGCToGCStoreProcessSettlementResponse             EGCItemMsg = 2589
	EGCItemMsg_k_EMsgGCToGCConsoleOutput                              EGCItemMsg = 2590
	EGCItemMsg_k_EMsgGCToClientItemAges                               EGCItemMsg = 2591
	EGCItemMsg_k_EMsgGCToGCInternalTestMsg                            EGCItemMsg = 2592
	EGCItemMsg_k_EMsgGCToGCClientServerVersionsUpdated                EGCItemMsg = 2593
	EGCItemMsg_k_EMsgGCUseMultipleItemsRequest                        EGCItemMsg = 2594
	EGCItemMsg_k_EMsgGCGetAccountSubscriptionItem                     EGCItemMsg = 2595
	EGCItemMsg_k_EMsgGCGetAccountSubscriptionItemResponse             EGCItemMsg = 2596
	EGCItemMsg_k_EMsgGCToGCBroadcastMessageFromSub                    EGCItemMsg = 2598
	EGCItemMsg_k_EMsgGCToClientCurrencyPricePoints                    EGCItemMsg = 2599
	EGCItemMsg_k_EMsgGCToGCAddSubscriptionTime                        EGCItemMsg = 2600
	EGCItemMsg_k_EMsgGCToGCFlushSteamInventoryCache                   EGCItemMsg = 2601
	EGCItemMsg_k_EMsgGCRequestCrateEscalationLevel                    EGCItemMsg = 2602
	EGCItemMsg_k_EMsgGCRequestCrateEscalationLevelResponse            EGCItemMsg = 2603
	EGCItemMsg_k_EMsgGCToGCUpdateSubscriptionItems                    EGCItemMsg = 2604
	EGCItemMsg_k_EMsgGCToGCSelfPing                                   EGCItemMsg = 2605
	EGCItemMsg_k_EMsgGCToGCGetInfuxIntervalStats                      EGCItemMsg = 2606
	EGCItemMsg_k_EMsgGCToGCGetInfuxIntervalStatsResponse              EGCItemMsg = 2607
	EGCItemMsg_k_EMsgGCToGCPurchaseSucceeded                          EGCItemMsg = 2608
	EGCItemMsg_k_EMsgClientToGCGetLimitedItemPurchaseQuantity         EGCItemMsg = 2609
	EGCItemMsg_k_EMsgClientToGCGetLimitedItemPurchaseQuantityResponse EGCItemMsg = 2610
)

// Enum value maps for EGCItemMsg.
var (
	EGCItemMsg_name = map[int32]string{
		1000: "k_EMsgGCBase",
		1001: "k_EMsgGCSetItemPosition",
		1004: "k_EMsgGCDelete",
		1005: "k_EMsgGCVerifyCacheSubscription",
		1006: "k_EMsgClientToGCNameItem",
		1009: "k_EMsgGCPaintItem",
		1010: "k_EMsgGCPaintItemResponse",
		1011: "k_EMsgGCGoldenWrenchBroadcast",
		1012: "k_EMsgGCMOTDRequest",
		1013: "k_EMsgGCMOTDRequestResponse",
		1014: "k_EMsgGCAddItemToSocket_DEPRECATED",
		1015: "k_EMsgGCAddItemToSocketResponse_DEPRECATED",
		1016: "k_EMsgGCAddSocketToBaseItem_DEPRECATED",
		1017: "k_EMsgGCAddSocketToItem_DEPRECATED",
		1018: "k_EMsgGCAddSocketToItemResponse_DEPRECATED",
		1019: "k_EMsgGCNameBaseItem",
		1020: "k_EMsgGCNameBaseItemResponse",
		1021: "k_EMsgGCRemoveSocketItem_DEPRECATED",
		1022: "k_EMsgGCRemoveSocketItemResponse_DEPRECATED",
		1023: "k_EMsgGCCustomizeItemTexture",
		1024: "k_EMsgGCCustomizeItemTextureResponse",
		1025: "k_EMsgGCUseItemRequest",
		1026: "k_EMsgGCUseItemResponse",
		1027: "k_EMsgGCGiftedItems",
		1030: "k_EMsgGCRemoveItemName",
		1031: "k_EMsgGCRemoveItemPaint",
		1037: "k_EMsgGCUnwrapGiftRequest",
		1038: "k_EMsgGCUnwrapGiftResponse",
		1039: "k_EMsgGCSetItemStyle_DEPRECATED",
		1040: "k_EMsgGCUsedClaimCodeItem",
		1041: "k_EMsgGCSortItems",
		1042: "k_EMsgGC_RevolvingLootList_DEPRECATED",
		1049: "k_EMsgGCUpdateItemSchema",
		1051: "k_EMsgGCRemoveCustomTexture",
		1052: "k_EMsgGCRemoveCustomTextureResponse",
		1053: "k_EMsgGCRemoveMakersMark",
		1054: "k_EMsgGCRemoveMakersMarkResponse",
		1055: "k_EMsgGCRemoveUniqueCraftIndex",
		1056: "k_EMsgGCRemoveUniqueCraftIndexResponse",
		1057: "k_EMsgGCSaxxyBroadcast",
		1058: "k_EMsgGCBackpackSortFinished",
		1059: "k_EMsgGCAdjustItemEquippedState",
		1061: "k_EMsgGCCollectItem",
		1062: "k_EMsgGCItemAcknowledged",
		1063: "k_EMsgGCPresets_SelectPresetForClass",
		1064: "k_EMsgGCPresets_SetItemPosition",
		1067: "k_EMsgGCPresets_SelectPresetForClassReply",
		1068: "k_EMsgClientToGCNameItemResponse",
		1069: "k_EMsgGCApplyConsumableEffects",
		1071: "k_EMsgGCShowItemsPickedUp",
		1072: "k_EMsgGCClientDisplayNotification",
		1073: "k_EMsgGCApplyStrangePart",
		1075: "k_EMsgGC_IncrementKillCountResponse",
		1076: "k_EMsgGCApplyPennantUpgrade",
		1077: "k_EMsgGCSetItemPositions",
		1096: "k_EMsgGCSetItemPositions_RateLimited",
		1078: "k_EMsgGCApplyEggEssence",
		1079: "k_EMsgGCNameEggEssenceResponse",
		1082: "k_EMsgGCFulfillDynamicRecipeComponent",
		1083: "k_EMsgGCFulfillDynamicRecipeComponentResponse",
		1084: "k_EMsgGCClientRequestMarketData",
		1085: "k_EMsgGCClientRequestMarketDataResponse",
		1086: "k_EMsgGCExtractGems",
		1087: "k_EMsgGCAddSocket",
		1088: "k_EMsgGCAddItemToSocket",
		1089: "k_EMsgGCAddItemToSocketResponse",
		1090: "k_EMsgGCAddSocketResponse",
		1091: "k_EMsgGCResetStrangeGemCount",
		1092: "k_EMsgGCRequestCrateItems",
		1093: "k_EMsgGCRequestCrateItemsResponse",
		1094: "k_EMsgGCExtractGemsResponse",
		1095: "k_EMsgGCResetStrangeGemCountResponse",
		1103: "k_EMsgGCServerUseItemRequest",
		1104: "k_EMsgGCAddGiftItem",
		1105: "k_EMsgGCRemoveItemGiftMessage",
		1106: "k_EMsgGCRemoveItemGiftMessageResponse",
		1107: "k_EMsgGCRemoveItemGifterAccountId",
		1108: "k_EMsgGCRemoveItemGifterAccountIdResponse",
		1109: "k_EMsgClientToGCRemoveItemGifterAttributes",
		1110: "k_EMsgClientToGCRemoveItemName",
		1111: "k_EMsgClientToGCRemoveItemDescription",
		1112: "k_EMsgClientToGCRemoveItemAttributeResponse",
		1500: "k_EMsgGCTradingBase",
		1501: "k_EMsgGCTrading_InitiateTradeRequest",
		1502: "k_EMsgGCTrading_InitiateTradeResponse",
		1503: "k_EMsgGCTrading_StartSession",
		1509: "k_EMsgGCTrading_SessionClosed",
		1514: "k_EMsgGCTrading_InitiateTradeRequestResponse",
		1601: "k_EMsgGCServerBrowser_FavoriteServer",
		1602: "k_EMsgGCServerBrowser_BlacklistServer",
		1700: "k_EMsgGCServerRentalsBase",
		2001: "k_EMsgGCDev_NewItemRequest",
		2002: "k_EMsgGCDev_NewItemRequestResponse",
		2003: "k_EMsgGCDev_UnlockAllItemStylesRequest",
		2004: "k_EMsgGCDev_UnlockAllItemStylesResponse",
		2504: "k_EMsgGCStorePurchaseFinalize",
		2505: "k_EMsgGCStorePurchaseFinalizeResponse",
		2506: "k_EMsgGCStorePurchaseCancel",
		2507: "k_EMsgGCStorePurchaseCancelResponse",
		2510: "k_EMsgGCStorePurchaseInit",
		2511: "k_EMsgGCStorePurchaseInitResponse",
		2515: "k_EMsgGCToGCBannedWordListUpdated",
		2516: "k_EMsgGCToGCDirtySDOCache",
		2517: "k_EMsgGCToGCDirtyMultipleSDOCache",
		2518: "k_EMsgGCToGCUpdateSQLKeyValue",
		2521: "k_EMsgGCToGCBroadcastConsoleCommand",
		2522: "k_EMsgGCServerVersionUpdated",
		2523: "k_EMsgGCApplyAutograph",
		2524: "k_EMsgGCToGCWebAPIAccountChanged",
		2528: "k_EMsgGCClientVersionUpdated",
		2531: "k_EMsgGCItemPurgatory_FinalizePurchase",
		2532: "k_EMsgGCItemPurgatory_FinalizePurchaseResponse",
		2533: "k_EMsgGCItemPurgatory_RefundPurchase",
		2534: "k_EMsgGCItemPurgatory_RefundPurchaseResponse",
		2535: "k_EMsgGCToGCPlayerStrangeCountAdjustments",
		2536: "k_EMsgGCRequestStoreSalesData",
		2537: "k_EMsgGCRequestStoreSalesDataResponse",
		2538: "k_EMsgGCRequestStoreSalesDataUpToDateResponse",
		2539: "k_EMsgGCToGCPingRequest",
		2540: "k_EMsgGCToGCPingResponse",
		2541: "k_EMsgGCToGCGetUserSessionServer",
		2542: "k_EMsgGCToGCGetUserSessionServerResponse",
		2543: "k_EMsgGCToGCGetUserServerMembers",
		2544: "k_EMsgGCToGCGetUserServerMembersResponse",
		2545: "k_EMsgGCToGCGetUserPCBangNo",
		2546: "k_EMsgGCToGCGetUserPCBangNoResponse",
		2547: "k_EMsgGCToGCCanUseDropRateBonus",
		2548: "k_EMsgSQLAddDropRateBonus",
		2549: "k_EMsgGCToGCRefreshSOCache",
		2550: "k_EMsgGCToGCApplyLocalizationDiff",
		2551: "k_EMsgGCToGCApplyLocalizationDiffResponse",
		2552: "k_EMsgGCToGCCheckAccountTradeStatus",
		2553: "k_EMsgGCToGCCheckAccountTradeStatusResponse",
		2554: "k_EMsgGCToGCGrantAccountRolledItems",
		2555: "k_EMsgGCToGCGrantSelfMadeItemToAccount",
		2557: "k_EMsgGCPartnerBalanceRequest",
		2558: "k_EMsgGCPartnerBalanceResponse",
		2559: "k_EMsgGCPartnerRechargeRedirectURLRequest",
		2560: "k_EMsgGCPartnerRechargeRedirectURLResponse",
		2561: "k_EMsgGCStatueCraft",
		2562: "k_EMsgGCRedeemCode",
		2563: "k_EMsgGCRedeemCodeResponse",
		2564: "k_EMsgGCToGCItemConsumptionRollback",
		2565: "k_EMsgClientToGCWrapAndDeliverGift",
		2566: "k_EMsgClientToGCWrapAndDeliverGiftResponse",
		2567: "k_EMsgClientToGCUnpackBundleResponse",
		2568: "k_EMsgGCToClientStoreTransactionCompleted",
		2569: "k_EMsgClientToGCEquipItems",
		2570: "k_EMsgClientToGCEquipItemsResponse",
		2571: "k_EMsgClientToGCUnlockItemStyle",
		2572: "k_EMsgClientToGCUnlockItemStyleResponse",
		2573: "k_EMsgClientToGCSetItemInventoryCategory",
		2574: "k_EMsgClientToGCUnlockCrate",
		2575: "k_EMsgClientToGCUnlockCrateResponse",
		2576: "k_EMsgClientToGCUnpackBundle",
		2577: "k_EMsgClientToGCSetItemStyle",
		2578: "k_EMsgClientToGCSetItemStyleResponse",
		2580: "k_EMsgSQLGCToGCGrantBackpackSlots",
		2581: "k_EMsgClientToGCLookupAccountName",
		2582: "k_EMsgClientToGCLookupAccountNameResponse",
		2583: "k_EMsgGCToGCDevRevokeUserItems",
		2584: "k_EMsgClientToGCCreateStaticRecipe",
		2585: "k_EMsgClientToGCCreateStaticRecipeResponse",
		2586: "k_EMsgGCToGCStoreProcessCDKeyTransaction",
		2587: "k_EMsgGCToGCStoreProcessCDKeyTransactionResponse",
		2588: "k_EMsgGCToGCStoreProcessSettlement",
		2589: "k_EMsgGCToGCStoreProcessSettlementResponse",
		2590: "k_EMsgGCToGCConsoleOutput",
		2591: "k_EMsgGCToClientItemAges",
		2592: "k_EMsgGCToGCInternalTestMsg",
		2593: "k_EMsgGCToGCClientServerVersionsUpdated",
		2594: "k_EMsgGCUseMultipleItemsRequest",
		2595: "k_EMsgGCGetAccountSubscriptionItem",
		2596: "k_EMsgGCGetAccountSubscriptionItemResponse",
		2598: "k_EMsgGCToGCBroadcastMessageFromSub",
		2599: "k_EMsgGCToClientCurrencyPricePoints",
		2600: "k_EMsgGCToGCAddSubscriptionTime",
		2601: "k_EMsgGCToGCFlushSteamInventoryCache",
		2602: "k_EMsgGCRequestCrateEscalationLevel",
		2603: "k_EMsgGCRequestCrateEscalationLevelResponse",
		2604: "k_EMsgGCToGCUpdateSubscriptionItems",
		2605: "k_EMsgGCToGCSelfPing",
		2606: "k_EMsgGCToGCGetInfuxIntervalStats",
		2607: "k_EMsgGCToGCGetInfuxIntervalStatsResponse",
		2608: "k_EMsgGCToGCPurchaseSucceeded",
		2609: "k_EMsgClientToGCGetLimitedItemPurchaseQuantity",
		2610: "k_EMsgClientToGCGetLimitedItemPurchaseQuantityResponse",
	}
	EGCItemMsg_value = map[string]int32{
		"k_EMsgGCBase":                                           1000,
		"k_EMsgGCSetItemPosition":                                1001,
		"k_EMsgGCDelete":                                         1004,
		"k_EMsgGCVerifyCacheSubscription":                        1005,
		"k_EMsgClientToGCNameItem":                               1006,
		"k_EMsgGCPaintItem":                                      1009,
		"k_EMsgGCPaintItemResponse":                              1010,
		"k_EMsgGCGoldenWrenchBroadcast":                          1011,
		"k_EMsgGCMOTDRequest":                                    1012,
		"k_EMsgGCMOTDRequestResponse":                            1013,
		"k_EMsgGCAddItemToSocket_DEPRECATED":                     1014,
		"k_EMsgGCAddItemToSocketResponse_DEPRECATED":             1015,
		"k_EMsgGCAddSocketToBaseItem_DEPRECATED":                 1016,
		"k_EMsgGCAddSocketToItem_DEPRECATED":                     1017,
		"k_EMsgGCAddSocketToItemResponse_DEPRECATED":             1018,
		"k_EMsgGCNameBaseItem":                                   1019,
		"k_EMsgGCNameBaseItemResponse":                           1020,
		"k_EMsgGCRemoveSocketItem_DEPRECATED":                    1021,
		"k_EMsgGCRemoveSocketItemResponse_DEPRECATED":            1022,
		"k_EMsgGCCustomizeItemTexture":                           1023,
		"k_EMsgGCCustomizeItemTextureResponse":                   1024,
		"k_EMsgGCUseItemRequest":                                 1025,
		"k_EMsgGCUseItemResponse":                                1026,
		"k_EMsgGCGiftedItems":                                    1027,
		"k_EMsgGCRemoveItemName":                                 1030,
		"k_EMsgGCRemoveItemPaint":                                1031,
		"k_EMsgGCUnwrapGiftRequest":                              1037,
		"k_EMsgGCUnwrapGiftResponse":                             1038,
		"k_EMsgGCSetItemStyle_DEPRECATED":                        1039,
		"k_EMsgGCUsedClaimCodeItem":                              1040,
		"k_EMsgGCSortItems":                                      1041,
		"k_EMsgGC_RevolvingLootList_DEPRECATED":                  1042,
		"k_EMsgGCUpdateItemSchema":                               1049,
		"k_EMsgGCRemoveCustomTexture":                            1051,
		"k_EMsgGCRemoveCustomTextureResponse":                    1052,
		"k_EMsgGCRemoveMakersMark":                               1053,
		"k_EMsgGCRemoveMakersMarkResponse":                       1054,
		"k_EMsgGCRemoveUniqueCraftIndex":                         1055,
		"k_EMsgGCRemoveUniqueCraftIndexResponse":                 1056,
		"k_EMsgGCSaxxyBroadcast":                                 1057,
		"k_EMsgGCBackpackSortFinished":                           1058,
		"k_EMsgGCAdjustItemEquippedState":                        1059,
		"k_EMsgGCCollectItem":                                    1061,
		"k_EMsgGCItemAcknowledged":                               1062,
		"k_EMsgGCPresets_SelectPresetForClass":                   1063,
		"k_EMsgGCPresets_SetItemPosition":                        1064,
		"k_EMsgGCPresets_SelectPresetForClassReply":              1067,
		"k_EMsgClientToGCNameItemResponse":                       1068,
		"k_EMsgGCApplyConsumableEffects":                         1069,
		"k_EMsgGCShowItemsPickedUp":                              1071,
		"k_EMsgGCClientDisplayNotification":                      1072,
		"k_EMsgGCApplyStrangePart":                               1073,
		"k_EMsgGC_IncrementKillCountResponse":                    1075,
		"k_EMsgGCApplyPennantUpgrade":                            1076,
		"k_EMsgGCSetItemPositions":                               1077,
		"k_EMsgGCSetItemPositions_RateLimited":                   1096,
		"k_EMsgGCApplyEggEssence":                                1078,
		"k_EMsgGCNameEggEssenceResponse":                         1079,
		"k_EMsgGCFulfillDynamicRecipeComponent":                  1082,
		"k_EMsgGCFulfillDynamicRecipeComponentResponse":          1083,
		"k_EMsgGCClientRequestMarketData":                        1084,
		"k_EMsgGCClientRequestMarketDataResponse":                1085,
		"k_EMsgGCExtractGems":                                    1086,
		"k_EMsgGCAddSocket":                                      1087,
		"k_EMsgGCAddItemToSocket":                                1088,
		"k_EMsgGCAddItemToSocketResponse":                        1089,
		"k_EMsgGCAddSocketResponse":                              1090,
		"k_EMsgGCResetStrangeGemCount":                           1091,
		"k_EMsgGCRequestCrateItems":                              1092,
		"k_EMsgGCRequestCrateItemsResponse":                      1093,
		"k_EMsgGCExtractGemsResponse":                            1094,
		"k_EMsgGCResetStrangeGemCountResponse":                   1095,
		"k_EMsgGCServerUseItemRequest":                           1103,
		"k_EMsgGCAddGiftItem":                                    1104,
		"k_EMsgGCRemoveItemGiftMessage":                          1105,
		"k_EMsgGCRemoveItemGiftMessageResponse":                  1106,
		"k_EMsgGCRemoveItemGifterAccountId":                      1107,
		"k_EMsgGCRemoveItemGifterAccountIdResponse":              1108,
		"k_EMsgClientToGCRemoveItemGifterAttributes":             1109,
		"k_EMsgClientToGCRemoveItemName":                         1110,
		"k_EMsgClientToGCRemoveItemDescription":                  1111,
		"k_EMsgClientToGCRemoveItemAttributeResponse":            1112,
		"k_EMsgGCTradingBase":                                    1500,
		"k_EMsgGCTrading_InitiateTradeRequest":                   1501,
		"k_EMsgGCTrading_InitiateTradeResponse":                  1502,
		"k_EMsgGCTrading_StartSession":                           1503,
		"k_EMsgGCTrading_SessionClosed":                          1509,
		"k_EMsgGCTrading_InitiateTradeRequestResponse":           1514,
		"k_EMsgGCServerBrowser_FavoriteServer":                   1601,
		"k_EMsgGCServerBrowser_BlacklistServer":                  1602,
		"k_EMsgGCServerRentalsBase":                              1700,
		"k_EMsgGCDev_NewItemRequest":                             2001,
		"k_EMsgGCDev_NewItemRequestResponse":                     2002,
		"k_EMsgGCDev_UnlockAllItemStylesRequest":                 2003,
		"k_EMsgGCDev_UnlockAllItemStylesResponse":                2004,
		"k_EMsgGCStorePurchaseFinalize":                          2504,
		"k_EMsgGCStorePurchaseFinalizeResponse":                  2505,
		"k_EMsgGCStorePurchaseCancel":                            2506,
		"k_EMsgGCStorePurchaseCancelResponse":                    2507,
		"k_EMsgGCStorePurchaseInit":                              2510,
		"k_EMsgGCStorePurchaseInitResponse":                      2511,
		"k_EMsgGCToGCBannedWordListUpdated":                      2515,
		"k_EMsgGCToGCDirtySDOCache":                              2516,
		"k_EMsgGCToGCDirtyMultipleSDOCache":                      2517,
		"k_EMsgGCToGCUpdateSQLKeyValue":                          2518,
		"k_EMsgGCToGCBroadcastConsoleCommand":                    2521,
		"k_EMsgGCServerVersionUpdated":                           2522,
		"k_EMsgGCApplyAutograph":                                 2523,
		"k_EMsgGCToGCWebAPIAccountChanged":                       2524,
		"k_EMsgGCClientVersionUpdated":                           2528,
		"k_EMsgGCItemPurgatory_FinalizePurchase":                 2531,
		"k_EMsgGCItemPurgatory_FinalizePurchaseResponse":         2532,
		"k_EMsgGCItemPurgatory_RefundPurchase":                   2533,
		"k_EMsgGCItemPurgatory_RefundPurchaseResponse":           2534,
		"k_EMsgGCToGCPlayerStrangeCountAdjustments":              2535,
		"k_EMsgGCRequestStoreSalesData":                          2536,
		"k_EMsgGCRequestStoreSalesDataResponse":                  2537,
		"k_EMsgGCRequestStoreSalesDataUpToDateResponse":          2538,
		"k_EMsgGCToGCPingRequest":                                2539,
		"k_EMsgGCToGCPingResponse":                               2540,
		"k_EMsgGCToGCGetUserSessionServer":                       2541,
		"k_EMsgGCToGCGetUserSessionServerResponse":               2542,
		"k_EMsgGCToGCGetUserServerMembers":                       2543,
		"k_EMsgGCToGCGetUserServerMembersResponse":               2544,
		"k_EMsgGCToGCGetUserPCBangNo":                            2545,
		"k_EMsgGCToGCGetUserPCBangNoResponse":                    2546,
		"k_EMsgGCToGCCanUseDropRateBonus":                        2547,
		"k_EMsgSQLAddDropRateBonus":                              2548,
		"k_EMsgGCToGCRefreshSOCache":                             2549,
		"k_EMsgGCToGCApplyLocalizationDiff":                      2550,
		"k_EMsgGCToGCApplyLocalizationDiffResponse":              2551,
		"k_EMsgGCToGCCheckAccountTradeStatus":                    2552,
		"k_EMsgGCToGCCheckAccountTradeStatusResponse":            2553,
		"k_EMsgGCToGCGrantAccountRolledItems":                    2554,
		"k_EMsgGCToGCGrantSelfMadeItemToAccount":                 2555,
		"k_EMsgGCPartnerBalanceRequest":                          2557,
		"k_EMsgGCPartnerBalanceResponse":                         2558,
		"k_EMsgGCPartnerRechargeRedirectURLRequest":              2559,
		"k_EMsgGCPartnerRechargeRedirectURLResponse":             2560,
		"k_EMsgGCStatueCraft":                                    2561,
		"k_EMsgGCRedeemCode":                                     2562,
		"k_EMsgGCRedeemCodeResponse":                             2563,
		"k_EMsgGCToGCItemConsumptionRollback":                    2564,
		"k_EMsgClientToGCWrapAndDeliverGift":                     2565,
		"k_EMsgClientToGCWrapAndDeliverGiftResponse":             2566,
		"k_EMsgClientToGCUnpackBundleResponse":                   2567,
		"k_EMsgGCToClientStoreTransactionCompleted":              2568,
		"k_EMsgClientToGCEquipItems":                             2569,
		"k_EMsgClientToGCEquipItemsResponse":                     2570,
		"k_EMsgClientToGCUnlockItemStyle":                        2571,
		"k_EMsgClientToGCUnlockItemStyleResponse":                2572,
		"k_EMsgClientToGCSetItemInventoryCategory":               2573,
		"k_EMsgClientToGCUnlockCrate":                            2574,
		"k_EMsgClientToGCUnlockCrateResponse":                    2575,
		"k_EMsgClientToGCUnpackBundle":                           2576,
		"k_EMsgClientToGCSetItemStyle":                           2577,
		"k_EMsgClientToGCSetItemStyleResponse":                   2578,
		"k_EMsgSQLGCToGCGrantBackpackSlots":                      2580,
		"k_EMsgClientToGCLookupAccountName":                      2581,
		"k_EMsgClientToGCLookupAccountNameResponse":              2582,
		"k_EMsgGCToGCDevRevokeUserItems":                         2583,
		"k_EMsgClientToGCCreateStaticRecipe":                     2584,
		"k_EMsgClientToGCCreateStaticRecipeResponse":             2585,
		"k_EMsgGCToGCStoreProcessCDKeyTransaction":               2586,
		"k_EMsgGCToGCStoreProcessCDKeyTransactionResponse":       2587,
		"k_EMsgGCToGCStoreProcessSettlement":                     2588,
		"k_EMsgGCToGCStoreProcessSettlementResponse":             2589,
		"k_EMsgGCToGCConsoleOutput":                              2590,
		"k_EMsgGCToClientItemAges":                               2591,
		"k_EMsgGCToGCInternalTestMsg":                            2592,
		"k_EMsgGCToGCClientServerVersionsUpdated":                2593,
		"k_EMsgGCUseMultipleItemsRequest":                        2594,
		"k_EMsgGCGetAccountSubscriptionItem":                     2595,
		"k_EMsgGCGetAccountSubscriptionItemResponse":             2596,
		"k_EMsgGCToGCBroadcastMessageFromSub":                    2598,
		"k_EMsgGCToClientCurrencyPricePoints":                    2599,
		"k_EMsgGCToGCAddSubscriptionTime":                        2600,
		"k_EMsgGCToGCFlushSteamInventoryCache":                   2601,
		"k_EMsgGCRequestCrateEscalationLevel":                    2602,
		"k_EMsgGCRequestCrateEscalationLevelResponse":            2603,
		"k_EMsgGCToGCUpdateSubscriptionItems":                    2604,
		"k_EMsgGCToGCSelfPing":                                   2605,
		"k_EMsgGCToGCGetInfuxIntervalStats":                      2606,
		"k_EMsgGCToGCGetInfuxIntervalStatsResponse":              2607,
		"k_EMsgGCToGCPurchaseSucceeded":                          2608,
		"k_EMsgClientToGCGetLimitedItemPurchaseQuantity":         2609,
		"k_EMsgClientToGCGetLimitedItemPurchaseQuantityResponse": 2610,
	}
)

func (x EGCItemMsg) Enum() *EGCItemMsg {
	p := new(EGCItemMsg)
	*p = x
	return p
}

func (x EGCItemMsg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGCItemMsg) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[0].Descriptor()
}

func (EGCItemMsg) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[0]
}

func (x EGCItemMsg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EGCItemMsg) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EGCItemMsg(num)
	return nil
}

// Deprecated: Use EGCItemMsg.Descriptor instead.
func (EGCItemMsg) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{0}
}

type EItemPurgatoryResponse_Finalize int32

const (
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Succeeded                  EItemPurgatoryResponse_Finalize = 0
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_Incomplete          EItemPurgatoryResponse_Finalize = 1
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory EItemPurgatoryResponse_Finalize = 2
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems   EItemPurgatoryResponse_Finalize = 3
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache           EItemPurgatoryResponse_Finalize = 4
	EItemPurgatoryResponse_Finalize_k_ItemPurgatoryResponse_Finalize_BackpackFull               EItemPurgatoryResponse_Finalize = 5
)

// Enum value maps for EItemPurgatoryResponse_Finalize.
var (
	EItemPurgatoryResponse_Finalize_name = map[int32]string{
		0: "k_ItemPurgatoryResponse_Finalize_Succeeded",
		1: "k_ItemPurgatoryResponse_Finalize_Failed_Incomplete",
		2: "k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory",
		3: "k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems",
		4: "k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache",
		5: "k_ItemPurgatoryResponse_Finalize_BackpackFull",
	}
	EItemPurgatoryResponse_Finalize_value = map[string]int32{
		"k_ItemPurgatoryResponse_Finalize_Succeeded":                  0,
		"k_ItemPurgatoryResponse_Finalize_Failed_Incomplete":          1,
		"k_ItemPurgatoryResponse_Finalize_Failed_ItemsNotInPurgatory": 2,
		"k_ItemPurgatoryResponse_Finalize_Failed_CouldNotFindItems":   3,
		"k_ItemPurgatoryResponse_Finalize_Failed_NoSOCache":           4,
		"k_ItemPurgatoryResponse_Finalize_BackpackFull":               5,
	}
)

func (x EItemPurgatoryResponse_Finalize) Enum() *EItemPurgatoryResponse_Finalize {
	p := new(EItemPurgatoryResponse_Finalize)
	*p = x
	return p
}

func (x EItemPurgatoryResponse_Finalize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EItemPurgatoryResponse_Finalize) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[1].Descriptor()
}

func (EItemPurgatoryResponse_Finalize) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[1]
}

func (x EItemPurgatoryResponse_Finalize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EItemPurgatoryResponse_Finalize) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EItemPurgatoryResponse_Finalize(num)
	return nil
}

// Deprecated: Use EItemPurgatoryResponse_Finalize.Descriptor instead.
func (EItemPurgatoryResponse_Finalize) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{1}
}

type EItemPurgatoryResponse_Refund int32

const (
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Succeeded                 EItemPurgatoryResponse_Refund = 0
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory EItemPurgatoryResponse_Refund = 1
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem   EItemPurgatoryResponse_Refund = 2
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NoSOCache          EItemPurgatoryResponse_Refund = 3
	EItemPurgatoryResponse_Refund_k_ItemPurgatoryResponse_Refund_Failed_NoDetail           EItemPurgatoryResponse_Refund = 4
)

// Enum value maps for EItemPurgatoryResponse_Refund.
var (
	EItemPurgatoryResponse_Refund_name = map[int32]string{
		0: "k_ItemPurgatoryResponse_Refund_Succeeded",
		1: "k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory",
		2: "k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem",
		3: "k_ItemPurgatoryResponse_Refund_Failed_NoSOCache",
		4: "k_ItemPurgatoryResponse_Refund_Failed_NoDetail",
	}
	EItemPurgatoryResponse_Refund_value = map[string]int32{
		"k_ItemPurgatoryResponse_Refund_Succeeded":                 0,
		"k_ItemPurgatoryResponse_Refund_Failed_ItemNotInPurgatory": 1,
		"k_ItemPurgatoryResponse_Refund_Failed_CouldNotFindItem":   2,
		"k_ItemPurgatoryResponse_Refund_Failed_NoSOCache":          3,
		"k_ItemPurgatoryResponse_Refund_Failed_NoDetail":           4,
	}
)

func (x EItemPurgatoryResponse_Refund) Enum() *EItemPurgatoryResponse_Refund {
	p := new(EItemPurgatoryResponse_Refund)
	*p = x
	return p
}

func (x EItemPurgatoryResponse_Refund) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EItemPurgatoryResponse_Refund) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[2].Descriptor()
}

func (EItemPurgatoryResponse_Refund) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[2]
}

func (x EItemPurgatoryResponse_Refund) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EItemPurgatoryResponse_Refund) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EItemPurgatoryResponse_Refund(num)
	return nil
}

// Deprecated: Use EItemPurgatoryResponse_Refund.Descriptor instead.
func (EItemPurgatoryResponse_Refund) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{2}
}

type EGCMsgInitiateTradeResponse int32

const (
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Accepted                          EGCMsgInitiateTradeResponse = 0
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Declined                          EGCMsgInitiateTradeResponse = 1
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator              EGCMsgInitiateTradeResponse = 2
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_VAC_Banned_Target                 EGCMsgInitiateTradeResponse = 3
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Target_Already_Trading            EGCMsgInitiateTradeResponse = 4
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Disabled                          EGCMsgInitiateTradeResponse = 5
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_NotLoggedIn                       EGCMsgInitiateTradeResponse = 6
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Cancel                            EGCMsgInitiateTradeResponse = 7
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TooSoon                           EGCMsgInitiateTradeResponse = 8
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TooSoonPenalty                    EGCMsgInitiateTradeResponse = 9
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator            EGCMsgInitiateTradeResponse = 10
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Trade_Banned_Target               EGCMsgInitiateTradeResponse = 11
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED EGCMsgInitiateTradeResponse = 12
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator          EGCMsgInitiateTradeResponse = 13
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Service_Unavailable               EGCMsgInitiateTradeResponse = 14
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Target_Blocked                    EGCMsgInitiateTradeResponse = 15
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail                 EGCMsgInitiateTradeResponse = 16
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_NeedSteamGuard                    EGCMsgInitiateTradeResponse = 17
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_SteamGuardDuration                EGCMsgInitiateTradeResponse = 18
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TheyCannotTrade                   EGCMsgInitiateTradeResponse = 19
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Recent_Password_Reset             EGCMsgInitiateTradeResponse = 20
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Using_New_Device                  EGCMsgInitiateTradeResponse = 21
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie               EGCMsgInitiateTradeResponse = 22
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_TooRecentFriend                   EGCMsgInitiateTradeResponse = 23
	EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted             EGCMsgInitiateTradeResponse = 24
)

// Enum value maps for EGCMsgInitiateTradeResponse.
var (
	EGCMsgInitiateTradeResponse_name = map[int32]string{
		0:  "k_EGCMsgInitiateTradeResponse_Accepted",
		1:  "k_EGCMsgInitiateTradeResponse_Declined",
		2:  "k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator",
		3:  "k_EGCMsgInitiateTradeResponse_VAC_Banned_Target",
		4:  "k_EGCMsgInitiateTradeResponse_Target_Already_Trading",
		5:  "k_EGCMsgInitiateTradeResponse_Disabled",
		6:  "k_EGCMsgInitiateTradeResponse_NotLoggedIn",
		7:  "k_EGCMsgInitiateTradeResponse_Cancel",
		8:  "k_EGCMsgInitiateTradeResponse_TooSoon",
		9:  "k_EGCMsgInitiateTradeResponse_TooSoonPenalty",
		10: "k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator",
		11: "k_EGCMsgInitiateTradeResponse_Trade_Banned_Target",
		12: "k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED",
		13: "k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator",
		14: "k_EGCMsgInitiateTradeResponse_Service_Unavailable",
		15: "k_EGCMsgInitiateTradeResponse_Target_Blocked",
		16: "k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail",
		17: "k_EGCMsgInitiateTradeResponse_NeedSteamGuard",
		18: "k_EGCMsgInitiateTradeResponse_SteamGuardDuration",
		19: "k_EGCMsgInitiateTradeResponse_TheyCannotTrade",
		20: "k_EGCMsgInitiateTradeResponse_Recent_Password_Reset",
		21: "k_EGCMsgInitiateTradeResponse_Using_New_Device",
		22: "k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie",
		23: "k_EGCMsgInitiateTradeResponse_TooRecentFriend",
		24: "k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted",
	}
	EGCMsgInitiateTradeResponse_value = map[string]int32{
		"k_EGCMsgInitiateTradeResponse_Accepted":                          0,
		"k_EGCMsgInitiateTradeResponse_Declined":                          1,
		"k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator":              2,
		"k_EGCMsgInitiateTradeResponse_VAC_Banned_Target":                 3,
		"k_EGCMsgInitiateTradeResponse_Target_Already_Trading":            4,
		"k_EGCMsgInitiateTradeResponse_Disabled":                          5,
		"k_EGCMsgInitiateTradeResponse_NotLoggedIn":                       6,
		"k_EGCMsgInitiateTradeResponse_Cancel":                            7,
		"k_EGCMsgInitiateTradeResponse_TooSoon":                           8,
		"k_EGCMsgInitiateTradeResponse_TooSoonPenalty":                    9,
		"k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator":            10,
		"k_EGCMsgInitiateTradeResponse_Trade_Banned_Target":               11,
		"k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED": 12,
		"k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator":          13,
		"k_EGCMsgInitiateTradeResponse_Service_Unavailable":               14,
		"k_EGCMsgInitiateTradeResponse_Target_Blocked":                    15,
		"k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail":                 16,
		"k_EGCMsgInitiateTradeResponse_NeedSteamGuard":                    17,
		"k_EGCMsgInitiateTradeResponse_SteamGuardDuration":                18,
		"k_EGCMsgInitiateTradeResponse_TheyCannotTrade":                   19,
		"k_EGCMsgInitiateTradeResponse_Recent_Password_Reset":             20,
		"k_EGCMsgInitiateTradeResponse_Using_New_Device":                  21,
		"k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie":               22,
		"k_EGCMsgInitiateTradeResponse_TooRecentFriend":                   23,
		"k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted":             24,
	}
)

func (x EGCMsgInitiateTradeResponse) Enum() *EGCMsgInitiateTradeResponse {
	p := new(EGCMsgInitiateTradeResponse)
	*p = x
	return p
}

func (x EGCMsgInitiateTradeResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EGCMsgInitiateTradeResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[3].Descriptor()
}

func (EGCMsgInitiateTradeResponse) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[3]
}

func (x EGCMsgInitiateTradeResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EGCMsgInitiateTradeResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EGCMsgInitiateTradeResponse(num)
	return nil
}

// Deprecated: Use EGCMsgInitiateTradeResponse.Descriptor instead.
func (EGCMsgInitiateTradeResponse) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{3}
}

type CMsgRequestCrateItemsResponse_EResult int32

const (
	CMsgRequestCrateItemsResponse_k_Succeeded CMsgRequestCrateItemsResponse_EResult = 0
	CMsgRequestCrateItemsResponse_k_Failed    CMsgRequestCrateItemsResponse_EResult = 1
)

// Enum value maps for CMsgRequestCrateItemsResponse_EResult.
var (
	CMsgRequestCrateItemsResponse_EResult_name = map[int32]string{
		0: "k_Succeeded",
		1: "k_Failed",
	}
	CMsgRequestCrateItemsResponse_EResult_value = map[string]int32{
		"k_Succeeded": 0,
		"k_Failed":    1,
	}
)

func (x CMsgRequestCrateItemsResponse_EResult) Enum() *CMsgRequestCrateItemsResponse_EResult {
	p := new(CMsgRequestCrateItemsResponse_EResult)
	*p = x
	return p
}

func (x CMsgRequestCrateItemsResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgRequestCrateItemsResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[4].Descriptor()
}

func (CMsgRequestCrateItemsResponse_EResult) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[4]
}

func (x CMsgRequestCrateItemsResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgRequestCrateItemsResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgRequestCrateItemsResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgRequestCrateItemsResponse_EResult.Descriptor instead.
func (CMsgRequestCrateItemsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{20, 0}
}

type CMsgRequestCrateEscalationLevelResponse_EResult int32

const (
	CMsgRequestCrateEscalationLevelResponse_k_Succeeded CMsgRequestCrateEscalationLevelResponse_EResult = 0
	CMsgRequestCrateEscalationLevelResponse_k_Failed    CMsgRequestCrateEscalationLevelResponse_EResult = 1
)

// Enum value maps for CMsgRequestCrateEscalationLevelResponse_EResult.
var (
	CMsgRequestCrateEscalationLevelResponse_EResult_name = map[int32]string{
		0: "k_Succeeded",
		1: "k_Failed",
	}
	CMsgRequestCrateEscalationLevelResponse_EResult_value = map[string]int32{
		"k_Succeeded": 0,
		"k_Failed":    1,
	}
)

func (x CMsgRequestCrateEscalationLevelResponse_EResult) Enum() *CMsgRequestCrateEscalationLevelResponse_EResult {
	p := new(CMsgRequestCrateEscalationLevelResponse_EResult)
	*p = x
	return p
}

func (x CMsgRequestCrateEscalationLevelResponse_EResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgRequestCrateEscalationLevelResponse_EResult) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[5].Descriptor()
}

func (CMsgRequestCrateEscalationLevelResponse_EResult) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[5]
}

func (x CMsgRequestCrateEscalationLevelResponse_EResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgRequestCrateEscalationLevelResponse_EResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgRequestCrateEscalationLevelResponse_EResult(num)
	return nil
}

// Deprecated: Use CMsgRequestCrateEscalationLevelResponse_EResult.Descriptor instead.
func (CMsgRequestCrateEscalationLevelResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{22, 0}
}

type CMsgRedeemCodeResponse_EResultCode int32

const (
	CMsgRedeemCodeResponse_k_Succeeded              CMsgRedeemCodeResponse_EResultCode = 0
	CMsgRedeemCodeResponse_k_Failed_CodeNotFound    CMsgRedeemCodeResponse_EResultCode = 1
	CMsgRedeemCodeResponse_k_Failed_CodeAlreadyUsed CMsgRedeemCodeResponse_EResultCode = 2
	CMsgRedeemCodeResponse_k_Failed_OtherError      CMsgRedeemCodeResponse_EResultCode = 3
)

// Enum value maps for CMsgRedeemCodeResponse_EResultCode.
var (
	CMsgRedeemCodeResponse_EResultCode_name = map[int32]string{
		0: "k_Succeeded",
		1: "k_Failed_CodeNotFound",
		2: "k_Failed_CodeAlreadyUsed",
		3: "k_Failed_OtherError",
	}
	CMsgRedeemCodeResponse_EResultCode_value = map[string]int32{
		"k_Succeeded":              0,
		"k_Failed_CodeNotFound":    1,
		"k_Failed_CodeAlreadyUsed": 2,
		"k_Failed_OtherError":      3,
	}
)

func (x CMsgRedeemCodeResponse_EResultCode) Enum() *CMsgRedeemCodeResponse_EResultCode {
	p := new(CMsgRedeemCodeResponse_EResultCode)
	*p = x
	return p
}

func (x CMsgRedeemCodeResponse_EResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgRedeemCodeResponse_EResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[6].Descriptor()
}

func (CMsgRedeemCodeResponse_EResultCode) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[6]
}

func (x CMsgRedeemCodeResponse_EResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgRedeemCodeResponse_EResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgRedeemCodeResponse_EResultCode(num)
	return nil
}

// Deprecated: Use CMsgRedeemCodeResponse_EResultCode.Descriptor instead.
func (CMsgRedeemCodeResponse_EResultCode) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{43, 0}
}

type CMsgClientToGCUnpackBundleResponse_EUnpackBundle int32

const (
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Succeeded                          CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 0
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_ItemIsNotBundle             CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 1
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_UnableToCreateContainedItem CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 2
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_SOCacheError                CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 3
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_ItemIsInvalid               CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 4
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_BadItemQuantity             CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 5
	CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Failed_UnableToDeleteItem          CMsgClientToGCUnpackBundleResponse_EUnpackBundle = 6
)

// Enum value maps for CMsgClientToGCUnpackBundleResponse_EUnpackBundle.
var (
	CMsgClientToGCUnpackBundleResponse_EUnpackBundle_name = map[int32]string{
		0: "k_UnpackBundle_Succeeded",
		1: "k_UnpackBundle_Failed_ItemIsNotBundle",
		2: "k_UnpackBundle_Failed_UnableToCreateContainedItem",
		3: "k_UnpackBundle_Failed_SOCacheError",
		4: "k_UnpackBundle_Failed_ItemIsInvalid",
		5: "k_UnpackBundle_Failed_BadItemQuantity",
		6: "k_UnpackBundle_Failed_UnableToDeleteItem",
	}
	CMsgClientToGCUnpackBundleResponse_EUnpackBundle_value = map[string]int32{
		"k_UnpackBundle_Succeeded":                          0,
		"k_UnpackBundle_Failed_ItemIsNotBundle":             1,
		"k_UnpackBundle_Failed_UnableToCreateContainedItem": 2,
		"k_UnpackBundle_Failed_SOCacheError":                3,
		"k_UnpackBundle_Failed_ItemIsInvalid":               4,
		"k_UnpackBundle_Failed_BadItemQuantity":             5,
		"k_UnpackBundle_Failed_UnableToDeleteItem":          6,
	}
)

func (x CMsgClientToGCUnpackBundleResponse_EUnpackBundle) Enum() *CMsgClientToGCUnpackBundleResponse_EUnpackBundle {
	p := new(CMsgClientToGCUnpackBundleResponse_EUnpackBundle)
	*p = x
	return p
}

func (x CMsgClientToGCUnpackBundleResponse_EUnpackBundle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUnpackBundleResponse_EUnpackBundle) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[7].Descriptor()
}

func (CMsgClientToGCUnpackBundleResponse_EUnpackBundle) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[7]
}

func (x CMsgClientToGCUnpackBundleResponse_EUnpackBundle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUnpackBundleResponse_EUnpackBundle) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUnpackBundleResponse_EUnpackBundle(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUnpackBundleResponse_EUnpackBundle.Descriptor instead.
func (CMsgClientToGCUnpackBundleResponse_EUnpackBundle) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{57, 0}
}

type CMsgClientToGCSetItemStyleResponse_ESetStyle int32

const (
	CMsgClientToGCSetItemStyleResponse_k_SetStyle_Succeeded            CMsgClientToGCSetItemStyleResponse_ESetStyle = 0
	CMsgClientToGCSetItemStyleResponse_k_SetStyle_Failed               CMsgClientToGCSetItemStyleResponse_ESetStyle = 1
	CMsgClientToGCSetItemStyleResponse_k_SetStyle_Failed_StyleIsLocked CMsgClientToGCSetItemStyleResponse_ESetStyle = 2
)

// Enum value maps for CMsgClientToGCSetItemStyleResponse_ESetStyle.
var (
	CMsgClientToGCSetItemStyleResponse_ESetStyle_name = map[int32]string{
		0: "k_SetStyle_Succeeded",
		1: "k_SetStyle_Failed",
		2: "k_SetStyle_Failed_StyleIsLocked",
	}
	CMsgClientToGCSetItemStyleResponse_ESetStyle_value = map[string]int32{
		"k_SetStyle_Succeeded":            0,
		"k_SetStyle_Failed":               1,
		"k_SetStyle_Failed_StyleIsLocked": 2,
	}
)

func (x CMsgClientToGCSetItemStyleResponse_ESetStyle) Enum() *CMsgClientToGCSetItemStyleResponse_ESetStyle {
	p := new(CMsgClientToGCSetItemStyleResponse_ESetStyle)
	*p = x
	return p
}

func (x CMsgClientToGCSetItemStyleResponse_ESetStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCSetItemStyleResponse_ESetStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[8].Descriptor()
}

func (CMsgClientToGCSetItemStyleResponse_ESetStyle) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[8]
}

func (x CMsgClientToGCSetItemStyleResponse_ESetStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCSetItemStyleResponse_ESetStyle) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCSetItemStyleResponse_ESetStyle(num)
	return nil
}

// Deprecated: Use CMsgClientToGCSetItemStyleResponse_ESetStyle.Descriptor instead.
func (CMsgClientToGCSetItemStyleResponse_ESetStyle) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{62, 0}
}

type CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle int32

const (
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Succeeded                CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 0
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_PreReq            CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 1
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantAfford        CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 2
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantCommit        CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 3
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantLockCache     CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 4
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantAffordAttrib  CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 5
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_CantAffordGem     CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 6
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_NoCompendiumLevel CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 7
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_AlreadyUnlocked   CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 8
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_OtherError        CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 9
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_ItemIsInvalid     CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 10
	CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Failed_ToolIsInvalid     CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle = 11
)

// Enum value maps for CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle.
var (
	CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_name = map[int32]string{
		0:  "k_UnlockStyle_Succeeded",
		1:  "k_UnlockStyle_Failed_PreReq",
		2:  "k_UnlockStyle_Failed_CantAfford",
		3:  "k_UnlockStyle_Failed_CantCommit",
		4:  "k_UnlockStyle_Failed_CantLockCache",
		5:  "k_UnlockStyle_Failed_CantAffordAttrib",
		6:  "k_UnlockStyle_Failed_CantAffordGem",
		7:  "k_UnlockStyle_Failed_NoCompendiumLevel",
		8:  "k_UnlockStyle_Failed_AlreadyUnlocked",
		9:  "k_UnlockStyle_Failed_OtherError",
		10: "k_UnlockStyle_Failed_ItemIsInvalid",
		11: "k_UnlockStyle_Failed_ToolIsInvalid",
	}
	CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_value = map[string]int32{
		"k_UnlockStyle_Succeeded":                0,
		"k_UnlockStyle_Failed_PreReq":            1,
		"k_UnlockStyle_Failed_CantAfford":        2,
		"k_UnlockStyle_Failed_CantCommit":        3,
		"k_UnlockStyle_Failed_CantLockCache":     4,
		"k_UnlockStyle_Failed_CantAffordAttrib":  5,
		"k_UnlockStyle_Failed_CantAffordGem":     6,
		"k_UnlockStyle_Failed_NoCompendiumLevel": 7,
		"k_UnlockStyle_Failed_AlreadyUnlocked":   8,
		"k_UnlockStyle_Failed_OtherError":        9,
		"k_UnlockStyle_Failed_ItemIsInvalid":     10,
		"k_UnlockStyle_Failed_ToolIsInvalid":     11,
	}
)

func (x CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) Enum() *CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle {
	p := new(CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle)
	*p = x
	return p
}

func (x CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[9].Descriptor()
}

func (CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[9]
}

func (x CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle(num)
	return nil
}

// Deprecated: Use CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle.Descriptor instead.
func (CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{64, 0}
}

type CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute int32

const (
	CMsgClientToGCRemoveItemAttributeResponse_k_RemoveItemAttribute_Succeeded                       CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute = 0
	CMsgClientToGCRemoveItemAttributeResponse_k_RemoveItemAttribute_Failed                          CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute = 1
	CMsgClientToGCRemoveItemAttributeResponse_k_RemoveItemAttribute_Failed_ItemIsInvalid            CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute = 2
	CMsgClientToGCRemoveItemAttributeResponse_k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute = 3
	CMsgClientToGCRemoveItemAttributeResponse_k_RemoveItemAttribute_Failed_AttributeDoesntExist     CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute = 4
)

// Enum value maps for CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute.
var (
	CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_name = map[int32]string{
		0: "k_RemoveItemAttribute_Succeeded",
		1: "k_RemoveItemAttribute_Failed",
		2: "k_RemoveItemAttribute_Failed_ItemIsInvalid",
		3: "k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved",
		4: "k_RemoveItemAttribute_Failed_AttributeDoesntExist",
	}
	CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_value = map[string]int32{
		"k_RemoveItemAttribute_Succeeded":                       0,
		"k_RemoveItemAttribute_Failed":                          1,
		"k_RemoveItemAttribute_Failed_ItemIsInvalid":            2,
		"k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved": 3,
		"k_RemoveItemAttribute_Failed_AttributeDoesntExist":     4,
	}
)

func (x CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) Enum() *CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute {
	p := new(CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute)
	*p = x
	return p
}

func (x CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[10].Descriptor()
}

func (CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[10]
}

func (x CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute(num)
	return nil
}

// Deprecated: Use CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute.Descriptor instead.
func (CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{69, 0}
}

type CMsgClientToGCNameItemResponse_ENameItem int32

const (
	CMsgClientToGCNameItemResponse_k_NameItem_Succeeded            CMsgClientToGCNameItemResponse_ENameItem = 0
	CMsgClientToGCNameItemResponse_k_NameItem_Failed               CMsgClientToGCNameItemResponse_ENameItem = 1
	CMsgClientToGCNameItemResponse_k_NameItem_Failed_ToolIsInvalid CMsgClientToGCNameItemResponse_ENameItem = 2
	CMsgClientToGCNameItemResponse_k_NameItem_Failed_ItemIsInvalid CMsgClientToGCNameItemResponse_ENameItem = 3
	CMsgClientToGCNameItemResponse_k_NameItem_Failed_NameIsInvalid CMsgClientToGCNameItemResponse_ENameItem = 4
)

// Enum value maps for CMsgClientToGCNameItemResponse_ENameItem.
var (
	CMsgClientToGCNameItemResponse_ENameItem_name = map[int32]string{
		0: "k_NameItem_Succeeded",
		1: "k_NameItem_Failed",
		2: "k_NameItem_Failed_ToolIsInvalid",
		3: "k_NameItem_Failed_ItemIsInvalid",
		4: "k_NameItem_Failed_NameIsInvalid",
	}
	CMsgClientToGCNameItemResponse_ENameItem_value = map[string]int32{
		"k_NameItem_Succeeded":            0,
		"k_NameItem_Failed":               1,
		"k_NameItem_Failed_ToolIsInvalid": 2,
		"k_NameItem_Failed_ItemIsInvalid": 3,
		"k_NameItem_Failed_NameIsInvalid": 4,
	}
)

func (x CMsgClientToGCNameItemResponse_ENameItem) Enum() *CMsgClientToGCNameItemResponse_ENameItem {
	p := new(CMsgClientToGCNameItemResponse_ENameItem)
	*p = x
	return p
}

func (x CMsgClientToGCNameItemResponse_ENameItem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCNameItemResponse_ENameItem) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[11].Descriptor()
}

func (CMsgClientToGCNameItemResponse_ENameItem) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[11]
}

func (x CMsgClientToGCNameItemResponse_ENameItem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCNameItemResponse_ENameItem) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCNameItemResponse_ENameItem(num)
	return nil
}

// Deprecated: Use CMsgClientToGCNameItemResponse_ENameItem.Descriptor instead.
func (CMsgClientToGCNameItemResponse_ENameItem) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{71, 0}
}

type CMsgClientToGCCreateStaticRecipeResponse_EResponse int32

const (
	CMsgClientToGCCreateStaticRecipeResponse_eResponse_Success          CMsgClientToGCCreateStaticRecipeResponse_EResponse = 0
	CMsgClientToGCCreateStaticRecipeResponse_eResponse_OfferingDisabled CMsgClientToGCCreateStaticRecipeResponse_EResponse = 1
	CMsgClientToGCCreateStaticRecipeResponse_eResponse_InvalidItems     CMsgClientToGCCreateStaticRecipeResponse_EResponse = 2
	CMsgClientToGCCreateStaticRecipeResponse_eResponse_InternalError    CMsgClientToGCCreateStaticRecipeResponse_EResponse = 3
	CMsgClientToGCCreateStaticRecipeResponse_eResponse_MissingLeague    CMsgClientToGCCreateStaticRecipeResponse_EResponse = 4
	CMsgClientToGCCreateStaticRecipeResponse_eResponse_MissingEvent     CMsgClientToGCCreateStaticRecipeResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCCreateStaticRecipeResponse_EResponse.
var (
	CMsgClientToGCCreateStaticRecipeResponse_EResponse_name = map[int32]string{
		0: "eResponse_Success",
		1: "eResponse_OfferingDisabled",
		2: "eResponse_InvalidItems",
		3: "eResponse_InternalError",
		4: "eResponse_MissingLeague",
		5: "eResponse_MissingEvent",
	}
	CMsgClientToGCCreateStaticRecipeResponse_EResponse_value = map[string]int32{
		"eResponse_Success":          0,
		"eResponse_OfferingDisabled": 1,
		"eResponse_InvalidItems":     2,
		"eResponse_InternalError":    3,
		"eResponse_MissingLeague":    4,
		"eResponse_MissingEvent":     5,
	}
)

func (x CMsgClientToGCCreateStaticRecipeResponse_EResponse) Enum() *CMsgClientToGCCreateStaticRecipeResponse_EResponse {
	p := new(CMsgClientToGCCreateStaticRecipeResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCCreateStaticRecipeResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCCreateStaticRecipeResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[12].Descriptor()
}

func (CMsgClientToGCCreateStaticRecipeResponse_EResponse) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[12]
}

func (x CMsgClientToGCCreateStaticRecipeResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCCreateStaticRecipeResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCCreateStaticRecipeResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipeResponse_EResponse.Descriptor instead.
func (CMsgClientToGCCreateStaticRecipeResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{93, 0}
}

type CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse int32

const (
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eInternalError     CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 0
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eSuccess           CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 1
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eTooBusy           CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 2
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eDisabled          CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 3
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eTimeout           CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 4
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eInvalidItemDef    CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 5
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eItemDefNotLimited CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse.
var (
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eInvalidItemDef",
		6: "k_eItemDefNotLimited",
	}
	CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse_value = map[string]int32{
		"k_eInternalError":     0,
		"k_eSuccess":           1,
		"k_eTooBusy":           2,
		"k_eDisabled":          3,
		"k_eTimeout":           4,
		"k_eInvalidItemDef":    5,
		"k_eItemDefNotLimited": 6,
	}
)

func (x CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) Enum() *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse {
	p := new(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_econ_gcmessages_proto_enumTypes[13].Descriptor()
}

func (CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) Type() protoreflect.EnumType {
	return &file_econ_gcmessages_proto_enumTypes[13]
}

func (x CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse.Descriptor instead.
func (CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{117, 0}
}

type CMsgApplyAutograph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutographItemId *uint64 `protobuf:"varint,1,opt,name=autograph_item_id,json=autographItemId" json:"autograph_item_id,omitempty"`
	ItemItemId      *uint64 `protobuf:"varint,2,opt,name=item_item_id,json=itemItemId" json:"item_item_id,omitempty"`
}

func (x *CMsgApplyAutograph) Reset() {
	*x = CMsgApplyAutograph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgApplyAutograph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgApplyAutograph) ProtoMessage() {}

func (x *CMsgApplyAutograph) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgApplyAutograph.ProtoReflect.Descriptor instead.
func (*CMsgApplyAutograph) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgApplyAutograph) GetAutographItemId() uint64 {
	if x != nil && x.AutographItemId != nil {
		return *x.AutographItemId
	}
	return 0
}

func (x *CMsgApplyAutograph) GetItemItemId() uint64 {
	if x != nil && x.ItemItemId != nil {
		return *x.ItemItemId
	}
	return 0
}

type CMsgAdjustItemEquippedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	NewClass   *uint32 `protobuf:"varint,2,opt,name=new_class,json=newClass" json:"new_class,omitempty"`
	NewSlot    *uint32 `protobuf:"varint,3,opt,name=new_slot,json=newSlot" json:"new_slot,omitempty"`
	StyleIndex *uint32 `protobuf:"varint,4,opt,name=style_index,json=styleIndex" json:"style_index,omitempty"`
}

func (x *CMsgAdjustItemEquippedState) Reset() {
	*x = CMsgAdjustItemEquippedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAdjustItemEquippedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAdjustItemEquippedState) ProtoMessage() {}

func (x *CMsgAdjustItemEquippedState) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAdjustItemEquippedState.ProtoReflect.Descriptor instead.
func (*CMsgAdjustItemEquippedState) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgAdjustItemEquippedState) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgAdjustItemEquippedState) GetNewClass() uint32 {
	if x != nil && x.NewClass != nil {
		return *x.NewClass
	}
	return 0
}

func (x *CMsgAdjustItemEquippedState) GetNewSlot() uint32 {
	if x != nil && x.NewSlot != nil {
		return *x.NewSlot
	}
	return 0
}

func (x *CMsgAdjustItemEquippedState) GetStyleIndex() uint32 {
	if x != nil && x.StyleIndex != nil {
		return *x.StyleIndex
	}
	return 0
}

type CMsgEconPlayerStrangeCountAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId               *uint32                                                         `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	StrangeCountAdjustments []*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment `protobuf:"bytes,2,rep,name=strange_count_adjustments,json=strangeCountAdjustments" json:"strange_count_adjustments,omitempty"`
	TurboMode               *bool                                                           `protobuf:"varint,3,opt,name=turbo_mode,json=turboMode" json:"turbo_mode,omitempty"`
}

func (x *CMsgEconPlayerStrangeCountAdjustment) Reset() {
	*x = CMsgEconPlayerStrangeCountAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgEconPlayerStrangeCountAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgEconPlayerStrangeCountAdjustment) ProtoMessage() {}

func (x *CMsgEconPlayerStrangeCountAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgEconPlayerStrangeCountAdjustment.ProtoReflect.Descriptor instead.
func (*CMsgEconPlayerStrangeCountAdjustment) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgEconPlayerStrangeCountAdjustment) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgEconPlayerStrangeCountAdjustment) GetStrangeCountAdjustments() []*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment {
	if x != nil {
		return x.StrangeCountAdjustments
	}
	return nil
}

func (x *CMsgEconPlayerStrangeCountAdjustment) GetTurboMode() bool {
	if x != nil && x.TurboMode != nil {
		return *x.TurboMode
	}
	return false
}

type CMsgRequestItemPurgatory_FinalizePurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []uint64 `protobuf:"varint,1,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgRequestItemPurgatory_FinalizePurchase) Reset() {
	*x = CMsgRequestItemPurgatory_FinalizePurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestItemPurgatory_FinalizePurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestItemPurgatory_FinalizePurchase) ProtoMessage() {}

func (x *CMsgRequestItemPurgatory_FinalizePurchase) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestItemPurgatory_FinalizePurchase.ProtoReflect.Descriptor instead.
func (*CMsgRequestItemPurgatory_FinalizePurchase) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgRequestItemPurgatory_FinalizePurchase) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgRequestItemPurgatory_FinalizePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *uint32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	ItemIds []uint64 `protobuf:"varint,2,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgRequestItemPurgatory_FinalizePurchaseResponse) Reset() {
	*x = CMsgRequestItemPurgatory_FinalizePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestItemPurgatory_FinalizePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestItemPurgatory_FinalizePurchaseResponse) ProtoMessage() {}

func (x *CMsgRequestItemPurgatory_FinalizePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestItemPurgatory_FinalizePurchaseResponse.ProtoReflect.Descriptor instead.
func (*CMsgRequestItemPurgatory_FinalizePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgRequestItemPurgatory_FinalizePurchaseResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgRequestItemPurgatory_FinalizePurchaseResponse) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgRequestItemPurgatory_RefundPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []uint64 `protobuf:"varint,1,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgRequestItemPurgatory_RefundPurchase) Reset() {
	*x = CMsgRequestItemPurgatory_RefundPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestItemPurgatory_RefundPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestItemPurgatory_RefundPurchase) ProtoMessage() {}

func (x *CMsgRequestItemPurgatory_RefundPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestItemPurgatory_RefundPurchase.ProtoReflect.Descriptor instead.
func (*CMsgRequestItemPurgatory_RefundPurchase) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgRequestItemPurgatory_RefundPurchase) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgRequestItemPurgatory_RefundPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *uint32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (x *CMsgRequestItemPurgatory_RefundPurchaseResponse) Reset() {
	*x = CMsgRequestItemPurgatory_RefundPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestItemPurgatory_RefundPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestItemPurgatory_RefundPurchaseResponse) ProtoMessage() {}

func (x *CMsgRequestItemPurgatory_RefundPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestItemPurgatory_RefundPurchaseResponse.ProtoReflect.Descriptor instead.
func (*CMsgRequestItemPurgatory_RefundPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgRequestItemPurgatory_RefundPurchaseResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgCraftingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []uint64 `protobuf:"varint,1,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgCraftingResponse) Reset() {
	*x = CMsgCraftingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCraftingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCraftingResponse) ProtoMessage() {}

func (x *CMsgCraftingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCraftingResponse.ProtoReflect.Descriptor instead.
func (*CMsgCraftingResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgCraftingResponse) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgGCRequestStoreSalesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Currency *uint32 `protobuf:"varint,2,opt,name=currency" json:"currency,omitempty"`
}

func (x *CMsgGCRequestStoreSalesData) Reset() {
	*x = CMsgGCRequestStoreSalesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestStoreSalesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestStoreSalesData) ProtoMessage() {}

func (x *CMsgGCRequestStoreSalesData) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestStoreSalesData.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestStoreSalesData) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgGCRequestStoreSalesData) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgGCRequestStoreSalesData) GetCurrency() uint32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

type CMsgGCRequestStoreSalesDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalePrice      []*CMsgGCRequestStoreSalesDataResponse_Price `protobuf:"bytes,1,rep,name=sale_price,json=salePrice" json:"sale_price,omitempty"`
	Version        *uint32                                      `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	ExpirationTime *uint32                                      `protobuf:"varint,3,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
}

func (x *CMsgGCRequestStoreSalesDataResponse) Reset() {
	*x = CMsgGCRequestStoreSalesDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestStoreSalesDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestStoreSalesDataResponse) ProtoMessage() {}

func (x *CMsgGCRequestStoreSalesDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestStoreSalesDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestStoreSalesDataResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgGCRequestStoreSalesDataResponse) GetSalePrice() []*CMsgGCRequestStoreSalesDataResponse_Price {
	if x != nil {
		return x.SalePrice
	}
	return nil
}

func (x *CMsgGCRequestStoreSalesDataResponse) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgGCRequestStoreSalesDataResponse) GetExpirationTime() uint32 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

type CMsgGCRequestStoreSalesDataUpToDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version        *uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ExpirationTime *uint32 `protobuf:"varint,2,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
}

func (x *CMsgGCRequestStoreSalesDataUpToDateResponse) Reset() {
	*x = CMsgGCRequestStoreSalesDataUpToDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestStoreSalesDataUpToDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestStoreSalesDataUpToDateResponse) ProtoMessage() {}

func (x *CMsgGCRequestStoreSalesDataUpToDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestStoreSalesDataUpToDateResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestStoreSalesDataUpToDateResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgGCRequestStoreSalesDataUpToDateResponse) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgGCRequestStoreSalesDataUpToDateResponse) GetExpirationTime() uint32 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

type CMsgGCToGCPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCPingRequest) Reset() {
	*x = CMsgGCToGCPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCPingRequest) ProtoMessage() {}

func (x *CMsgGCToGCPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCPingRequest.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCPingRequest) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{11}
}

type CMsgGCToGCPingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCPingResponse) Reset() {
	*x = CMsgGCToGCPingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCPingResponse) ProtoMessage() {}

func (x *CMsgGCToGCPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCPingResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCPingResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{12}
}

type CMsgGCToGCGetUserSessionServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgGCToGCGetUserSessionServer) Reset() {
	*x = CMsgGCToGCGetUserSessionServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGetUserSessionServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGetUserSessionServer) ProtoMessage() {}

func (x *CMsgGCToGCGetUserSessionServer) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGetUserSessionServer.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGetUserSessionServer) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgGCToGCGetUserSessionServer) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgGCToGCGetUserSessionServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerSteamId *uint64 `protobuf:"fixed64,1,opt,name=server_steam_id,json=serverSteamId" json:"server_steam_id,omitempty"`
	IsOnline      *bool   `protobuf:"varint,2,opt,name=is_online,json=isOnline" json:"is_online,omitempty"`
}

func (x *CMsgGCToGCGetUserSessionServerResponse) Reset() {
	*x = CMsgGCToGCGetUserSessionServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGetUserSessionServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGetUserSessionServerResponse) ProtoMessage() {}

func (x *CMsgGCToGCGetUserSessionServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGetUserSessionServerResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGetUserSessionServerResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgGCToGCGetUserSessionServerResponse) GetServerSteamId() uint64 {
	if x != nil && x.ServerSteamId != nil {
		return *x.ServerSteamId
	}
	return 0
}

func (x *CMsgGCToGCGetUserSessionServerResponse) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

type CMsgGCToGCGetUserServerMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId     *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MaxSpectators *uint32 `protobuf:"varint,2,opt,name=max_spectators,json=maxSpectators" json:"max_spectators,omitempty"`
}

func (x *CMsgGCToGCGetUserServerMembers) Reset() {
	*x = CMsgGCToGCGetUserServerMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGetUserServerMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGetUserServerMembers) ProtoMessage() {}

func (x *CMsgGCToGCGetUserServerMembers) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGetUserServerMembers.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGetUserServerMembers) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgGCToGCGetUserServerMembers) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCGetUserServerMembers) GetMaxSpectators() uint32 {
	if x != nil && x.MaxSpectators != nil {
		return *x.MaxSpectators
	}
	return 0
}

type CMsgGCToGCGetUserServerMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberAccountId []uint32 `protobuf:"varint,1,rep,name=member_account_id,json=memberAccountId" json:"member_account_id,omitempty"`
}

func (x *CMsgGCToGCGetUserServerMembersResponse) Reset() {
	*x = CMsgGCToGCGetUserServerMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGetUserServerMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGetUserServerMembersResponse) ProtoMessage() {}

func (x *CMsgGCToGCGetUserServerMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGetUserServerMembersResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGetUserServerMembersResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgGCToGCGetUserServerMembersResponse) GetMemberAccountId() []uint32 {
	if x != nil {
		return x.MemberAccountId
	}
	return nil
}

type CMsgLookupMultipleAccountNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountids []uint32 `protobuf:"varint,1,rep,packed,name=accountids" json:"accountids,omitempty"`
}

func (x *CMsgLookupMultipleAccountNames) Reset() {
	*x = CMsgLookupMultipleAccountNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLookupMultipleAccountNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLookupMultipleAccountNames) ProtoMessage() {}

func (x *CMsgLookupMultipleAccountNames) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLookupMultipleAccountNames.ProtoReflect.Descriptor instead.
func (*CMsgLookupMultipleAccountNames) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgLookupMultipleAccountNames) GetAccountids() []uint32 {
	if x != nil {
		return x.Accountids
	}
	return nil
}

type CMsgLookupMultipleAccountNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*CMsgLookupMultipleAccountNamesResponse_Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (x *CMsgLookupMultipleAccountNamesResponse) Reset() {
	*x = CMsgLookupMultipleAccountNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLookupMultipleAccountNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLookupMultipleAccountNamesResponse) ProtoMessage() {}

func (x *CMsgLookupMultipleAccountNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLookupMultipleAccountNamesResponse.ProtoReflect.Descriptor instead.
func (*CMsgLookupMultipleAccountNamesResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgLookupMultipleAccountNamesResponse) GetAccounts() []*CMsgLookupMultipleAccountNamesResponse_Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type CMsgRequestCrateItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrateItemDef *uint32 `protobuf:"varint,1,opt,name=crate_item_def,json=crateItemDef" json:"crate_item_def,omitempty"`
}

func (x *CMsgRequestCrateItems) Reset() {
	*x = CMsgRequestCrateItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestCrateItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestCrateItems) ProtoMessage() {}

func (x *CMsgRequestCrateItems) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestCrateItems.ProtoReflect.Descriptor instead.
func (*CMsgRequestCrateItems) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgRequestCrateItems) GetCrateItemDef() uint32 {
	if x != nil && x.CrateItemDef != nil {
		return *x.CrateItemDef
	}
	return 0
}

type CMsgRequestCrateItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response     *uint32  `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	ItemDefs     []uint32 `protobuf:"varint,2,rep,name=item_defs,json=itemDefs" json:"item_defs,omitempty"`
	PeekItemDefs []uint32 `protobuf:"varint,3,rep,name=peek_item_defs,json=peekItemDefs" json:"peek_item_defs,omitempty"`
}

func (x *CMsgRequestCrateItemsResponse) Reset() {
	*x = CMsgRequestCrateItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestCrateItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestCrateItemsResponse) ProtoMessage() {}

func (x *CMsgRequestCrateItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestCrateItemsResponse.ProtoReflect.Descriptor instead.
func (*CMsgRequestCrateItemsResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgRequestCrateItemsResponse) GetResponse() uint32 {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return 0
}

func (x *CMsgRequestCrateItemsResponse) GetItemDefs() []uint32 {
	if x != nil {
		return x.ItemDefs
	}
	return nil
}

func (x *CMsgRequestCrateItemsResponse) GetPeekItemDefs() []uint32 {
	if x != nil {
		return x.PeekItemDefs
	}
	return nil
}

type CMsgRequestCrateEscalationLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrateItemDef *uint32 `protobuf:"varint,1,opt,name=crate_item_def,json=crateItemDef" json:"crate_item_def,omitempty"`
}

func (x *CMsgRequestCrateEscalationLevel) Reset() {
	*x = CMsgRequestCrateEscalationLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestCrateEscalationLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestCrateEscalationLevel) ProtoMessage() {}

func (x *CMsgRequestCrateEscalationLevel) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestCrateEscalationLevel.ProtoReflect.Descriptor instead.
func (*CMsgRequestCrateEscalationLevel) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgRequestCrateEscalationLevel) GetCrateItemDef() uint32 {
	if x != nil && x.CrateItemDef != nil {
		return *x.CrateItemDef
	}
	return 0
}

type CMsgRequestCrateEscalationLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response         *uint32 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	EscalationLevel0 *uint32 `protobuf:"varint,2,opt,name=escalation_level0,json=escalationLevel0" json:"escalation_level0,omitempty"`
	EscalationLevel1 *uint32 `protobuf:"varint,3,opt,name=escalation_level1,json=escalationLevel1" json:"escalation_level1,omitempty"`
	EscalationLevel2 *uint32 `protobuf:"varint,4,opt,name=escalation_level2,json=escalationLevel2" json:"escalation_level2,omitempty"`
	EscalationLevel3 *uint32 `protobuf:"varint,5,opt,name=escalation_level3,json=escalationLevel3" json:"escalation_level3,omitempty"`
}

func (x *CMsgRequestCrateEscalationLevelResponse) Reset() {
	*x = CMsgRequestCrateEscalationLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestCrateEscalationLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestCrateEscalationLevelResponse) ProtoMessage() {}

func (x *CMsgRequestCrateEscalationLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestCrateEscalationLevelResponse.ProtoReflect.Descriptor instead.
func (*CMsgRequestCrateEscalationLevelResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgRequestCrateEscalationLevelResponse) GetResponse() uint32 {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return 0
}

func (x *CMsgRequestCrateEscalationLevelResponse) GetEscalationLevel0() uint32 {
	if x != nil && x.EscalationLevel0 != nil {
		return *x.EscalationLevel0
	}
	return 0
}

func (x *CMsgRequestCrateEscalationLevelResponse) GetEscalationLevel1() uint32 {
	if x != nil && x.EscalationLevel1 != nil {
		return *x.EscalationLevel1
	}
	return 0
}

func (x *CMsgRequestCrateEscalationLevelResponse) GetEscalationLevel2() uint32 {
	if x != nil && x.EscalationLevel2 != nil {
		return *x.EscalationLevel2
	}
	return 0
}

func (x *CMsgRequestCrateEscalationLevelResponse) GetEscalationLevel3() uint32 {
	if x != nil && x.EscalationLevel3 != nil {
		return *x.EscalationLevel3
	}
	return 0
}

type CMsgGCToGCCanUseDropRateBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId        *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DropRateBonus    *float32 `protobuf:"fixed32,2,opt,name=drop_rate_bonus,json=dropRateBonus" json:"drop_rate_bonus,omitempty"`
	BoosterType      *uint32  `protobuf:"varint,3,opt,name=booster_type,json=boosterType" json:"booster_type,omitempty"`
	ExclusiveItemDef *uint32  `protobuf:"varint,4,opt,name=exclusive_item_def,json=exclusiveItemDef" json:"exclusive_item_def,omitempty"`
	AllowEqualRate   *bool    `protobuf:"varint,5,opt,name=allow_equal_rate,json=allowEqualRate" json:"allow_equal_rate,omitempty"`
}

func (x *CMsgGCToGCCanUseDropRateBonus) Reset() {
	*x = CMsgGCToGCCanUseDropRateBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCCanUseDropRateBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCCanUseDropRateBonus) ProtoMessage() {}

func (x *CMsgGCToGCCanUseDropRateBonus) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCCanUseDropRateBonus.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCCanUseDropRateBonus) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgGCToGCCanUseDropRateBonus) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCCanUseDropRateBonus) GetDropRateBonus() float32 {
	if x != nil && x.DropRateBonus != nil {
		return *x.DropRateBonus
	}
	return 0
}

func (x *CMsgGCToGCCanUseDropRateBonus) GetBoosterType() uint32 {
	if x != nil && x.BoosterType != nil {
		return *x.BoosterType
	}
	return 0
}

func (x *CMsgGCToGCCanUseDropRateBonus) GetExclusiveItemDef() uint32 {
	if x != nil && x.ExclusiveItemDef != nil {
		return *x.ExclusiveItemDef
	}
	return 0
}

func (x *CMsgGCToGCCanUseDropRateBonus) GetAllowEqualRate() bool {
	if x != nil && x.AllowEqualRate != nil {
		return *x.AllowEqualRate
	}
	return false
}

type CMsgSQLAddDropRateBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemId          *uint64  `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemDef         *uint32  `protobuf:"varint,3,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	DropRateBonus   *float32 `protobuf:"fixed32,4,opt,name=drop_rate_bonus,json=dropRateBonus" json:"drop_rate_bonus,omitempty"`
	BoosterType     *uint32  `protobuf:"varint,5,opt,name=booster_type,json=boosterType" json:"booster_type,omitempty"`
	SecondsDuration *uint32  `protobuf:"varint,6,opt,name=seconds_duration,json=secondsDuration" json:"seconds_duration,omitempty"`
	EndTimeStamp    *uint32  `protobuf:"varint,7,opt,name=end_time_stamp,json=endTimeStamp" json:"end_time_stamp,omitempty"`
}

func (x *CMsgSQLAddDropRateBonus) Reset() {
	*x = CMsgSQLAddDropRateBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSQLAddDropRateBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSQLAddDropRateBonus) ProtoMessage() {}

func (x *CMsgSQLAddDropRateBonus) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSQLAddDropRateBonus.ProtoReflect.Descriptor instead.
func (*CMsgSQLAddDropRateBonus) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgSQLAddDropRateBonus) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgSQLAddDropRateBonus) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgSQLAddDropRateBonus) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

func (x *CMsgSQLAddDropRateBonus) GetDropRateBonus() float32 {
	if x != nil && x.DropRateBonus != nil {
		return *x.DropRateBonus
	}
	return 0
}

func (x *CMsgSQLAddDropRateBonus) GetBoosterType() uint32 {
	if x != nil && x.BoosterType != nil {
		return *x.BoosterType
	}
	return 0
}

func (x *CMsgSQLAddDropRateBonus) GetSecondsDuration() uint32 {
	if x != nil && x.SecondsDuration != nil {
		return *x.SecondsDuration
	}
	return 0
}

func (x *CMsgSQLAddDropRateBonus) GetEndTimeStamp() uint32 {
	if x != nil && x.EndTimeStamp != nil {
		return *x.EndTimeStamp
	}
	return 0
}

type CMsgSQLUpgradeBattleBooster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemDef     *uint32  `protobuf:"varint,2,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	BonusToAdd  *float32 `protobuf:"fixed32,3,opt,name=bonus_to_add,json=bonusToAdd" json:"bonus_to_add,omitempty"`
	BoosterType *uint32  `protobuf:"varint,4,opt,name=booster_type,json=boosterType" json:"booster_type,omitempty"`
}

func (x *CMsgSQLUpgradeBattleBooster) Reset() {
	*x = CMsgSQLUpgradeBattleBooster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSQLUpgradeBattleBooster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSQLUpgradeBattleBooster) ProtoMessage() {}

func (x *CMsgSQLUpgradeBattleBooster) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSQLUpgradeBattleBooster.ProtoReflect.Descriptor instead.
func (*CMsgSQLUpgradeBattleBooster) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgSQLUpgradeBattleBooster) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgSQLUpgradeBattleBooster) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

func (x *CMsgSQLUpgradeBattleBooster) GetBonusToAdd() float32 {
	if x != nil && x.BonusToAdd != nil {
		return *x.BonusToAdd
	}
	return 0
}

func (x *CMsgSQLUpgradeBattleBooster) GetBoosterType() uint32 {
	if x != nil && x.BoosterType != nil {
		return *x.BoosterType
	}
	return 0
}

type CMsgGCToGCRefreshSOCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Reload    *bool   `protobuf:"varint,2,opt,name=reload" json:"reload,omitempty"`
}

func (x *CMsgGCToGCRefreshSOCache) Reset() {
	*x = CMsgGCToGCRefreshSOCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCRefreshSOCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCRefreshSOCache) ProtoMessage() {}

func (x *CMsgGCToGCRefreshSOCache) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCRefreshSOCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCRefreshSOCache) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgGCToGCRefreshSOCache) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCRefreshSOCache) GetReload() bool {
	if x != nil && x.Reload != nil {
		return *x.Reload
	}
	return false
}

type CMsgGCToGCCheckAccountTradeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Initiator *bool   `protobuf:"varint,2,opt,name=initiator" json:"initiator,omitempty"`
}

func (x *CMsgGCToGCCheckAccountTradeStatus) Reset() {
	*x = CMsgGCToGCCheckAccountTradeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCCheckAccountTradeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCCheckAccountTradeStatus) ProtoMessage() {}

func (x *CMsgGCToGCCheckAccountTradeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCCheckAccountTradeStatus.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCCheckAccountTradeStatus) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgGCToGCCheckAccountTradeStatus) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCCheckAccountTradeStatus) GetInitiator() bool {
	if x != nil && x.Initiator != nil {
		return *x.Initiator
	}
	return false
}

type CMsgGCToGCCheckAccountTradeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanTrade  *bool   `protobuf:"varint,1,opt,name=can_trade,json=canTrade" json:"can_trade,omitempty"`
	ErrorCode *uint32 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *CMsgGCToGCCheckAccountTradeStatusResponse) Reset() {
	*x = CMsgGCToGCCheckAccountTradeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCCheckAccountTradeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCCheckAccountTradeStatusResponse) ProtoMessage() {}

func (x *CMsgGCToGCCheckAccountTradeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCCheckAccountTradeStatusResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCCheckAccountTradeStatusResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgGCToGCCheckAccountTradeStatusResponse) GetCanTrade() bool {
	if x != nil && x.CanTrade != nil {
		return *x.CanTrade
	}
	return false
}

func (x *CMsgGCToGCCheckAccountTradeStatusResponse) GetErrorCode() uint32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type CMsgGCToGCAddSubscriptionTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId                      *uint32  `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	MatchingSubscriptionDefIndexes []uint32 `protobuf:"varint,2,rep,name=matching_subscription_def_indexes,json=matchingSubscriptionDefIndexes" json:"matching_subscription_def_indexes,omitempty"`
	AdditionalSeconds              *uint32  `protobuf:"varint,3,opt,name=additional_seconds,json=additionalSeconds" json:"additional_seconds,omitempty"`
}

func (x *CMsgGCToGCAddSubscriptionTime) Reset() {
	*x = CMsgGCToGCAddSubscriptionTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCAddSubscriptionTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCAddSubscriptionTime) ProtoMessage() {}

func (x *CMsgGCToGCAddSubscriptionTime) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCAddSubscriptionTime.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCAddSubscriptionTime) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgGCToGCAddSubscriptionTime) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCAddSubscriptionTime) GetMatchingSubscriptionDefIndexes() []uint32 {
	if x != nil {
		return x.MatchingSubscriptionDefIndexes
	}
	return nil
}

func (x *CMsgGCToGCAddSubscriptionTime) GetAdditionalSeconds() uint32 {
	if x != nil && x.AdditionalSeconds != nil {
		return *x.AdditionalSeconds
	}
	return 0
}

type CMsgGCToGCGrantAccountRolledItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   *uint32                                   `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Items       []*CMsgGCToGCGrantAccountRolledItems_Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	AuditAction *uint32                                   `protobuf:"varint,3,opt,name=audit_action,json=auditAction" json:"audit_action,omitempty"`
	AuditData   *uint64                                   `protobuf:"varint,4,opt,name=audit_data,json=auditData" json:"audit_data,omitempty"`
}

func (x *CMsgGCToGCGrantAccountRolledItems) Reset() {
	*x = CMsgGCToGCGrantAccountRolledItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGrantAccountRolledItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGrantAccountRolledItems) ProtoMessage() {}

func (x *CMsgGCToGCGrantAccountRolledItems) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGrantAccountRolledItems.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGrantAccountRolledItems) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgGCToGCGrantAccountRolledItems) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems) GetItems() []*CMsgGCToGCGrantAccountRolledItems_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CMsgGCToGCGrantAccountRolledItems) GetAuditAction() uint32 {
	if x != nil && x.AuditAction != nil {
		return *x.AuditAction
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems) GetAuditData() uint64 {
	if x != nil && x.AuditData != nil {
		return *x.AuditData
	}
	return 0
}

type CMsgGCToGCGrantSelfMadeItemToAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefIndex *uint32 `protobuf:"varint,1,opt,name=item_def_index,json=itemDefIndex" json:"item_def_index,omitempty"`
	Accountid    *uint32 `protobuf:"varint,2,opt,name=accountid" json:"accountid,omitempty"`
}

func (x *CMsgGCToGCGrantSelfMadeItemToAccount) Reset() {
	*x = CMsgGCToGCGrantSelfMadeItemToAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGrantSelfMadeItemToAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGrantSelfMadeItemToAccount) ProtoMessage() {}

func (x *CMsgGCToGCGrantSelfMadeItemToAccount) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGrantSelfMadeItemToAccount.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGrantSelfMadeItemToAccount) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgGCToGCGrantSelfMadeItemToAccount) GetItemDefIndex() uint32 {
	if x != nil && x.ItemDefIndex != nil {
		return *x.ItemDefIndex
	}
	return 0
}

func (x *CMsgGCToGCGrantSelfMadeItemToAccount) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

type CMsgUseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId                  *uint64  `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	TargetSteamId           *uint64  `protobuf:"fixed64,2,opt,name=target_steam_id,json=targetSteamId" json:"target_steam_id,omitempty"`
	Gift_PotentialTargets   []uint32 `protobuf:"varint,3,rep,name=gift__potential_targets,json=giftPotentialTargets" json:"gift__potential_targets,omitempty"`
	Duel_ClassLock          *uint32  `protobuf:"varint,4,opt,name=duel__class_lock,json=duelClassLock" json:"duel__class_lock,omitempty"`
	InitiatorSteamId        *uint64  `protobuf:"varint,5,opt,name=initiator_steam_id,json=initiatorSteamId" json:"initiator_steam_id,omitempty"`
	Itempack_AckImmediately *bool    `protobuf:"varint,6,opt,name=itempack__ack_immediately,json=itempackAckImmediately" json:"itempack__ack_immediately,omitempty"`
}

func (x *CMsgUseItem) Reset() {
	*x = CMsgUseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgUseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUseItem) ProtoMessage() {}

func (x *CMsgUseItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUseItem.ProtoReflect.Descriptor instead.
func (*CMsgUseItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgUseItem) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgUseItem) GetTargetSteamId() uint64 {
	if x != nil && x.TargetSteamId != nil {
		return *x.TargetSteamId
	}
	return 0
}

func (x *CMsgUseItem) GetGift_PotentialTargets() []uint32 {
	if x != nil {
		return x.Gift_PotentialTargets
	}
	return nil
}

func (x *CMsgUseItem) GetDuel_ClassLock() uint32 {
	if x != nil && x.Duel_ClassLock != nil {
		return *x.Duel_ClassLock
	}
	return 0
}

func (x *CMsgUseItem) GetInitiatorSteamId() uint64 {
	if x != nil && x.InitiatorSteamId != nil {
		return *x.InitiatorSteamId
	}
	return 0
}

func (x *CMsgUseItem) GetItempack_AckImmediately() bool {
	if x != nil && x.Itempack_AckImmediately != nil {
		return *x.Itempack_AckImmediately
	}
	return false
}

type CMsgServerUseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatorAccountId *uint32      `protobuf:"varint,1,opt,name=initiator_account_id,json=initiatorAccountId" json:"initiator_account_id,omitempty"`
	UseItemMsg         *CMsgUseItem `protobuf:"bytes,2,opt,name=use_item_msg,json=useItemMsg" json:"use_item_msg,omitempty"`
}

func (x *CMsgServerUseItem) Reset() {
	*x = CMsgServerUseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgServerUseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerUseItem) ProtoMessage() {}

func (x *CMsgServerUseItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerUseItem.ProtoReflect.Descriptor instead.
func (*CMsgServerUseItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgServerUseItem) GetInitiatorAccountId() uint32 {
	if x != nil && x.InitiatorAccountId != nil {
		return *x.InitiatorAccountId
	}
	return 0
}

func (x *CMsgServerUseItem) GetUseItemMsg() *CMsgUseItem {
	if x != nil {
		return x.UseItemMsg
	}
	return nil
}

type CMsgUseMultipleItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []uint64 `protobuf:"varint,1,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgUseMultipleItems) Reset() {
	*x = CMsgUseMultipleItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgUseMultipleItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUseMultipleItems) ProtoMessage() {}

func (x *CMsgUseMultipleItems) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUseMultipleItems.ProtoReflect.Descriptor instead.
func (*CMsgUseMultipleItems) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgUseMultipleItems) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgGCPartnerBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCPartnerBalanceRequest) Reset() {
	*x = CMsgGCPartnerBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCPartnerBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCPartnerBalanceRequest) ProtoMessage() {}

func (x *CMsgGCPartnerBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCPartnerBalanceRequest.ProtoReflect.Descriptor instead.
func (*CMsgGCPartnerBalanceRequest) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{35}
}

type CMsgGCPartnerBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *EGCPartnerRequestResponse `protobuf:"varint,1,opt,name=result,enum=dota.EGCPartnerRequestResponse,def=1" json:"result,omitempty"`
	Balance *uint32                    `protobuf:"varint,2,opt,name=balance" json:"balance,omitempty"`
}

// Default values for CMsgGCPartnerBalanceResponse fields.
const (
	Default_CMsgGCPartnerBalanceResponse_Result = EGCPartnerRequestResponse_k_EPartnerRequestOK
)

func (x *CMsgGCPartnerBalanceResponse) Reset() {
	*x = CMsgGCPartnerBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCPartnerBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCPartnerBalanceResponse) ProtoMessage() {}

func (x *CMsgGCPartnerBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCPartnerBalanceResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCPartnerBalanceResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgGCPartnerBalanceResponse) GetResult() EGCPartnerRequestResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgGCPartnerBalanceResponse_Result
}

func (x *CMsgGCPartnerBalanceResponse) GetBalance() uint32 {
	if x != nil && x.Balance != nil {
		return *x.Balance
	}
	return 0
}

type CGCStoreRechargeRedirect_LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefId *uint32 `protobuf:"varint,1,opt,name=item_def_id,json=itemDefId" json:"item_def_id,omitempty"`
	Quantity  *uint32 `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
}

func (x *CGCStoreRechargeRedirect_LineItem) Reset() {
	*x = CGCStoreRechargeRedirect_LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGCStoreRechargeRedirect_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCStoreRechargeRedirect_LineItem) ProtoMessage() {}

func (x *CGCStoreRechargeRedirect_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCStoreRechargeRedirect_LineItem.ProtoReflect.Descriptor instead.
func (*CGCStoreRechargeRedirect_LineItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{37}
}

func (x *CGCStoreRechargeRedirect_LineItem) GetItemDefId() uint32 {
	if x != nil && x.ItemDefId != nil {
		return *x.ItemDefId
	}
	return 0
}

func (x *CGCStoreRechargeRedirect_LineItem) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

type CMsgGCPartnerRechargeRedirectURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineItems []*CGCStoreRechargeRedirect_LineItem `protobuf:"bytes,1,rep,name=line_items,json=lineItems" json:"line_items,omitempty"`
}

func (x *CMsgGCPartnerRechargeRedirectURLRequest) Reset() {
	*x = CMsgGCPartnerRechargeRedirectURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCPartnerRechargeRedirectURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCPartnerRechargeRedirectURLRequest) ProtoMessage() {}

func (x *CMsgGCPartnerRechargeRedirectURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCPartnerRechargeRedirectURLRequest.ProtoReflect.Descriptor instead.
func (*CMsgGCPartnerRechargeRedirectURLRequest) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgGCPartnerRechargeRedirectURLRequest) GetLineItems() []*CGCStoreRechargeRedirect_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type CMsgGCPartnerRechargeRedirectURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *EGCPartnerRequestResponse `protobuf:"varint,1,opt,name=result,enum=dota.EGCPartnerRequestResponse,def=1" json:"result,omitempty"`
	Url    *string                    `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
}

// Default values for CMsgGCPartnerRechargeRedirectURLResponse fields.
const (
	Default_CMsgGCPartnerRechargeRedirectURLResponse_Result = EGCPartnerRequestResponse_k_EPartnerRequestOK
)

func (x *CMsgGCPartnerRechargeRedirectURLResponse) Reset() {
	*x = CMsgGCPartnerRechargeRedirectURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCPartnerRechargeRedirectURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCPartnerRechargeRedirectURLResponse) ProtoMessage() {}

func (x *CMsgGCPartnerRechargeRedirectURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCPartnerRechargeRedirectURLResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCPartnerRechargeRedirectURLResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgGCPartnerRechargeRedirectURLResponse) GetResult() EGCPartnerRequestResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgGCPartnerRechargeRedirectURLResponse_Result
}

func (x *CMsgGCPartnerRechargeRedirectURLResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgGCEconSQLWorkItemEmbeddedRollbackData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId           *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	DeletedItemId       *uint64 `protobuf:"varint,2,opt,name=deleted_item_id,json=deletedItemId" json:"deleted_item_id,omitempty"`
	OldAuditAction      *uint32 `protobuf:"varint,3,opt,name=old_audit_action,json=oldAuditAction" json:"old_audit_action,omitempty"`
	NewAuditAction      *uint32 `protobuf:"varint,4,opt,name=new_audit_action,json=newAuditAction" json:"new_audit_action,omitempty"`
	ExpectedAuditAction *uint32 `protobuf:"varint,5,opt,name=expected_audit_action,json=expectedAuditAction" json:"expected_audit_action,omitempty"`
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) Reset() {
	*x = CMsgGCEconSQLWorkItemEmbeddedRollbackData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCEconSQLWorkItemEmbeddedRollbackData) ProtoMessage() {}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCEconSQLWorkItemEmbeddedRollbackData.ProtoReflect.Descriptor instead.
func (*CMsgGCEconSQLWorkItemEmbeddedRollbackData) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetDeletedItemId() uint64 {
	if x != nil && x.DeletedItemId != nil {
		return *x.DeletedItemId
	}
	return 0
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetOldAuditAction() uint32 {
	if x != nil && x.OldAuditAction != nil {
		return *x.OldAuditAction
	}
	return 0
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetNewAuditAction() uint32 {
	if x != nil && x.NewAuditAction != nil {
		return *x.NewAuditAction
	}
	return 0
}

func (x *CMsgGCEconSQLWorkItemEmbeddedRollbackData) GetExpectedAuditAction() uint32 {
	if x != nil && x.ExpectedAuditAction != nil {
		return *x.ExpectedAuditAction
	}
	return 0
}

type CMsgCraftStatue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heroid          *uint32  `protobuf:"varint,1,opt,name=heroid" json:"heroid,omitempty"`
	Sequencename    *string  `protobuf:"bytes,2,opt,name=sequencename" json:"sequencename,omitempty"`
	Cycle           *float32 `protobuf:"fixed32,3,opt,name=cycle" json:"cycle,omitempty"`
	Description     *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	PedestalItemdef *uint32  `protobuf:"varint,5,opt,name=pedestal_itemdef,json=pedestalItemdef" json:"pedestal_itemdef,omitempty"`
	Toolid          *uint64  `protobuf:"varint,6,opt,name=toolid" json:"toolid,omitempty"`
}

func (x *CMsgCraftStatue) Reset() {
	*x = CMsgCraftStatue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCraftStatue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCraftStatue) ProtoMessage() {}

func (x *CMsgCraftStatue) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCraftStatue.ProtoReflect.Descriptor instead.
func (*CMsgCraftStatue) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgCraftStatue) GetHeroid() uint32 {
	if x != nil && x.Heroid != nil {
		return *x.Heroid
	}
	return 0
}

func (x *CMsgCraftStatue) GetSequencename() string {
	if x != nil && x.Sequencename != nil {
		return *x.Sequencename
	}
	return ""
}

func (x *CMsgCraftStatue) GetCycle() float32 {
	if x != nil && x.Cycle != nil {
		return *x.Cycle
	}
	return 0
}

func (x *CMsgCraftStatue) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CMsgCraftStatue) GetPedestalItemdef() uint32 {
	if x != nil && x.PedestalItemdef != nil {
		return *x.PedestalItemdef
	}
	return 0
}

func (x *CMsgCraftStatue) GetToolid() uint64 {
	if x != nil && x.Toolid != nil {
		return *x.Toolid
	}
	return 0
}

type CMsgRedeemCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
}

func (x *CMsgRedeemCode) Reset() {
	*x = CMsgRedeemCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRedeemCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRedeemCode) ProtoMessage() {}

func (x *CMsgRedeemCode) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRedeemCode.ProtoReflect.Descriptor instead.
func (*CMsgRedeemCode) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgRedeemCode) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

type CMsgRedeemCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *uint32 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	ItemId   *uint64 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgRedeemCodeResponse) Reset() {
	*x = CMsgRedeemCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRedeemCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRedeemCodeResponse) ProtoMessage() {}

func (x *CMsgRedeemCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRedeemCodeResponse.ProtoReflect.Descriptor instead.
func (*CMsgRedeemCodeResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgRedeemCodeResponse) GetResponse() uint32 {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return 0
}

func (x *CMsgRedeemCodeResponse) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgDevNewItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefName  *string  `protobuf:"bytes,3,opt,name=item_def_name,json=itemDefName" json:"item_def_name,omitempty"`
	LootListName *string  `protobuf:"bytes,4,opt,name=loot_list_name,json=lootListName" json:"loot_list_name,omitempty"`
	AttrDefName  []string `protobuf:"bytes,5,rep,name=attr_def_name,json=attrDefName" json:"attr_def_name,omitempty"`
	AttrValue    []string `protobuf:"bytes,6,rep,name=attr_value,json=attrValue" json:"attr_value,omitempty"`
}

func (x *CMsgDevNewItemRequest) Reset() {
	*x = CMsgDevNewItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevNewItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevNewItemRequest) ProtoMessage() {}

func (x *CMsgDevNewItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevNewItemRequest.ProtoReflect.Descriptor instead.
func (*CMsgDevNewItemRequest) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgDevNewItemRequest) GetItemDefName() string {
	if x != nil && x.ItemDefName != nil {
		return *x.ItemDefName
	}
	return ""
}

func (x *CMsgDevNewItemRequest) GetLootListName() string {
	if x != nil && x.LootListName != nil {
		return *x.LootListName
	}
	return ""
}

func (x *CMsgDevNewItemRequest) GetAttrDefName() []string {
	if x != nil {
		return x.AttrDefName
	}
	return nil
}

func (x *CMsgDevNewItemRequest) GetAttrValue() []string {
	if x != nil {
		return x.AttrValue
	}
	return nil
}

type CMsgDevNewItemRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgDevNewItemRequestResponse) Reset() {
	*x = CMsgDevNewItemRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevNewItemRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevNewItemRequestResponse) ProtoMessage() {}

func (x *CMsgDevNewItemRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevNewItemRequestResponse.ProtoReflect.Descriptor instead.
func (*CMsgDevNewItemRequestResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgDevNewItemRequestResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgDevUnlockAllItemStyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgDevUnlockAllItemStyles) Reset() {
	*x = CMsgDevUnlockAllItemStyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevUnlockAllItemStyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevUnlockAllItemStyles) ProtoMessage() {}

func (x *CMsgDevUnlockAllItemStyles) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevUnlockAllItemStyles.ProtoReflect.Descriptor instead.
func (*CMsgDevUnlockAllItemStyles) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgDevUnlockAllItemStyles) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgDevUnlockAllItemStylesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgDevUnlockAllItemStylesResponse) Reset() {
	*x = CMsgDevUnlockAllItemStylesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDevUnlockAllItemStylesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDevUnlockAllItemStylesResponse) ProtoMessage() {}

func (x *CMsgDevUnlockAllItemStylesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDevUnlockAllItemStylesResponse.ProtoReflect.Descriptor instead.
func (*CMsgDevUnlockAllItemStylesResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgDevUnlockAllItemStylesResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgGCGetAccountSubscriptionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgGCGetAccountSubscriptionItem) Reset() {
	*x = CMsgGCGetAccountSubscriptionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetAccountSubscriptionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetAccountSubscriptionItem) ProtoMessage() {}

func (x *CMsgGCGetAccountSubscriptionItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetAccountSubscriptionItem.ProtoReflect.Descriptor instead.
func (*CMsgGCGetAccountSubscriptionItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgGCGetAccountSubscriptionItem) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgGCGetAccountSubscriptionItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefIndex *uint32 `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
}

func (x *CMsgGCGetAccountSubscriptionItemResponse) Reset() {
	*x = CMsgGCGetAccountSubscriptionItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCGetAccountSubscriptionItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCGetAccountSubscriptionItemResponse) ProtoMessage() {}

func (x *CMsgGCGetAccountSubscriptionItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCGetAccountSubscriptionItemResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCGetAccountSubscriptionItemResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgGCGetAccountSubscriptionItemResponse) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

type CMsgGCAddGiftItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ItemId    *uint64 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgGCAddGiftItem) Reset() {
	*x = CMsgGCAddGiftItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCAddGiftItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCAddGiftItem) ProtoMessage() {}

func (x *CMsgGCAddGiftItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCAddGiftItem.ProtoReflect.Descriptor instead.
func (*CMsgGCAddGiftItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgGCAddGiftItem) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCAddGiftItem) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgClientToGCWrapAndDeliverGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId          *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	GiveToAccountId *uint32 `protobuf:"varint,2,opt,name=give_to_account_id,json=giveToAccountId" json:"give_to_account_id,omitempty"`
	GiftMessage     *string `protobuf:"bytes,3,opt,name=gift_message,json=giftMessage" json:"gift_message,omitempty"`
}

func (x *CMsgClientToGCWrapAndDeliverGift) Reset() {
	*x = CMsgClientToGCWrapAndDeliverGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCWrapAndDeliverGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCWrapAndDeliverGift) ProtoMessage() {}

func (x *CMsgClientToGCWrapAndDeliverGift) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCWrapAndDeliverGift.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCWrapAndDeliverGift) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgClientToGCWrapAndDeliverGift) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGift) GetGiveToAccountId() uint32 {
	if x != nil && x.GiveToAccountId != nil {
		return *x.GiveToAccountId
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGift) GetGiftMessage() string {
	if x != nil && x.GiftMessage != nil {
		return *x.GiftMessage
	}
	return ""
}

type CMsgClientToGCWrapAndDeliverGiftResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response           *EGCMsgResponse              `protobuf:"varint,1,opt,name=response,enum=dota.EGCMsgResponse,def=0" json:"response,omitempty"`
	GiftingChargeUses  *uint32                      `protobuf:"varint,2,opt,name=gifting_charge_uses,json=giftingChargeUses" json:"gifting_charge_uses,omitempty"`
	GiftingChargeMax   *int32                       `protobuf:"varint,3,opt,name=gifting_charge_max,json=giftingChargeMax" json:"gifting_charge_max,omitempty"`
	GiftingUses        *uint32                      `protobuf:"varint,4,opt,name=gifting_uses,json=giftingUses" json:"gifting_uses,omitempty"`
	GiftingMax         *int32                       `protobuf:"varint,5,opt,name=gifting_max,json=giftingMax" json:"gifting_max,omitempty"`
	GiftingWindowHours *uint32                      `protobuf:"varint,6,opt,name=gifting_window_hours,json=giftingWindowHours" json:"gifting_window_hours,omitempty"`
	TradeRestriction   *EGCMsgInitiateTradeResponse `protobuf:"varint,7,opt,name=trade_restriction,json=tradeRestriction,enum=dota.EGCMsgInitiateTradeResponse,def=0" json:"trade_restriction,omitempty"`
}

// Default values for CMsgClientToGCWrapAndDeliverGiftResponse fields.
const (
	Default_CMsgClientToGCWrapAndDeliverGiftResponse_Response         = EGCMsgResponse_k_EGCMsgResponseOK
	Default_CMsgClientToGCWrapAndDeliverGiftResponse_TradeRestriction = EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Accepted
)

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) Reset() {
	*x = CMsgClientToGCWrapAndDeliverGiftResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCWrapAndDeliverGiftResponse) ProtoMessage() {}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCWrapAndDeliverGiftResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCWrapAndDeliverGiftResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetResponse() EGCMsgResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCWrapAndDeliverGiftResponse_Response
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingChargeUses() uint32 {
	if x != nil && x.GiftingChargeUses != nil {
		return *x.GiftingChargeUses
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingChargeMax() int32 {
	if x != nil && x.GiftingChargeMax != nil {
		return *x.GiftingChargeMax
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingUses() uint32 {
	if x != nil && x.GiftingUses != nil {
		return *x.GiftingUses
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingMax() int32 {
	if x != nil && x.GiftingMax != nil {
		return *x.GiftingMax
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetGiftingWindowHours() uint32 {
	if x != nil && x.GiftingWindowHours != nil {
		return *x.GiftingWindowHours
	}
	return 0
}

func (x *CMsgClientToGCWrapAndDeliverGiftResponse) GetTradeRestriction() EGCMsgInitiateTradeResponse {
	if x != nil && x.TradeRestriction != nil {
		return *x.TradeRestriction
	}
	return Default_CMsgClientToGCWrapAndDeliverGiftResponse_TradeRestriction
}

type CMsgClientToGCUnwrapGift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgClientToGCUnwrapGift) Reset() {
	*x = CMsgClientToGCUnwrapGift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnwrapGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnwrapGift) ProtoMessage() {}

func (x *CMsgClientToGCUnwrapGift) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnwrapGift.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnwrapGift) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgClientToGCUnwrapGift) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgClientToGCGetGiftPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCGetGiftPermissions) Reset() {
	*x = CMsgClientToGCGetGiftPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetGiftPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetGiftPermissions) ProtoMessage() {}

func (x *CMsgClientToGCGetGiftPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetGiftPermissions.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetGiftPermissions) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{54}
}

type CMsgClientToGCGetGiftPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUnlimited                       *bool                                                        `protobuf:"varint,1,opt,name=is_unlimited,json=isUnlimited" json:"is_unlimited,omitempty"`
	HasTwoFactor                      *bool                                                        `protobuf:"varint,3,opt,name=has_two_factor,json=hasTwoFactor" json:"has_two_factor,omitempty"`
	SenderPermission                  *EGCMsgInitiateTradeResponse                                 `protobuf:"varint,6,opt,name=sender_permission,json=senderPermission,enum=dota.EGCMsgInitiateTradeResponse,def=0" json:"sender_permission,omitempty"`
	FriendshipAgeRequirement          *uint32                                                      `protobuf:"varint,7,opt,name=friendship_age_requirement,json=friendshipAgeRequirement" json:"friendship_age_requirement,omitempty"`
	FriendshipAgeRequirementTwoFactor *uint32                                                      `protobuf:"varint,8,opt,name=friendship_age_requirement_two_factor,json=friendshipAgeRequirementTwoFactor" json:"friendship_age_requirement_two_factor,omitempty"`
	FriendPermissions                 []*CMsgClientToGCGetGiftPermissionsResponse_FriendPermission `protobuf:"bytes,9,rep,name=friend_permissions,json=friendPermissions" json:"friend_permissions,omitempty"`
}

// Default values for CMsgClientToGCGetGiftPermissionsResponse fields.
const (
	Default_CMsgClientToGCGetGiftPermissionsResponse_SenderPermission = EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Accepted
)

func (x *CMsgClientToGCGetGiftPermissionsResponse) Reset() {
	*x = CMsgClientToGCGetGiftPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetGiftPermissionsResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetGiftPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetGiftPermissionsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetGiftPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) GetIsUnlimited() bool {
	if x != nil && x.IsUnlimited != nil {
		return *x.IsUnlimited
	}
	return false
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) GetHasTwoFactor() bool {
	if x != nil && x.HasTwoFactor != nil {
		return *x.HasTwoFactor
	}
	return false
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) GetSenderPermission() EGCMsgInitiateTradeResponse {
	if x != nil && x.SenderPermission != nil {
		return *x.SenderPermission
	}
	return Default_CMsgClientToGCGetGiftPermissionsResponse_SenderPermission
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) GetFriendshipAgeRequirement() uint32 {
	if x != nil && x.FriendshipAgeRequirement != nil {
		return *x.FriendshipAgeRequirement
	}
	return 0
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) GetFriendshipAgeRequirementTwoFactor() uint32 {
	if x != nil && x.FriendshipAgeRequirementTwoFactor != nil {
		return *x.FriendshipAgeRequirementTwoFactor
	}
	return 0
}

func (x *CMsgClientToGCGetGiftPermissionsResponse) GetFriendPermissions() []*CMsgClientToGCGetGiftPermissionsResponse_FriendPermission {
	if x != nil {
		return x.FriendPermissions
	}
	return nil
}

type CMsgClientToGCUnpackBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgClientToGCUnpackBundle) Reset() {
	*x = CMsgClientToGCUnpackBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnpackBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnpackBundle) ProtoMessage() {}

func (x *CMsgClientToGCUnpackBundle) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnpackBundle.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnpackBundle) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgClientToGCUnpackBundle) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgClientToGCUnpackBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnpackedItemIds        []uint64                                          `protobuf:"varint,1,rep,name=unpacked_item_ids,json=unpackedItemIds" json:"unpacked_item_ids,omitempty"`
	Response               *CMsgClientToGCUnpackBundleResponse_EUnpackBundle `protobuf:"varint,2,opt,name=response,enum=dota.CMsgClientToGCUnpackBundleResponse_EUnpackBundle,def=0" json:"response,omitempty"`
	UnpackedItemDefIndexes []uint32                                          `protobuf:"varint,3,rep,name=unpacked_item_def_indexes,json=unpackedItemDefIndexes" json:"unpacked_item_def_indexes,omitempty"`
}

// Default values for CMsgClientToGCUnpackBundleResponse fields.
const (
	Default_CMsgClientToGCUnpackBundleResponse_Response = CMsgClientToGCUnpackBundleResponse_k_UnpackBundle_Succeeded
)

func (x *CMsgClientToGCUnpackBundleResponse) Reset() {
	*x = CMsgClientToGCUnpackBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnpackBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnpackBundleResponse) ProtoMessage() {}

func (x *CMsgClientToGCUnpackBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnpackBundleResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnpackBundleResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgClientToGCUnpackBundleResponse) GetUnpackedItemIds() []uint64 {
	if x != nil {
		return x.UnpackedItemIds
	}
	return nil
}

func (x *CMsgClientToGCUnpackBundleResponse) GetResponse() CMsgClientToGCUnpackBundleResponse_EUnpackBundle {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCUnpackBundleResponse_Response
}

func (x *CMsgClientToGCUnpackBundleResponse) GetUnpackedItemDefIndexes() []uint32 {
	if x != nil {
		return x.UnpackedItemDefIndexes
	}
	return nil
}

type CMsgGCToClientStoreTransactionCompleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId   *uint64  `protobuf:"varint,1,opt,name=txn_id,json=txnId" json:"txn_id,omitempty"`
	ItemIds []uint64 `protobuf:"varint,2,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CMsgGCToClientStoreTransactionCompleted) Reset() {
	*x = CMsgGCToClientStoreTransactionCompleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientStoreTransactionCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientStoreTransactionCompleted) ProtoMessage() {}

func (x *CMsgGCToClientStoreTransactionCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientStoreTransactionCompleted.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientStoreTransactionCompleted) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgGCToClientStoreTransactionCompleted) GetTxnId() uint64 {
	if x != nil && x.TxnId != nil {
		return *x.TxnId
	}
	return 0
}

func (x *CMsgGCToClientStoreTransactionCompleted) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CMsgClientToGCEquipItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Equips []*CMsgAdjustItemEquippedState `protobuf:"bytes,1,rep,name=equips" json:"equips,omitempty"`
}

func (x *CMsgClientToGCEquipItems) Reset() {
	*x = CMsgClientToGCEquipItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCEquipItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCEquipItems) ProtoMessage() {}

func (x *CMsgClientToGCEquipItems) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCEquipItems.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCEquipItems) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{59}
}

func (x *CMsgClientToGCEquipItems) GetEquips() []*CMsgAdjustItemEquippedState {
	if x != nil {
		return x.Equips
	}
	return nil
}

type CMsgClientToGCEquipItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoCacheVersionId *uint64 `protobuf:"fixed64,1,opt,name=so_cache_version_id,json=soCacheVersionId" json:"so_cache_version_id,omitempty"`
}

func (x *CMsgClientToGCEquipItemsResponse) Reset() {
	*x = CMsgClientToGCEquipItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCEquipItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCEquipItemsResponse) ProtoMessage() {}

func (x *CMsgClientToGCEquipItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCEquipItemsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCEquipItemsResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgClientToGCEquipItemsResponse) GetSoCacheVersionId() uint64 {
	if x != nil && x.SoCacheVersionId != nil {
		return *x.SoCacheVersionId
	}
	return 0
}

type CMsgClientToGCSetItemStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	StyleIndex *uint32 `protobuf:"varint,2,opt,name=style_index,json=styleIndex" json:"style_index,omitempty"`
}

func (x *CMsgClientToGCSetItemStyle) Reset() {
	*x = CMsgClientToGCSetItemStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetItemStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetItemStyle) ProtoMessage() {}

func (x *CMsgClientToGCSetItemStyle) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetItemStyle.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetItemStyle) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{61}
}

func (x *CMsgClientToGCSetItemStyle) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgClientToGCSetItemStyle) GetStyleIndex() uint32 {
	if x != nil && x.StyleIndex != nil {
		return *x.StyleIndex
	}
	return 0
}

type CMsgClientToGCSetItemStyleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCSetItemStyleResponse_ESetStyle `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCSetItemStyleResponse_ESetStyle,def=0" json:"response,omitempty"`
}

// Default values for CMsgClientToGCSetItemStyleResponse fields.
const (
	Default_CMsgClientToGCSetItemStyleResponse_Response = CMsgClientToGCSetItemStyleResponse_k_SetStyle_Succeeded
)

func (x *CMsgClientToGCSetItemStyleResponse) Reset() {
	*x = CMsgClientToGCSetItemStyleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetItemStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetItemStyleResponse) ProtoMessage() {}

func (x *CMsgClientToGCSetItemStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetItemStyleResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetItemStyleResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{62}
}

func (x *CMsgClientToGCSetItemStyleResponse) GetResponse() CMsgClientToGCSetItemStyleResponse_ESetStyle {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCSetItemStyleResponse_Response
}

type CMsgClientToGCUnlockItemStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemToUnlock      *uint64  `protobuf:"varint,1,opt,name=item_to_unlock,json=itemToUnlock" json:"item_to_unlock,omitempty"`
	StyleIndex        *uint32  `protobuf:"varint,2,opt,name=style_index,json=styleIndex" json:"style_index,omitempty"`
	ConsumableItemIds []uint64 `protobuf:"varint,3,rep,name=consumable_item_ids,json=consumableItemIds" json:"consumable_item_ids,omitempty"`
}

func (x *CMsgClientToGCUnlockItemStyle) Reset() {
	*x = CMsgClientToGCUnlockItemStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockItemStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockItemStyle) ProtoMessage() {}

func (x *CMsgClientToGCUnlockItemStyle) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockItemStyle.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockItemStyle) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgClientToGCUnlockItemStyle) GetItemToUnlock() uint64 {
	if x != nil && x.ItemToUnlock != nil {
		return *x.ItemToUnlock
	}
	return 0
}

func (x *CMsgClientToGCUnlockItemStyle) GetStyleIndex() uint32 {
	if x != nil && x.StyleIndex != nil {
		return *x.StyleIndex
	}
	return 0
}

func (x *CMsgClientToGCUnlockItemStyle) GetConsumableItemIds() []uint64 {
	if x != nil {
		return x.ConsumableItemIds
	}
	return nil
}

type CMsgClientToGCUnlockItemStyleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    *CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle,def=0" json:"response,omitempty"`
	ItemId      *uint64                                             `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	StyleIndex  *uint32                                             `protobuf:"varint,3,opt,name=style_index,json=styleIndex" json:"style_index,omitempty"`
	StylePrereq *uint32                                             `protobuf:"varint,4,opt,name=style_prereq,json=stylePrereq" json:"style_prereq,omitempty"`
}

// Default values for CMsgClientToGCUnlockItemStyleResponse fields.
const (
	Default_CMsgClientToGCUnlockItemStyleResponse_Response = CMsgClientToGCUnlockItemStyleResponse_k_UnlockStyle_Succeeded
)

func (x *CMsgClientToGCUnlockItemStyleResponse) Reset() {
	*x = CMsgClientToGCUnlockItemStyleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockItemStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockItemStyleResponse) ProtoMessage() {}

func (x *CMsgClientToGCUnlockItemStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockItemStyleResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockItemStyleResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgClientToGCUnlockItemStyleResponse) GetResponse() CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCUnlockItemStyleResponse_Response
}

func (x *CMsgClientToGCUnlockItemStyleResponse) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgClientToGCUnlockItemStyleResponse) GetStyleIndex() uint32 {
	if x != nil && x.StyleIndex != nil {
		return *x.StyleIndex
	}
	return 0
}

func (x *CMsgClientToGCUnlockItemStyleResponse) GetStylePrereq() uint32 {
	if x != nil && x.StylePrereq != nil {
		return *x.StylePrereq
	}
	return 0
}

type CMsgClientToGCSetItemInventoryCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds          []uint64 `protobuf:"varint,1,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
	SetToValue       *uint32  `protobuf:"varint,2,opt,name=set_to_value,json=setToValue" json:"set_to_value,omitempty"`
	RemoveCategories *uint32  `protobuf:"varint,3,opt,name=remove_categories,json=removeCategories" json:"remove_categories,omitempty"`
	AddCategories    *uint32  `protobuf:"varint,4,opt,name=add_categories,json=addCategories" json:"add_categories,omitempty"`
}

func (x *CMsgClientToGCSetItemInventoryCategory) Reset() {
	*x = CMsgClientToGCSetItemInventoryCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCSetItemInventoryCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCSetItemInventoryCategory) ProtoMessage() {}

func (x *CMsgClientToGCSetItemInventoryCategory) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCSetItemInventoryCategory.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCSetItemInventoryCategory) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{65}
}

func (x *CMsgClientToGCSetItemInventoryCategory) GetItemIds() []uint64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *CMsgClientToGCSetItemInventoryCategory) GetSetToValue() uint32 {
	if x != nil && x.SetToValue != nil {
		return *x.SetToValue
	}
	return 0
}

func (x *CMsgClientToGCSetItemInventoryCategory) GetRemoveCategories() uint32 {
	if x != nil && x.RemoveCategories != nil {
		return *x.RemoveCategories
	}
	return 0
}

func (x *CMsgClientToGCSetItemInventoryCategory) GetAddCategories() uint32 {
	if x != nil && x.AddCategories != nil {
		return *x.AddCategories
	}
	return 0
}

type CMsgClientToGCUnlockCrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrateItemId *uint64 `protobuf:"varint,1,opt,name=crate_item_id,json=crateItemId" json:"crate_item_id,omitempty"`
	KeyItemId   *uint64 `protobuf:"varint,2,opt,name=key_item_id,json=keyItemId" json:"key_item_id,omitempty"`
}

func (x *CMsgClientToGCUnlockCrate) Reset() {
	*x = CMsgClientToGCUnlockCrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockCrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockCrate) ProtoMessage() {}

func (x *CMsgClientToGCUnlockCrate) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockCrate.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockCrate) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgClientToGCUnlockCrate) GetCrateItemId() uint64 {
	if x != nil && x.CrateItemId != nil {
		return *x.CrateItemId
	}
	return 0
}

func (x *CMsgClientToGCUnlockCrate) GetKeyItemId() uint64 {
	if x != nil && x.KeyItemId != nil {
		return *x.KeyItemId
	}
	return 0
}

type CMsgClientToGCUnlockCrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *EGCMsgResponse                           `protobuf:"varint,1,opt,name=result,enum=dota.EGCMsgResponse,def=0" json:"result,omitempty"`
	GrantedItems []*CMsgClientToGCUnlockCrateResponse_Item `protobuf:"bytes,2,rep,name=granted_items,json=grantedItems" json:"granted_items,omitempty"`
}

// Default values for CMsgClientToGCUnlockCrateResponse fields.
const (
	Default_CMsgClientToGCUnlockCrateResponse_Result = EGCMsgResponse_k_EGCMsgResponseOK
)

func (x *CMsgClientToGCUnlockCrateResponse) Reset() {
	*x = CMsgClientToGCUnlockCrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockCrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockCrateResponse) ProtoMessage() {}

func (x *CMsgClientToGCUnlockCrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockCrateResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockCrateResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgClientToGCUnlockCrateResponse) GetResult() EGCMsgResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCUnlockCrateResponse_Result
}

func (x *CMsgClientToGCUnlockCrateResponse) GetGrantedItems() []*CMsgClientToGCUnlockCrateResponse_Item {
	if x != nil {
		return x.GrantedItems
	}
	return nil
}

type CMsgClientToGCRemoveItemAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CMsgClientToGCRemoveItemAttribute) Reset() {
	*x = CMsgClientToGCRemoveItemAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCRemoveItemAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRemoveItemAttribute) ProtoMessage() {}

func (x *CMsgClientToGCRemoveItemAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRemoveItemAttribute.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRemoveItemAttribute) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgClientToGCRemoveItemAttribute) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgClientToGCRemoveItemAttributeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute,def=0" json:"response,omitempty"`
	ItemId   *uint64                                                         `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

// Default values for CMsgClientToGCRemoveItemAttributeResponse fields.
const (
	Default_CMsgClientToGCRemoveItemAttributeResponse_Response = CMsgClientToGCRemoveItemAttributeResponse_k_RemoveItemAttribute_Succeeded
)

func (x *CMsgClientToGCRemoveItemAttributeResponse) Reset() {
	*x = CMsgClientToGCRemoveItemAttributeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCRemoveItemAttributeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCRemoveItemAttributeResponse) ProtoMessage() {}

func (x *CMsgClientToGCRemoveItemAttributeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCRemoveItemAttributeResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCRemoveItemAttributeResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{69}
}

func (x *CMsgClientToGCRemoveItemAttributeResponse) GetResponse() CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCRemoveItemAttributeResponse_Response
}

func (x *CMsgClientToGCRemoveItemAttributeResponse) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgClientToGCNameItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubjectItemId *uint64 `protobuf:"varint,1,opt,name=subject_item_id,json=subjectItemId" json:"subject_item_id,omitempty"`
	ToolItemId    *uint64 `protobuf:"varint,2,opt,name=tool_item_id,json=toolItemId" json:"tool_item_id,omitempty"`
	Name          *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *CMsgClientToGCNameItem) Reset() {
	*x = CMsgClientToGCNameItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCNameItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCNameItem) ProtoMessage() {}

func (x *CMsgClientToGCNameItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCNameItem.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCNameItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgClientToGCNameItem) GetSubjectItemId() uint64 {
	if x != nil && x.SubjectItemId != nil {
		return *x.SubjectItemId
	}
	return 0
}

func (x *CMsgClientToGCNameItem) GetToolItemId() uint64 {
	if x != nil && x.ToolItemId != nil {
		return *x.ToolItemId
	}
	return 0
}

func (x *CMsgClientToGCNameItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CMsgClientToGCNameItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCNameItemResponse_ENameItem `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCNameItemResponse_ENameItem,def=0" json:"response,omitempty"`
	ItemId   *uint64                                   `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

// Default values for CMsgClientToGCNameItemResponse fields.
const (
	Default_CMsgClientToGCNameItemResponse_Response = CMsgClientToGCNameItemResponse_k_NameItem_Succeeded
)

func (x *CMsgClientToGCNameItemResponse) Reset() {
	*x = CMsgClientToGCNameItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCNameItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCNameItemResponse) ProtoMessage() {}

func (x *CMsgClientToGCNameItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCNameItemResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCNameItemResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{71}
}

func (x *CMsgClientToGCNameItemResponse) GetResponse() CMsgClientToGCNameItemResponse_ENameItem {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCNameItemResponse_Response
}

func (x *CMsgClientToGCNameItemResponse) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

type CMsgGCSetItemPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	NewPosition *uint32 `protobuf:"varint,2,opt,name=new_position,json=newPosition" json:"new_position,omitempty"`
}

func (x *CMsgGCSetItemPosition) Reset() {
	*x = CMsgGCSetItemPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCSetItemPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCSetItemPosition) ProtoMessage() {}

func (x *CMsgGCSetItemPosition) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCSetItemPosition.ProtoReflect.Descriptor instead.
func (*CMsgGCSetItemPosition) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgGCSetItemPosition) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgGCSetItemPosition) GetNewPosition() uint32 {
	if x != nil && x.NewPosition != nil {
		return *x.NewPosition
	}
	return 0
}

type CAttribute_ItemDynamicRecipeComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDef          *uint32 `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	ItemQuality      *uint32 `protobuf:"varint,2,opt,name=item_quality,json=itemQuality" json:"item_quality,omitempty"`
	ItemFlags        *uint32 `protobuf:"varint,3,opt,name=item_flags,json=itemFlags" json:"item_flags,omitempty"`
	AttributesString *string `protobuf:"bytes,4,opt,name=attributes_string,json=attributesString" json:"attributes_string,omitempty"`
	ItemCount        *uint32 `protobuf:"varint,5,opt,name=item_count,json=itemCount" json:"item_count,omitempty"`
	ItemsFulfilled   *uint32 `protobuf:"varint,6,opt,name=items_fulfilled,json=itemsFulfilled" json:"items_fulfilled,omitempty"`
	ItemRarity       *uint32 `protobuf:"varint,7,opt,name=item_rarity,json=itemRarity" json:"item_rarity,omitempty"`
	Lootlist         *string `protobuf:"bytes,8,opt,name=lootlist" json:"lootlist,omitempty"`
	FulfilledItemId  *uint64 `protobuf:"varint,9,opt,name=fulfilled_item_id,json=fulfilledItemId" json:"fulfilled_item_id,omitempty"`
}

func (x *CAttribute_ItemDynamicRecipeComponent) Reset() {
	*x = CAttribute_ItemDynamicRecipeComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAttribute_ItemDynamicRecipeComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAttribute_ItemDynamicRecipeComponent) ProtoMessage() {}

func (x *CAttribute_ItemDynamicRecipeComponent) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAttribute_ItemDynamicRecipeComponent.ProtoReflect.Descriptor instead.
func (*CAttribute_ItemDynamicRecipeComponent) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{73}
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetItemQuality() uint32 {
	if x != nil && x.ItemQuality != nil {
		return *x.ItemQuality
	}
	return 0
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetItemFlags() uint32 {
	if x != nil && x.ItemFlags != nil {
		return *x.ItemFlags
	}
	return 0
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetAttributesString() string {
	if x != nil && x.AttributesString != nil {
		return *x.AttributesString
	}
	return ""
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetItemCount() uint32 {
	if x != nil && x.ItemCount != nil {
		return *x.ItemCount
	}
	return 0
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetItemsFulfilled() uint32 {
	if x != nil && x.ItemsFulfilled != nil {
		return *x.ItemsFulfilled
	}
	return 0
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetItemRarity() uint32 {
	if x != nil && x.ItemRarity != nil {
		return *x.ItemRarity
	}
	return 0
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetLootlist() string {
	if x != nil && x.Lootlist != nil {
		return *x.Lootlist
	}
	return ""
}

func (x *CAttribute_ItemDynamicRecipeComponent) GetFulfilledItemId() uint64 {
	if x != nil && x.FulfilledItemId != nil {
		return *x.FulfilledItemId
	}
	return 0
}

type CProtoItemSocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId           *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	AttrDefIndex     *uint32 `protobuf:"varint,2,opt,name=attr_def_index,json=attrDefIndex" json:"attr_def_index,omitempty"`
	RequiredType     *uint32 `protobuf:"varint,3,opt,name=required_type,json=requiredType" json:"required_type,omitempty"`
	RequiredHero     *string `protobuf:"bytes,4,opt,name=required_hero,json=requiredHero" json:"required_hero,omitempty"`
	GemDefIndex      *uint32 `protobuf:"varint,5,opt,name=gem_def_index,json=gemDefIndex" json:"gem_def_index,omitempty"`
	NotTradable      *bool   `protobuf:"varint,6,opt,name=not_tradable,json=notTradable" json:"not_tradable,omitempty"`
	RequiredItemSlot *string `protobuf:"bytes,7,opt,name=required_item_slot,json=requiredItemSlot" json:"required_item_slot,omitempty"`
}

func (x *CProtoItemSocket) Reset() {
	*x = CProtoItemSocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket) ProtoMessage() {}

func (x *CProtoItemSocket) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{74}
}

func (x *CProtoItemSocket) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CProtoItemSocket) GetAttrDefIndex() uint32 {
	if x != nil && x.AttrDefIndex != nil {
		return *x.AttrDefIndex
	}
	return 0
}

func (x *CProtoItemSocket) GetRequiredType() uint32 {
	if x != nil && x.RequiredType != nil {
		return *x.RequiredType
	}
	return 0
}

func (x *CProtoItemSocket) GetRequiredHero() string {
	if x != nil && x.RequiredHero != nil {
		return *x.RequiredHero
	}
	return ""
}

func (x *CProtoItemSocket) GetGemDefIndex() uint32 {
	if x != nil && x.GemDefIndex != nil {
		return *x.GemDefIndex
	}
	return 0
}

func (x *CProtoItemSocket) GetNotTradable() bool {
	if x != nil && x.NotTradable != nil {
		return *x.NotTradable
	}
	return false
}

func (x *CProtoItemSocket) GetRequiredItemSlot() string {
	if x != nil && x.RequiredItemSlot != nil {
		return *x.RequiredItemSlot
	}
	return ""
}

type CProtoItemSocket_Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
}

func (x *CProtoItemSocket_Empty) Reset() {
	*x = CProtoItemSocket_Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_Empty) ProtoMessage() {}

func (x *CProtoItemSocket_Empty) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_Empty.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_Empty) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{75}
}

func (x *CProtoItemSocket_Empty) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

type CProtoItemSocket_Effect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	Effect *uint32           `protobuf:"varint,2,opt,name=effect" json:"effect,omitempty"`
}

func (x *CProtoItemSocket_Effect) Reset() {
	*x = CProtoItemSocket_Effect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_Effect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_Effect) ProtoMessage() {}

func (x *CProtoItemSocket_Effect) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_Effect.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_Effect) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{76}
}

func (x *CProtoItemSocket_Effect) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_Effect) GetEffect() uint32 {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return 0
}

type CProtoItemSocket_Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	Red    *uint32           `protobuf:"varint,2,opt,name=red" json:"red,omitempty"`
	Green  *uint32           `protobuf:"varint,3,opt,name=green" json:"green,omitempty"`
	Blue   *uint32           `protobuf:"varint,4,opt,name=blue" json:"blue,omitempty"`
}

func (x *CProtoItemSocket_Color) Reset() {
	*x = CProtoItemSocket_Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_Color) ProtoMessage() {}

func (x *CProtoItemSocket_Color) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_Color.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_Color) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{77}
}

func (x *CProtoItemSocket_Color) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_Color) GetRed() uint32 {
	if x != nil && x.Red != nil {
		return *x.Red
	}
	return 0
}

func (x *CProtoItemSocket_Color) GetGreen() uint32 {
	if x != nil && x.Green != nil {
		return *x.Green
	}
	return 0
}

func (x *CProtoItemSocket_Color) GetBlue() uint32 {
	if x != nil && x.Blue != nil {
		return *x.Blue
	}
	return 0
}

type CProtoItemSocket_Strange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket       *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	StrangeType  *uint32           `protobuf:"varint,2,opt,name=strange_type,json=strangeType" json:"strange_type,omitempty"`
	StrangeValue *uint32           `protobuf:"varint,3,opt,name=strange_value,json=strangeValue" json:"strange_value,omitempty"`
}

func (x *CProtoItemSocket_Strange) Reset() {
	*x = CProtoItemSocket_Strange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_Strange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_Strange) ProtoMessage() {}

func (x *CProtoItemSocket_Strange) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_Strange.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_Strange) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{78}
}

func (x *CProtoItemSocket_Strange) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_Strange) GetStrangeType() uint32 {
	if x != nil && x.StrangeType != nil {
		return *x.StrangeType
	}
	return 0
}

func (x *CProtoItemSocket_Strange) GetStrangeValue() uint32 {
	if x != nil && x.StrangeValue != nil {
		return *x.StrangeValue
	}
	return 0
}

type CProtoItemSocket_Spectator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket        *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	GamesViewed   *uint32           `protobuf:"varint,2,opt,name=games_viewed,json=gamesViewed" json:"games_viewed,omitempty"`
	CorporationId *uint32           `protobuf:"varint,3,opt,name=corporation_id,json=corporationId" json:"corporation_id,omitempty"`
	LeagueId      *uint32           `protobuf:"varint,4,opt,name=league_id,json=leagueId" json:"league_id,omitempty"`
	TeamId        *uint32           `protobuf:"varint,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (x *CProtoItemSocket_Spectator) Reset() {
	*x = CProtoItemSocket_Spectator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_Spectator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_Spectator) ProtoMessage() {}

func (x *CProtoItemSocket_Spectator) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_Spectator.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_Spectator) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{79}
}

func (x *CProtoItemSocket_Spectator) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_Spectator) GetGamesViewed() uint32 {
	if x != nil && x.GamesViewed != nil {
		return *x.GamesViewed
	}
	return 0
}

func (x *CProtoItemSocket_Spectator) GetCorporationId() uint32 {
	if x != nil && x.CorporationId != nil {
		return *x.CorporationId
	}
	return 0
}

func (x *CProtoItemSocket_Spectator) GetLeagueId() uint32 {
	if x != nil && x.LeagueId != nil {
		return *x.LeagueId
	}
	return 0
}

func (x *CProtoItemSocket_Spectator) GetTeamId() uint32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

type CProtoItemSocket_AssetModifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket        *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	AssetModifier *uint32           `protobuf:"varint,2,opt,name=asset_modifier,json=assetModifier" json:"asset_modifier,omitempty"`
}

func (x *CProtoItemSocket_AssetModifier) Reset() {
	*x = CProtoItemSocket_AssetModifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_AssetModifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_AssetModifier) ProtoMessage() {}

func (x *CProtoItemSocket_AssetModifier) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_AssetModifier.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_AssetModifier) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{80}
}

func (x *CProtoItemSocket_AssetModifier) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_AssetModifier) GetAssetModifier() uint32 {
	if x != nil && x.AssetModifier != nil {
		return *x.AssetModifier
	}
	return 0
}

type CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket        *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	AssetModifier *uint32           `protobuf:"varint,2,opt,name=asset_modifier,json=assetModifier" json:"asset_modifier,omitempty"`
	AnimModifier  *uint32           `protobuf:"varint,3,opt,name=anim_modifier,json=animModifier" json:"anim_modifier,omitempty"`
	AbilityEffect *uint32           `protobuf:"varint,4,opt,name=ability_effect,json=abilityEffect" json:"ability_effect,omitempty"`
}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) Reset() {
	*x = CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) ProtoMessage() {}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{81}
}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) GetAssetModifier() uint32 {
	if x != nil && x.AssetModifier != nil {
		return *x.AssetModifier
	}
	return 0
}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) GetAnimModifier() uint32 {
	if x != nil && x.AnimModifier != nil {
		return *x.AnimModifier
	}
	return 0
}

func (x *CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) GetAbilityEffect() uint32 {
	if x != nil && x.AbilityEffect != nil {
		return *x.AbilityEffect
	}
	return 0
}

type CProtoItemSocket_Autograph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket         *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
	Autograph      *string           `protobuf:"bytes,2,opt,name=autograph" json:"autograph,omitempty"`
	AutographId    *uint32           `protobuf:"varint,3,opt,name=autograph_id,json=autographId" json:"autograph_id,omitempty"`
	AutographScore *uint32           `protobuf:"varint,4,opt,name=autograph_score,json=autographScore" json:"autograph_score,omitempty"`
}

func (x *CProtoItemSocket_Autograph) Reset() {
	*x = CProtoItemSocket_Autograph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_Autograph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_Autograph) ProtoMessage() {}

func (x *CProtoItemSocket_Autograph) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_Autograph.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_Autograph) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{82}
}

func (x *CProtoItemSocket_Autograph) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

func (x *CProtoItemSocket_Autograph) GetAutograph() string {
	if x != nil && x.Autograph != nil {
		return *x.Autograph
	}
	return ""
}

func (x *CProtoItemSocket_Autograph) GetAutographId() uint32 {
	if x != nil && x.AutographId != nil {
		return *x.AutographId
	}
	return 0
}

func (x *CProtoItemSocket_Autograph) GetAutographScore() uint32 {
	if x != nil && x.AutographScore != nil {
		return *x.AutographScore
	}
	return 0
}

type CProtoItemSocket_StaticVisuals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Socket *CProtoItemSocket `protobuf:"bytes,1,opt,name=socket" json:"socket,omitempty"`
}

func (x *CProtoItemSocket_StaticVisuals) Reset() {
	*x = CProtoItemSocket_StaticVisuals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CProtoItemSocket_StaticVisuals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CProtoItemSocket_StaticVisuals) ProtoMessage() {}

func (x *CProtoItemSocket_StaticVisuals) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CProtoItemSocket_StaticVisuals.ProtoReflect.Descriptor instead.
func (*CProtoItemSocket_StaticVisuals) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{83}
}

func (x *CProtoItemSocket_StaticVisuals) GetSocket() *CProtoItemSocket {
	if x != nil {
		return x.Socket
	}
	return nil
}

type CAttribute_String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (x *CAttribute_String) Reset() {
	*x = CAttribute_String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAttribute_String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAttribute_String) ProtoMessage() {}

func (x *CAttribute_String) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAttribute_String.ProtoReflect.Descriptor instead.
func (*CAttribute_String) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{84}
}

func (x *CAttribute_String) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CWorkshop_GetItemDailyRevenue_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ItemId    *uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	DateStart *uint32 `protobuf:"varint,3,opt,name=date_start,json=dateStart" json:"date_start,omitempty"`
	DateEnd   *uint32 `protobuf:"varint,4,opt,name=date_end,json=dateEnd" json:"date_end,omitempty"`
}

func (x *CWorkshop_GetItemDailyRevenue_Request) Reset() {
	*x = CWorkshop_GetItemDailyRevenue_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetItemDailyRevenue_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetItemDailyRevenue_Request) ProtoMessage() {}

func (x *CWorkshop_GetItemDailyRevenue_Request) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetItemDailyRevenue_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetItemDailyRevenue_Request) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{85}
}

func (x *CWorkshop_GetItemDailyRevenue_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWorkshop_GetItemDailyRevenue_Request) GetItemId() uint32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CWorkshop_GetItemDailyRevenue_Request) GetDateStart() uint32 {
	if x != nil && x.DateStart != nil {
		return *x.DateStart
	}
	return 0
}

func (x *CWorkshop_GetItemDailyRevenue_Request) GetDateEnd() uint32 {
	if x != nil && x.DateEnd != nil {
		return *x.DateEnd
	}
	return 0
}

type CWorkshop_GetItemDailyRevenue_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryRevenue []*CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue `protobuf:"bytes,1,rep,name=country_revenue,json=countryRevenue" json:"country_revenue,omitempty"`
}

func (x *CWorkshop_GetItemDailyRevenue_Response) Reset() {
	*x = CWorkshop_GetItemDailyRevenue_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetItemDailyRevenue_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetItemDailyRevenue_Response) ProtoMessage() {}

func (x *CWorkshop_GetItemDailyRevenue_Response) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetItemDailyRevenue_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetItemDailyRevenue_Response) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{86}
}

func (x *CWorkshop_GetItemDailyRevenue_Response) GetCountryRevenue() []*CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue {
	if x != nil {
		return x.CountryRevenue
	}
	return nil
}

type CWorkshop_GetPackageDailyRevenue_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	DateStart *uint32 `protobuf:"varint,2,opt,name=date_start,json=dateStart" json:"date_start,omitempty"`
	DateEnd   *uint32 `protobuf:"varint,3,opt,name=date_end,json=dateEnd" json:"date_end,omitempty"`
}

func (x *CWorkshop_GetPackageDailyRevenue_Request) Reset() {
	*x = CWorkshop_GetPackageDailyRevenue_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetPackageDailyRevenue_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetPackageDailyRevenue_Request) ProtoMessage() {}

func (x *CWorkshop_GetPackageDailyRevenue_Request) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetPackageDailyRevenue_Request.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetPackageDailyRevenue_Request) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{87}
}

func (x *CWorkshop_GetPackageDailyRevenue_Request) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CWorkshop_GetPackageDailyRevenue_Request) GetDateStart() uint32 {
	if x != nil && x.DateStart != nil {
		return *x.DateStart
	}
	return 0
}

func (x *CWorkshop_GetPackageDailyRevenue_Request) GetDateEnd() uint32 {
	if x != nil && x.DateEnd != nil {
		return *x.DateEnd
	}
	return 0
}

type CWorkshop_GetPackageDailyRevenue_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryRevenue []*CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue `protobuf:"bytes,1,rep,name=country_revenue,json=countryRevenue" json:"country_revenue,omitempty"`
}

func (x *CWorkshop_GetPackageDailyRevenue_Response) Reset() {
	*x = CWorkshop_GetPackageDailyRevenue_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetPackageDailyRevenue_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetPackageDailyRevenue_Response) ProtoMessage() {}

func (x *CWorkshop_GetPackageDailyRevenue_Response) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetPackageDailyRevenue_Response.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetPackageDailyRevenue_Response) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{88}
}

func (x *CWorkshop_GetPackageDailyRevenue_Response) GetCountryRevenue() []*CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue {
	if x != nil {
		return x.CountryRevenue
	}
	return nil
}

type CMsgSQLGCToGCGrantBackpackSlots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AddSlots  *uint32 `protobuf:"varint,2,opt,name=add_slots,json=addSlots" json:"add_slots,omitempty"`
}

func (x *CMsgSQLGCToGCGrantBackpackSlots) Reset() {
	*x = CMsgSQLGCToGCGrantBackpackSlots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSQLGCToGCGrantBackpackSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSQLGCToGCGrantBackpackSlots) ProtoMessage() {}

func (x *CMsgSQLGCToGCGrantBackpackSlots) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSQLGCToGCGrantBackpackSlots.ProtoReflect.Descriptor instead.
func (*CMsgSQLGCToGCGrantBackpackSlots) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{89}
}

func (x *CMsgSQLGCToGCGrantBackpackSlots) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgSQLGCToGCGrantBackpackSlots) GetAddSlots() uint32 {
	if x != nil && x.AddSlots != nil {
		return *x.AddSlots
	}
	return 0
}

type CMsgClientToGCLookupAccountName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgClientToGCLookupAccountName) Reset() {
	*x = CMsgClientToGCLookupAccountName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCLookupAccountName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCLookupAccountName) ProtoMessage() {}

func (x *CMsgClientToGCLookupAccountName) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCLookupAccountName.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCLookupAccountName) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{90}
}

func (x *CMsgClientToGCLookupAccountName) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgClientToGCLookupAccountNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AccountName *string `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
}

func (x *CMsgClientToGCLookupAccountNameResponse) Reset() {
	*x = CMsgClientToGCLookupAccountNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCLookupAccountNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCLookupAccountNameResponse) ProtoMessage() {}

func (x *CMsgClientToGCLookupAccountNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCLookupAccountNameResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCLookupAccountNameResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{91}
}

func (x *CMsgClientToGCLookupAccountNameResponse) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCLookupAccountNameResponse) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

type CMsgClientToGCCreateStaticRecipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items          []*CMsgClientToGCCreateStaticRecipe_Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	RecipeDefIndex *uint32                                  `protobuf:"varint,2,opt,name=recipe_def_index,json=recipeDefIndex" json:"recipe_def_index,omitempty"`
}

func (x *CMsgClientToGCCreateStaticRecipe) Reset() {
	*x = CMsgClientToGCCreateStaticRecipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCreateStaticRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCreateStaticRecipe) ProtoMessage() {}

func (x *CMsgClientToGCCreateStaticRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipe.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCreateStaticRecipe) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{92}
}

func (x *CMsgClientToGCCreateStaticRecipe) GetItems() []*CMsgClientToGCCreateStaticRecipe_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CMsgClientToGCCreateStaticRecipe) GetRecipeDefIndex() uint32 {
	if x != nil && x.RecipeDefIndex != nil {
		return *x.RecipeDefIndex
	}
	return 0
}

type CMsgClientToGCCreateStaticRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response          *CMsgClientToGCCreateStaticRecipeResponse_EResponse          `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCCreateStaticRecipeResponse_EResponse,def=0" json:"response,omitempty"`
	OutputItems       []*CMsgClientToGCCreateStaticRecipeResponse_OutputItem       `protobuf:"bytes,2,rep,name=output_items,json=outputItems" json:"output_items,omitempty"`
	InputErrors       []*CMsgClientToGCCreateStaticRecipeResponse_InputError       `protobuf:"bytes,3,rep,name=input_errors,json=inputErrors" json:"input_errors,omitempty"`
	AdditionalOutputs []*CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput `protobuf:"bytes,4,rep,name=additional_outputs,json=additionalOutputs" json:"additional_outputs,omitempty"`
}

// Default values for CMsgClientToGCCreateStaticRecipeResponse fields.
const (
	Default_CMsgClientToGCCreateStaticRecipeResponse_Response = CMsgClientToGCCreateStaticRecipeResponse_eResponse_Success
)

func (x *CMsgClientToGCCreateStaticRecipeResponse) Reset() {
	*x = CMsgClientToGCCreateStaticRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCreateStaticRecipeResponse) ProtoMessage() {}

func (x *CMsgClientToGCCreateStaticRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipeResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCreateStaticRecipeResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{93}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse) GetResponse() CMsgClientToGCCreateStaticRecipeResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return Default_CMsgClientToGCCreateStaticRecipeResponse_Response
}

func (x *CMsgClientToGCCreateStaticRecipeResponse) GetOutputItems() []*CMsgClientToGCCreateStaticRecipeResponse_OutputItem {
	if x != nil {
		return x.OutputItems
	}
	return nil
}

func (x *CMsgClientToGCCreateStaticRecipeResponse) GetInputErrors() []*CMsgClientToGCCreateStaticRecipeResponse_InputError {
	if x != nil {
		return x.InputErrors
	}
	return nil
}

func (x *CMsgClientToGCCreateStaticRecipeResponse) GetAdditionalOutputs() []*CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput {
	if x != nil {
		return x.AdditionalOutputs
	}
	return nil
}

type CMsgProcessTransactionOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxnId                *uint64                             `protobuf:"varint,1,opt,name=txn_id,json=txnId" json:"txn_id,omitempty"`
	SteamTxnId           *uint64                             `protobuf:"varint,2,opt,name=steam_txn_id,json=steamTxnId" json:"steam_txn_id,omitempty"`
	PartnerTxnId         *uint64                             `protobuf:"varint,3,opt,name=partner_txn_id,json=partnerTxnId" json:"partner_txn_id,omitempty"`
	SteamId              *uint64                             `protobuf:"fixed64,4,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	TimeStamp            *uint32                             `protobuf:"varint,5,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	Watermark            *uint64                             `protobuf:"varint,6,opt,name=watermark" json:"watermark,omitempty"`
	PurchaseReportStatus *int32                              `protobuf:"varint,7,opt,name=purchase_report_status,json=purchaseReportStatus" json:"purchase_report_status,omitempty"`
	Currency             *uint32                             `protobuf:"varint,8,opt,name=currency" json:"currency,omitempty"`
	Items                []*CMsgProcessTransactionOrder_Item `protobuf:"bytes,9,rep,name=items" json:"items,omitempty"`
}

func (x *CMsgProcessTransactionOrder) Reset() {
	*x = CMsgProcessTransactionOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgProcessTransactionOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgProcessTransactionOrder) ProtoMessage() {}

func (x *CMsgProcessTransactionOrder) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgProcessTransactionOrder.ProtoReflect.Descriptor instead.
func (*CMsgProcessTransactionOrder) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{94}
}

func (x *CMsgProcessTransactionOrder) GetTxnId() uint64 {
	if x != nil && x.TxnId != nil {
		return *x.TxnId
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetSteamTxnId() uint64 {
	if x != nil && x.SteamTxnId != nil {
		return *x.SteamTxnId
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetPartnerTxnId() uint64 {
	if x != nil && x.PartnerTxnId != nil {
		return *x.PartnerTxnId
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetTimeStamp() uint32 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetWatermark() uint64 {
	if x != nil && x.Watermark != nil {
		return *x.Watermark
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetPurchaseReportStatus() int32 {
	if x != nil && x.PurchaseReportStatus != nil {
		return *x.PurchaseReportStatus
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetCurrency() uint32 {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return 0
}

func (x *CMsgProcessTransactionOrder) GetItems() []*CMsgProcessTransactionOrder_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CMsgGCToGCStoreProcessCDKeyTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order      *CMsgProcessTransactionOrder `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	ReasonCode *uint32                      `protobuf:"varint,2,opt,name=reason_code,json=reasonCode" json:"reason_code,omitempty"`
}

func (x *CMsgGCToGCStoreProcessCDKeyTransaction) Reset() {
	*x = CMsgGCToGCStoreProcessCDKeyTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCStoreProcessCDKeyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCStoreProcessCDKeyTransaction) ProtoMessage() {}

func (x *CMsgGCToGCStoreProcessCDKeyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCStoreProcessCDKeyTransaction.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCStoreProcessCDKeyTransaction) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{95}
}

func (x *CMsgGCToGCStoreProcessCDKeyTransaction) GetOrder() *CMsgProcessTransactionOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *CMsgGCToGCStoreProcessCDKeyTransaction) GetReasonCode() uint32 {
	if x != nil && x.ReasonCode != nil {
		return *x.ReasonCode
	}
	return 0
}

type CMsgGCToGCStoreProcessCDKeyTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgGCToGCStoreProcessCDKeyTransactionResponse) Reset() {
	*x = CMsgGCToGCStoreProcessCDKeyTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCStoreProcessCDKeyTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCStoreProcessCDKeyTransactionResponse) ProtoMessage() {}

func (x *CMsgGCToGCStoreProcessCDKeyTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCStoreProcessCDKeyTransactionResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCStoreProcessCDKeyTransactionResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{96}
}

func (x *CMsgGCToGCStoreProcessCDKeyTransactionResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgGCToGCStoreProcessSettlement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order   *CMsgProcessTransactionOrder `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	Partner *uint32                      `protobuf:"varint,2,opt,name=partner" json:"partner,omitempty"`
}

func (x *CMsgGCToGCStoreProcessSettlement) Reset() {
	*x = CMsgGCToGCStoreProcessSettlement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCStoreProcessSettlement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCStoreProcessSettlement) ProtoMessage() {}

func (x *CMsgGCToGCStoreProcessSettlement) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCStoreProcessSettlement.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCStoreProcessSettlement) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{97}
}

func (x *CMsgGCToGCStoreProcessSettlement) GetOrder() *CMsgProcessTransactionOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *CMsgGCToGCStoreProcessSettlement) GetPartner() uint32 {
	if x != nil && x.Partner != nil {
		return *x.Partner
	}
	return 0
}

type CMsgGCToGCStoreProcessSettlementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CMsgGCToGCStoreProcessSettlementResponse) Reset() {
	*x = CMsgGCToGCStoreProcessSettlementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCStoreProcessSettlementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCStoreProcessSettlementResponse) ProtoMessage() {}

func (x *CMsgGCToGCStoreProcessSettlementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCStoreProcessSettlementResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCStoreProcessSettlementResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{98}
}

func (x *CMsgGCToGCStoreProcessSettlementResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgGCToGCBroadcastConsoleCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConCommand      *string `protobuf:"bytes,1,opt,name=con_command,json=conCommand" json:"con_command,omitempty"`
	ReportOutput    *bool   `protobuf:"varint,2,opt,name=report_output,json=reportOutput" json:"report_output,omitempty"`
	SendingGc       *uint32 `protobuf:"varint,3,opt,name=sending_gc,json=sendingGc" json:"sending_gc,omitempty"`
	OutputInitiator *string `protobuf:"bytes,4,opt,name=output_initiator,json=outputInitiator" json:"output_initiator,omitempty"`
}

func (x *CMsgGCToGCBroadcastConsoleCommand) Reset() {
	*x = CMsgGCToGCBroadcastConsoleCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCBroadcastConsoleCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCBroadcastConsoleCommand) ProtoMessage() {}

func (x *CMsgGCToGCBroadcastConsoleCommand) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCBroadcastConsoleCommand.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCBroadcastConsoleCommand) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{99}
}

func (x *CMsgGCToGCBroadcastConsoleCommand) GetConCommand() string {
	if x != nil && x.ConCommand != nil {
		return *x.ConCommand
	}
	return ""
}

func (x *CMsgGCToGCBroadcastConsoleCommand) GetReportOutput() bool {
	if x != nil && x.ReportOutput != nil {
		return *x.ReportOutput
	}
	return false
}

func (x *CMsgGCToGCBroadcastConsoleCommand) GetSendingGc() uint32 {
	if x != nil && x.SendingGc != nil {
		return *x.SendingGc
	}
	return 0
}

func (x *CMsgGCToGCBroadcastConsoleCommand) GetOutputInitiator() string {
	if x != nil && x.OutputInitiator != nil {
		return *x.OutputInitiator
	}
	return ""
}

type CMsgGCToGCConsoleOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initiator          *string                               `protobuf:"bytes,1,opt,name=initiator" json:"initiator,omitempty"`
	SendingGc          *uint32                               `protobuf:"varint,2,opt,name=sending_gc,json=sendingGc" json:"sending_gc,omitempty"`
	Msgs               []*CMsgGCToGCConsoleOutput_OutputLine `protobuf:"bytes,3,rep,name=msgs" json:"msgs,omitempty"`
	IsLastForSourceJob *bool                                 `protobuf:"varint,4,opt,name=is_last_for_source_job,json=isLastForSourceJob" json:"is_last_for_source_job,omitempty"`
}

func (x *CMsgGCToGCConsoleOutput) Reset() {
	*x = CMsgGCToGCConsoleOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCConsoleOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCConsoleOutput) ProtoMessage() {}

func (x *CMsgGCToGCConsoleOutput) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCConsoleOutput.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCConsoleOutput) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{100}
}

func (x *CMsgGCToGCConsoleOutput) GetInitiator() string {
	if x != nil && x.Initiator != nil {
		return *x.Initiator
	}
	return ""
}

func (x *CMsgGCToGCConsoleOutput) GetSendingGc() uint32 {
	if x != nil && x.SendingGc != nil {
		return *x.SendingGc
	}
	return 0
}

func (x *CMsgGCToGCConsoleOutput) GetMsgs() []*CMsgGCToGCConsoleOutput_OutputLine {
	if x != nil {
		return x.Msgs
	}
	return nil
}

func (x *CMsgGCToGCConsoleOutput) GetIsLastForSourceJob() bool {
	if x != nil && x.IsLastForSourceJob != nil {
		return *x.IsLastForSourceJob
	}
	return false
}

type CMsgItemAges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxItemIdTimestamps []*CMsgItemAges_MaxItemIDTimestamp `protobuf:"bytes,1,rep,name=max_item_id_timestamps,json=maxItemIdTimestamps" json:"max_item_id_timestamps,omitempty"`
}

func (x *CMsgItemAges) Reset() {
	*x = CMsgItemAges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgItemAges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgItemAges) ProtoMessage() {}

func (x *CMsgItemAges) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgItemAges.ProtoReflect.Descriptor instead.
func (*CMsgItemAges) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{101}
}

func (x *CMsgItemAges) GetMaxItemIdTimestamps() []*CMsgItemAges_MaxItemIDTimestamp {
	if x != nil {
		return x.MaxItemIdTimestamps
	}
	return nil
}

type CMsgGCToGCInternalTestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendingGc   *uint32 `protobuf:"varint,1,opt,name=sending_gc,json=sendingGc" json:"sending_gc,omitempty"`
	SenderId    *uint64 `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	Context     *uint32 `protobuf:"varint,3,opt,name=context" json:"context,omitempty"`
	MessageId   *uint32 `protobuf:"varint,4,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	MessageBody []byte  `protobuf:"bytes,5,opt,name=message_body,json=messageBody" json:"message_body,omitempty"`
	JobIdSource *uint64 `protobuf:"fixed64,6,opt,name=job_id_source,json=jobIdSource" json:"job_id_source,omitempty"`
	JobIdTarget *uint64 `protobuf:"fixed64,7,opt,name=job_id_target,json=jobIdTarget" json:"job_id_target,omitempty"`
}

func (x *CMsgGCToGCInternalTestMsg) Reset() {
	*x = CMsgGCToGCInternalTestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCInternalTestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCInternalTestMsg) ProtoMessage() {}

func (x *CMsgGCToGCInternalTestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCInternalTestMsg.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCInternalTestMsg) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{102}
}

func (x *CMsgGCToGCInternalTestMsg) GetSendingGc() uint32 {
	if x != nil && x.SendingGc != nil {
		return *x.SendingGc
	}
	return 0
}

func (x *CMsgGCToGCInternalTestMsg) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CMsgGCToGCInternalTestMsg) GetContext() uint32 {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return 0
}

func (x *CMsgGCToGCInternalTestMsg) GetMessageId() uint32 {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return 0
}

func (x *CMsgGCToGCInternalTestMsg) GetMessageBody() []byte {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *CMsgGCToGCInternalTestMsg) GetJobIdSource() uint64 {
	if x != nil && x.JobIdSource != nil {
		return *x.JobIdSource
	}
	return 0
}

func (x *CMsgGCToGCInternalTestMsg) GetJobIdTarget() uint64 {
	if x != nil && x.JobIdTarget != nil {
		return *x.JobIdTarget
	}
	return 0
}

type CMsgGCToGCClientServerVersionsUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMinAllowedVersion *uint32 `protobuf:"varint,1,opt,name=client_min_allowed_version,json=clientMinAllowedVersion" json:"client_min_allowed_version,omitempty"`
	ClientActiveVersion     *uint32 `protobuf:"varint,2,opt,name=client_active_version,json=clientActiveVersion" json:"client_active_version,omitempty"`
	ServerActiveVersion     *uint32 `protobuf:"varint,3,opt,name=server_active_version,json=serverActiveVersion" json:"server_active_version,omitempty"`
	ServerDeployedVersion   *uint32 `protobuf:"varint,4,opt,name=server_deployed_version,json=serverDeployedVersion" json:"server_deployed_version,omitempty"`
	WhatChanged             *uint32 `protobuf:"varint,5,opt,name=what_changed,json=whatChanged" json:"what_changed,omitempty"`
}

func (x *CMsgGCToGCClientServerVersionsUpdated) Reset() {
	*x = CMsgGCToGCClientServerVersionsUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCClientServerVersionsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCClientServerVersionsUpdated) ProtoMessage() {}

func (x *CMsgGCToGCClientServerVersionsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCClientServerVersionsUpdated.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCClientServerVersionsUpdated) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{103}
}

func (x *CMsgGCToGCClientServerVersionsUpdated) GetClientMinAllowedVersion() uint32 {
	if x != nil && x.ClientMinAllowedVersion != nil {
		return *x.ClientMinAllowedVersion
	}
	return 0
}

func (x *CMsgGCToGCClientServerVersionsUpdated) GetClientActiveVersion() uint32 {
	if x != nil && x.ClientActiveVersion != nil {
		return *x.ClientActiveVersion
	}
	return 0
}

func (x *CMsgGCToGCClientServerVersionsUpdated) GetServerActiveVersion() uint32 {
	if x != nil && x.ServerActiveVersion != nil {
		return *x.ServerActiveVersion
	}
	return 0
}

func (x *CMsgGCToGCClientServerVersionsUpdated) GetServerDeployedVersion() uint32 {
	if x != nil && x.ServerDeployedVersion != nil {
		return *x.ServerDeployedVersion
	}
	return 0
}

func (x *CMsgGCToGCClientServerVersionsUpdated) GetWhatChanged() uint32 {
	if x != nil && x.WhatChanged != nil {
		return *x.WhatChanged
	}
	return 0
}

type CMsgGCToGCBroadcastMessageFromSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId         *uint32  `protobuf:"varint,1,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	SerializedMsg []byte   `protobuf:"bytes,2,opt,name=serialized_msg,json=serializedMsg" json:"serialized_msg,omitempty"`
	AccountIdList []uint32 `protobuf:"varint,3,rep,packed,name=account_id_list,json=accountIdList" json:"account_id_list,omitempty"`
	SteamIdList   []uint64 `protobuf:"fixed64,4,rep,packed,name=steam_id_list,json=steamIdList" json:"steam_id_list,omitempty"`
}

func (x *CMsgGCToGCBroadcastMessageFromSub) Reset() {
	*x = CMsgGCToGCBroadcastMessageFromSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCBroadcastMessageFromSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCBroadcastMessageFromSub) ProtoMessage() {}

func (x *CMsgGCToGCBroadcastMessageFromSub) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCBroadcastMessageFromSub.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCBroadcastMessageFromSub) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{104}
}

func (x *CMsgGCToGCBroadcastMessageFromSub) GetMsgId() uint32 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *CMsgGCToGCBroadcastMessageFromSub) GetSerializedMsg() []byte {
	if x != nil {
		return x.SerializedMsg
	}
	return nil
}

func (x *CMsgGCToGCBroadcastMessageFromSub) GetAccountIdList() []uint32 {
	if x != nil {
		return x.AccountIdList
	}
	return nil
}

func (x *CMsgGCToGCBroadcastMessageFromSub) GetSteamIdList() []uint64 {
	if x != nil {
		return x.SteamIdList
	}
	return nil
}

type CMsgGCToClientCurrencyPricePoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceKey   []uint64                                      `protobuf:"varint,1,rep,packed,name=price_key,json=priceKey" json:"price_key,omitempty"`
	Currencies []*CMsgGCToClientCurrencyPricePoints_Currency `protobuf:"bytes,2,rep,name=currencies" json:"currencies,omitempty"`
}

func (x *CMsgGCToClientCurrencyPricePoints) Reset() {
	*x = CMsgGCToClientCurrencyPricePoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientCurrencyPricePoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientCurrencyPricePoints) ProtoMessage() {}

func (x *CMsgGCToClientCurrencyPricePoints) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientCurrencyPricePoints.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientCurrencyPricePoints) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{105}
}

func (x *CMsgGCToClientCurrencyPricePoints) GetPriceKey() []uint64 {
	if x != nil {
		return x.PriceKey
	}
	return nil
}

func (x *CMsgGCToClientCurrencyPricePoints) GetCurrencies() []*CMsgGCToClientCurrencyPricePoints_Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type CMsgBannedWordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	BannedWords []string `protobuf:"bytes,2,rep,name=banned_words,json=bannedWords" json:"banned_words,omitempty"`
}

func (x *CMsgBannedWordList) Reset() {
	*x = CMsgBannedWordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBannedWordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBannedWordList) ProtoMessage() {}

func (x *CMsgBannedWordList) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBannedWordList.ProtoReflect.Descriptor instead.
func (*CMsgBannedWordList) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{106}
}

func (x *CMsgBannedWordList) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgBannedWordList) GetBannedWords() []string {
	if x != nil {
		return x.BannedWords
	}
	return nil
}

type CEcon_FlushInventoryCache_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid   *uint64 `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid     *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Contextid *uint64 `protobuf:"varint,3,opt,name=contextid" json:"contextid,omitempty"`
}

func (x *CEcon_FlushInventoryCache_Request) Reset() {
	*x = CEcon_FlushInventoryCache_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEcon_FlushInventoryCache_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEcon_FlushInventoryCache_Request) ProtoMessage() {}

func (x *CEcon_FlushInventoryCache_Request) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEcon_FlushInventoryCache_Request.ProtoReflect.Descriptor instead.
func (*CEcon_FlushInventoryCache_Request) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{107}
}

func (x *CEcon_FlushInventoryCache_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CEcon_FlushInventoryCache_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CEcon_FlushInventoryCache_Request) GetContextid() uint64 {
	if x != nil && x.Contextid != nil {
		return *x.Contextid
	}
	return 0
}

type CEcon_FlushInventoryCache_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (x *CEcon_FlushInventoryCache_Response) Reset() {
	*x = CEcon_FlushInventoryCache_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEcon_FlushInventoryCache_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEcon_FlushInventoryCache_Response) ProtoMessage() {}

func (x *CEcon_FlushInventoryCache_Response) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEcon_FlushInventoryCache_Response.ProtoReflect.Descriptor instead.
func (*CEcon_FlushInventoryCache_Response) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{108}
}

func (x *CEcon_FlushInventoryCache_Response) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgGCToGCFlushSteamInventoryCache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*CMsgGCToGCFlushSteamInventoryCache_Key `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (x *CMsgGCToGCFlushSteamInventoryCache) Reset() {
	*x = CMsgGCToGCFlushSteamInventoryCache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCFlushSteamInventoryCache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCFlushSteamInventoryCache) ProtoMessage() {}

func (x *CMsgGCToGCFlushSteamInventoryCache) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCFlushSteamInventoryCache.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCFlushSteamInventoryCache) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{109}
}

func (x *CMsgGCToGCFlushSteamInventoryCache) GetKeys() []*CMsgGCToGCFlushSteamInventoryCache_Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CMsgGCToGCUpdateSubscriptionItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	AlwaysNotify *bool   `protobuf:"varint,2,opt,name=always_notify,json=alwaysNotify" json:"always_notify,omitempty"`
}

func (x *CMsgGCToGCUpdateSubscriptionItems) Reset() {
	*x = CMsgGCToGCUpdateSubscriptionItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCUpdateSubscriptionItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCUpdateSubscriptionItems) ProtoMessage() {}

func (x *CMsgGCToGCUpdateSubscriptionItems) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCUpdateSubscriptionItems.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCUpdateSubscriptionItems) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{110}
}

func (x *CMsgGCToGCUpdateSubscriptionItems) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgGCToGCUpdateSubscriptionItems) GetAlwaysNotify() bool {
	if x != nil && x.AlwaysNotify != nil {
		return *x.AlwaysNotify
	}
	return false
}

type CMsgGCToGCSelfPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleId *uint32 `protobuf:"varint,1,opt,name=sample_id,json=sampleId" json:"sample_id,omitempty"`
}

func (x *CMsgGCToGCSelfPing) Reset() {
	*x = CMsgGCToGCSelfPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCSelfPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSelfPing) ProtoMessage() {}

func (x *CMsgGCToGCSelfPing) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSelfPing.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSelfPing) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{111}
}

func (x *CMsgGCToGCSelfPing) GetSampleId() uint32 {
	if x != nil && x.SampleId != nil {
		return *x.SampleId
	}
	return 0
}

type CMsgGCToGCGetInfuxIntervalStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCGetInfuxIntervalStats) Reset() {
	*x = CMsgGCToGCGetInfuxIntervalStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGetInfuxIntervalStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGetInfuxIntervalStats) ProtoMessage() {}

func (x *CMsgGCToGCGetInfuxIntervalStats) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGetInfuxIntervalStats.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGetInfuxIntervalStats) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{112}
}

type CMsgGCToGCGetInfuxIntervalStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatIds          []uint32 `protobuf:"fixed32,1,rep,packed,name=stat_ids,json=statIds" json:"stat_ids,omitempty"`
	StatTotal        []uint64 `protobuf:"varint,2,rep,packed,name=stat_total,json=statTotal" json:"stat_total,omitempty"`
	StatSamples      []uint32 `protobuf:"varint,3,rep,packed,name=stat_samples,json=statSamples" json:"stat_samples,omitempty"`
	StatMax          []uint32 `protobuf:"varint,4,rep,packed,name=stat_max,json=statMax" json:"stat_max,omitempty"`
	SampleDurationMs *uint32  `protobuf:"varint,5,opt,name=sample_duration_ms,json=sampleDurationMs" json:"sample_duration_ms,omitempty"`
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) Reset() {
	*x = CMsgGCToGCGetInfuxIntervalStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGetInfuxIntervalStatsResponse) ProtoMessage() {}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGetInfuxIntervalStatsResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGetInfuxIntervalStatsResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{113}
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) GetStatIds() []uint32 {
	if x != nil {
		return x.StatIds
	}
	return nil
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) GetStatTotal() []uint64 {
	if x != nil {
		return x.StatTotal
	}
	return nil
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) GetStatSamples() []uint32 {
	if x != nil {
		return x.StatSamples
	}
	return nil
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) GetStatMax() []uint32 {
	if x != nil {
		return x.StatMax
	}
	return nil
}

func (x *CMsgGCToGCGetInfuxIntervalStatsResponse) GetSampleDurationMs() uint32 {
	if x != nil && x.SampleDurationMs != nil {
		return *x.SampleDurationMs
	}
	return 0
}

type CMsgGCToGCPurchaseSucceeded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgGCToGCPurchaseSucceeded) Reset() {
	*x = CMsgGCToGCPurchaseSucceeded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCPurchaseSucceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCPurchaseSucceeded) ProtoMessage() {}

func (x *CMsgGCToGCPurchaseSucceeded) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCPurchaseSucceeded.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCPurchaseSucceeded) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{114}
}

type CExtraMsgBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType      *uint32 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	Contents     []byte  `protobuf:"bytes,2,opt,name=contents" json:"contents,omitempty"`
	MsgKey       *uint64 `protobuf:"varint,3,opt,name=msg_key,json=msgKey" json:"msg_key,omitempty"`
	IsCompressed *bool   `protobuf:"varint,4,opt,name=is_compressed,json=isCompressed" json:"is_compressed,omitempty"`
}

func (x *CExtraMsgBlock) Reset() {
	*x = CExtraMsgBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CExtraMsgBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CExtraMsgBlock) ProtoMessage() {}

func (x *CExtraMsgBlock) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CExtraMsgBlock.ProtoReflect.Descriptor instead.
func (*CExtraMsgBlock) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{115}
}

func (x *CExtraMsgBlock) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CExtraMsgBlock) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *CExtraMsgBlock) GetMsgKey() uint64 {
	if x != nil && x.MsgKey != nil {
		return *x.MsgKey
	}
	return 0
}

func (x *CExtraMsgBlock) GetIsCompressed() bool {
	if x != nil && x.IsCompressed != nil {
		return *x.IsCompressed
	}
	return false
}

type CMsgClientToGCGetLimitedItemPurchaseQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDef *uint32 `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantity) Reset() {
	*x = CMsgClientToGCGetLimitedItemPurchaseQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetLimitedItemPurchaseQuantity) ProtoMessage() {}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetLimitedItemPurchaseQuantity.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetLimitedItemPurchaseQuantity) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{116}
}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantity) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

type CMsgClientToGCGetLimitedItemPurchaseQuantityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result            *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse `protobuf:"varint,1,opt,name=result,enum=dota.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse,def=0" json:"result,omitempty"`
	QuantityPurchased *uint32                                                         `protobuf:"varint,2,opt,name=quantity_purchased,json=quantityPurchased" json:"quantity_purchased,omitempty"`
}

// Default values for CMsgClientToGCGetLimitedItemPurchaseQuantityResponse fields.
const (
	Default_CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_Result = CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_k_eInternalError
)

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) Reset() {
	*x = CMsgClientToGCGetLimitedItemPurchaseQuantityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) ProtoMessage() {}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{117}
}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) GetResult() CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_Result
}

func (x *CMsgClientToGCGetLimitedItemPurchaseQuantityResponse) GetQuantityPurchased() uint32 {
	if x != nil && x.QuantityPurchased != nil {
		return *x.QuantityPurchased
	}
	return 0
}

type CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType  *uint32 `protobuf:"varint,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	ItemId     *uint64 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	Adjustment *uint32 `protobuf:"varint,3,opt,name=adjustment" json:"adjustment,omitempty"`
}

func (x *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) Reset() {
	*x = CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) ProtoMessage() {}

func (x *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment.ProtoReflect.Descriptor instead.
func (*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetEventType() uint32 {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return 0
}

func (x *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment) GetAdjustment() uint32 {
	if x != nil && x.Adjustment != nil {
		return *x.Adjustment
	}
	return 0
}

type CMsgGCRequestStoreSalesDataResponse_Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDef *uint32 `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	Price   *uint32 `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
}

func (x *CMsgGCRequestStoreSalesDataResponse_Price) Reset() {
	*x = CMsgGCRequestStoreSalesDataResponse_Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCRequestStoreSalesDataResponse_Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestStoreSalesDataResponse_Price) ProtoMessage() {}

func (x *CMsgGCRequestStoreSalesDataResponse_Price) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestStoreSalesDataResponse_Price.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestStoreSalesDataResponse_Price) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CMsgGCRequestStoreSalesDataResponse_Price) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

func (x *CMsgGCRequestStoreSalesDataResponse_Price) GetPrice() uint32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

type CMsgLookupMultipleAccountNamesResponse_Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Persona   *string `protobuf:"bytes,2,opt,name=persona" json:"persona,omitempty"`
}

func (x *CMsgLookupMultipleAccountNamesResponse_Account) Reset() {
	*x = CMsgLookupMultipleAccountNamesResponse_Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLookupMultipleAccountNamesResponse_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLookupMultipleAccountNamesResponse_Account) ProtoMessage() {}

func (x *CMsgLookupMultipleAccountNamesResponse_Account) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLookupMultipleAccountNamesResponse_Account.ProtoReflect.Descriptor instead.
func (*CMsgLookupMultipleAccountNamesResponse_Account) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CMsgLookupMultipleAccountNamesResponse_Account) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CMsgLookupMultipleAccountNamesResponse_Account) GetPersona() string {
	if x != nil && x.Persona != nil {
		return *x.Persona
	}
	return ""
}

type CMsgGCToGCGrantAccountRolledItems_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDef                *uint32                                                        `protobuf:"varint,1,opt,name=item_def,json=itemDef" json:"item_def,omitempty"`
	LootLists              []string                                                       `protobuf:"bytes,2,rep,name=loot_lists,json=lootLists" json:"loot_lists,omitempty"`
	IgnoreLimit            *bool                                                          `protobuf:"varint,3,opt,name=ignore_limit,json=ignoreLimit" json:"ignore_limit,omitempty"`
	Origin                 *uint32                                                        `protobuf:"varint,4,opt,name=origin" json:"origin,omitempty"`
	DynamicAttributes      []*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute     `protobuf:"bytes,5,rep,name=dynamic_attributes,json=dynamicAttributes" json:"dynamic_attributes,omitempty"`
	AdditionalAuditEntries []*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry `protobuf:"bytes,6,rep,name=additional_audit_entries,json=additionalAuditEntries" json:"additional_audit_entries,omitempty"`
	InventoryToken         *uint32                                                        `protobuf:"varint,7,opt,name=inventory_token,json=inventoryToken" json:"inventory_token,omitempty"`
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) Reset() {
	*x = CMsgGCToGCGrantAccountRolledItems_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGrantAccountRolledItems_Item) ProtoMessage() {}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGrantAccountRolledItems_Item.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGrantAccountRolledItems_Item) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{30, 0}
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetItemDef() uint32 {
	if x != nil && x.ItemDef != nil {
		return *x.ItemDef
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetLootLists() []string {
	if x != nil {
		return x.LootLists
	}
	return nil
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetIgnoreLimit() bool {
	if x != nil && x.IgnoreLimit != nil {
		return *x.IgnoreLimit
	}
	return false
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetOrigin() uint32 {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetDynamicAttributes() []*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute {
	if x != nil {
		return x.DynamicAttributes
	}
	return nil
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetAdditionalAuditEntries() []*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry {
	if x != nil {
		return x.AdditionalAuditEntries
	}
	return nil
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item) GetInventoryToken() uint32 {
	if x != nil && x.InventoryToken != nil {
		return *x.InventoryToken
	}
	return 0
}

type CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ValueUint32 *uint32  `protobuf:"varint,2,opt,name=value_uint32,json=valueUint32" json:"value_uint32,omitempty"`
	ValueFloat  *float32 `protobuf:"fixed32,3,opt,name=value_float,json=valueFloat" json:"value_float,omitempty"`
	ValueString *string  `protobuf:"bytes,4,opt,name=value_string,json=valueString" json:"value_string,omitempty"`
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) Reset() {
	*x = CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) ProtoMessage() {}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{30, 0, 0}
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetValueUint32() uint32 {
	if x != nil && x.ValueUint32 != nil {
		return *x.ValueUint32
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetValueFloat() float32 {
	if x != nil && x.ValueFloat != nil {
		return *x.ValueFloat
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute) GetValueString() string {
	if x != nil && x.ValueString != nil {
		return *x.ValueString
	}
	return ""
}

type CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAccountId *uint32 `protobuf:"varint,1,opt,name=owner_account_id,json=ownerAccountId" json:"owner_account_id,omitempty"`
	AuditAction    *uint32 `protobuf:"varint,2,opt,name=audit_action,json=auditAction" json:"audit_action,omitempty"`
	AuditData      *uint64 `protobuf:"varint,3,opt,name=audit_data,json=auditData" json:"audit_data,omitempty"`
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) Reset() {
	*x = CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) ProtoMessage() {}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{30, 0, 1}
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) GetOwnerAccountId() uint32 {
	if x != nil && x.OwnerAccountId != nil {
		return *x.OwnerAccountId
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) GetAuditAction() uint32 {
	if x != nil && x.AuditAction != nil {
		return *x.AuditAction
	}
	return 0
}

func (x *CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry) GetAuditData() uint64 {
	if x != nil && x.AuditData != nil {
		return *x.AuditData
	}
	return 0
}

type CMsgClientToGCGetGiftPermissionsResponse_FriendPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId  *uint32                      `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Permission *EGCMsgInitiateTradeResponse `protobuf:"varint,2,opt,name=permission,enum=dota.EGCMsgInitiateTradeResponse,def=0" json:"permission,omitempty"`
}

// Default values for CMsgClientToGCGetGiftPermissionsResponse_FriendPermission fields.
const (
	Default_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_Permission = EGCMsgInitiateTradeResponse_k_EGCMsgInitiateTradeResponse_Accepted
)

func (x *CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) Reset() {
	*x = CMsgClientToGCGetGiftPermissionsResponse_FriendPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) ProtoMessage() {}

func (x *CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCGetGiftPermissionsResponse_FriendPermission.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{55, 0}
}

func (x *CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCGetGiftPermissionsResponse_FriendPermission) GetPermission() EGCMsgInitiateTradeResponse {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return Default_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_Permission
}

type CMsgClientToGCUnlockCrateResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	DefIndex *uint32 `protobuf:"varint,2,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
}

func (x *CMsgClientToGCUnlockCrateResponse_Item) Reset() {
	*x = CMsgClientToGCUnlockCrateResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCUnlockCrateResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCUnlockCrateResponse_Item) ProtoMessage() {}

func (x *CMsgClientToGCUnlockCrateResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCUnlockCrateResponse_Item.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCUnlockCrateResponse_Item) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{67, 0}
}

func (x *CMsgClientToGCUnlockCrateResponse_Item) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgClientToGCUnlockCrateResponse_Item) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

type CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *string `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Date        *uint32 `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`
	RevenueUsd  *int64  `protobuf:"varint,3,opt,name=revenue_usd,json=revenueUsd" json:"revenue_usd,omitempty"`
	Units       *int32  `protobuf:"varint,4,opt,name=units" json:"units,omitempty"`
}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) Reset() {
	*x = CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) ProtoMessage() {}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{86, 0}
}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) GetDate() uint32 {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return 0
}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) GetRevenueUsd() int64 {
	if x != nil && x.RevenueUsd != nil {
		return *x.RevenueUsd
	}
	return 0
}

func (x *CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue) GetUnits() int32 {
	if x != nil && x.Units != nil {
		return *x.Units
	}
	return 0
}

type CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *string `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Date        *uint32 `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`
	RevenueUsd  *int64  `protobuf:"varint,3,opt,name=revenue_usd,json=revenueUsd" json:"revenue_usd,omitempty"`
	Units       *int32  `protobuf:"varint,4,opt,name=units" json:"units,omitempty"`
}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) Reset() {
	*x = CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) ProtoMessage() {}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue.ProtoReflect.Descriptor instead.
func (*CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{88, 0}
}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) GetDate() uint32 {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return 0
}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) GetRevenueUsd() int64 {
	if x != nil && x.RevenueUsd != nil {
		return *x.RevenueUsd
	}
	return 0
}

func (x *CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue) GetUnits() int32 {
	if x != nil && x.Units != nil {
		return *x.Units
	}
	return 0
}

type CMsgClientToGCCreateStaticRecipe_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *uint64 `protobuf:"varint,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	SlotId *uint32 `protobuf:"varint,2,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
}

func (x *CMsgClientToGCCreateStaticRecipe_Item) Reset() {
	*x = CMsgClientToGCCreateStaticRecipe_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCreateStaticRecipe_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCreateStaticRecipe_Item) ProtoMessage() {}

func (x *CMsgClientToGCCreateStaticRecipe_Item) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipe_Item.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCreateStaticRecipe_Item) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{92, 0}
}

func (x *CMsgClientToGCCreateStaticRecipe_Item) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgClientToGCCreateStaticRecipe_Item) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

type CMsgClientToGCCreateStaticRecipeResponse_OutputItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefIndex *uint32 `protobuf:"varint,1,opt,name=def_index,json=defIndex" json:"def_index,omitempty"`
	ItemId   *uint64 `protobuf:"varint,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	SlotId   *uint32 `protobuf:"varint,3,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_OutputItem) Reset() {
	*x = CMsgClientToGCCreateStaticRecipeResponse_OutputItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_OutputItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCreateStaticRecipeResponse_OutputItem) ProtoMessage() {}

func (x *CMsgClientToGCCreateStaticRecipeResponse_OutputItem) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipeResponse_OutputItem.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCreateStaticRecipeResponse_OutputItem) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{93, 0}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_OutputItem) GetDefIndex() uint32 {
	if x != nil && x.DefIndex != nil {
		return *x.DefIndex
	}
	return 0
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_OutputItem) GetItemId() uint64 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_OutputItem) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

type CMsgClientToGCCreateStaticRecipeResponse_InputError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId *uint32                                             `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Error  *CMsgClientToGCCreateStaticRecipeResponse_EResponse `protobuf:"varint,2,opt,name=error,enum=dota.CMsgClientToGCCreateStaticRecipeResponse_EResponse,def=0" json:"error,omitempty"`
}

// Default values for CMsgClientToGCCreateStaticRecipeResponse_InputError fields.
const (
	Default_CMsgClientToGCCreateStaticRecipeResponse_InputError_Error = CMsgClientToGCCreateStaticRecipeResponse_eResponse_Success
)

func (x *CMsgClientToGCCreateStaticRecipeResponse_InputError) Reset() {
	*x = CMsgClientToGCCreateStaticRecipeResponse_InputError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_InputError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCreateStaticRecipeResponse_InputError) ProtoMessage() {}

func (x *CMsgClientToGCCreateStaticRecipeResponse_InputError) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipeResponse_InputError.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCreateStaticRecipeResponse_InputError) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{93, 1}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_InputError) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_InputError) GetError() CMsgClientToGCCreateStaticRecipeResponse_EResponse {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return Default_CMsgClientToGCCreateStaticRecipeResponse_InputError_Error
}

type CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId *uint32 `protobuf:"varint,1,opt,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Value  *uint64 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) Reset() {
	*x = CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) ProtoMessage() {}

func (x *CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{93, 2}
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput) GetValue() uint64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type CMsgProcessTransactionOrder_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemDefIndex      *uint32 `protobuf:"varint,1,opt,name=item_def_index,json=itemDefIndex" json:"item_def_index,omitempty"`
	ItemPrice         *uint32 `protobuf:"varint,2,opt,name=item_price,json=itemPrice" json:"item_price,omitempty"`
	Quantity          *uint32 `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
	CategoryDesc      *string `protobuf:"bytes,4,opt,name=category_desc,json=categoryDesc" json:"category_desc,omitempty"`
	StorePurchaseType *uint32 `protobuf:"varint,5,opt,name=store_purchase_type,json=storePurchaseType" json:"store_purchase_type,omitempty"`
	SourceReferenceId *uint64 `protobuf:"varint,6,opt,name=source_reference_id,json=sourceReferenceId" json:"source_reference_id,omitempty"`
	ParentStackIndex  *int32  `protobuf:"varint,7,opt,name=parent_stack_index,json=parentStackIndex" json:"parent_stack_index,omitempty"`
	DefaultPrice      *bool   `protobuf:"varint,8,opt,name=default_price,json=defaultPrice" json:"default_price,omitempty"`
	IsUserFacing      *bool   `protobuf:"varint,9,opt,name=is_user_facing,json=isUserFacing" json:"is_user_facing,omitempty"`
}

func (x *CMsgProcessTransactionOrder_Item) Reset() {
	*x = CMsgProcessTransactionOrder_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgProcessTransactionOrder_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgProcessTransactionOrder_Item) ProtoMessage() {}

func (x *CMsgProcessTransactionOrder_Item) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgProcessTransactionOrder_Item.ProtoReflect.Descriptor instead.
func (*CMsgProcessTransactionOrder_Item) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{94, 0}
}

func (x *CMsgProcessTransactionOrder_Item) GetItemDefIndex() uint32 {
	if x != nil && x.ItemDefIndex != nil {
		return *x.ItemDefIndex
	}
	return 0
}

func (x *CMsgProcessTransactionOrder_Item) GetItemPrice() uint32 {
	if x != nil && x.ItemPrice != nil {
		return *x.ItemPrice
	}
	return 0
}

func (x *CMsgProcessTransactionOrder_Item) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *CMsgProcessTransactionOrder_Item) GetCategoryDesc() string {
	if x != nil && x.CategoryDesc != nil {
		return *x.CategoryDesc
	}
	return ""
}

func (x *CMsgProcessTransactionOrder_Item) GetStorePurchaseType() uint32 {
	if x != nil && x.StorePurchaseType != nil {
		return *x.StorePurchaseType
	}
	return 0
}

func (x *CMsgProcessTransactionOrder_Item) GetSourceReferenceId() uint64 {
	if x != nil && x.SourceReferenceId != nil {
		return *x.SourceReferenceId
	}
	return 0
}

func (x *CMsgProcessTransactionOrder_Item) GetParentStackIndex() int32 {
	if x != nil && x.ParentStackIndex != nil {
		return *x.ParentStackIndex
	}
	return 0
}

func (x *CMsgProcessTransactionOrder_Item) GetDefaultPrice() bool {
	if x != nil && x.DefaultPrice != nil {
		return *x.DefaultPrice
	}
	return false
}

func (x *CMsgProcessTransactionOrder_Item) GetIsUserFacing() bool {
	if x != nil && x.IsUserFacing != nil {
		return *x.IsUserFacing
	}
	return false
}

type CMsgGCToGCConsoleOutput_OutputLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	SpewLevel *uint32 `protobuf:"varint,2,opt,name=spew_level,json=spewLevel" json:"spew_level,omitempty"`
}

func (x *CMsgGCToGCConsoleOutput_OutputLine) Reset() {
	*x = CMsgGCToGCConsoleOutput_OutputLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCConsoleOutput_OutputLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCConsoleOutput_OutputLine) ProtoMessage() {}

func (x *CMsgGCToGCConsoleOutput_OutputLine) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCConsoleOutput_OutputLine.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCConsoleOutput_OutputLine) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{100, 0}
}

func (x *CMsgGCToGCConsoleOutput_OutputLine) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *CMsgGCToGCConsoleOutput_OutputLine) GetSpewLevel() uint32 {
	if x != nil && x.SpewLevel != nil {
		return *x.SpewLevel
	}
	return 0
}

type CMsgItemAges_MaxItemIDTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	MaxItemId *uint64 `protobuf:"varint,2,opt,name=max_item_id,json=maxItemId" json:"max_item_id,omitempty"`
}

func (x *CMsgItemAges_MaxItemIDTimestamp) Reset() {
	*x = CMsgItemAges_MaxItemIDTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgItemAges_MaxItemIDTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgItemAges_MaxItemIDTimestamp) ProtoMessage() {}

func (x *CMsgItemAges_MaxItemIDTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgItemAges_MaxItemIDTimestamp.ProtoReflect.Descriptor instead.
func (*CMsgItemAges_MaxItemIDTimestamp) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{101, 0}
}

func (x *CMsgItemAges_MaxItemIDTimestamp) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CMsgItemAges_MaxItemIDTimestamp) GetMaxItemId() uint64 {
	if x != nil && x.MaxItemId != nil {
		return *x.MaxItemId
	}
	return 0
}

type CMsgGCToClientCurrencyPricePoints_Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyId    *uint32  `protobuf:"varint,1,opt,name=currency_id,json=currencyId" json:"currency_id,omitempty"`
	CurrencyPrice []uint64 `protobuf:"varint,2,rep,packed,name=currency_price,json=currencyPrice" json:"currency_price,omitempty"`
}

func (x *CMsgGCToClientCurrencyPricePoints_Currency) Reset() {
	*x = CMsgGCToClientCurrencyPricePoints_Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToClientCurrencyPricePoints_Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToClientCurrencyPricePoints_Currency) ProtoMessage() {}

func (x *CMsgGCToClientCurrencyPricePoints_Currency) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToClientCurrencyPricePoints_Currency.ProtoReflect.Descriptor instead.
func (*CMsgGCToClientCurrencyPricePoints_Currency) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{105, 0}
}

func (x *CMsgGCToClientCurrencyPricePoints_Currency) GetCurrencyId() uint32 {
	if x != nil && x.CurrencyId != nil {
		return *x.CurrencyId
	}
	return 0
}

func (x *CMsgGCToClientCurrencyPricePoints_Currency) GetCurrencyPrice() []uint64 {
	if x != nil {
		return x.CurrencyPrice
	}
	return nil
}

type CMsgGCToGCFlushSteamInventoryCache_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid   *uint64 `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	Contextid *uint64 `protobuf:"varint,2,opt,name=contextid" json:"contextid,omitempty"`
}

func (x *CMsgGCToGCFlushSteamInventoryCache_Key) Reset() {
	*x = CMsgGCToGCFlushSteamInventoryCache_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_econ_gcmessages_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCToGCFlushSteamInventoryCache_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCFlushSteamInventoryCache_Key) ProtoMessage() {}

func (x *CMsgGCToGCFlushSteamInventoryCache_Key) ProtoReflect() protoreflect.Message {
	mi := &file_econ_gcmessages_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCFlushSteamInventoryCache_Key.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCFlushSteamInventoryCache_Key) Descriptor() ([]byte, []int) {
	return file_econ_gcmessages_proto_rawDescGZIP(), []int{109, 0}
}

func (x *CMsgGCToGCFlushSteamInventoryCache_Key) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCToGCFlushSteamInventoryCache_Key) GetContextid() uint64 {
	if x != nil && x.Contextid != nil {
		return *x.Contextid
	}
	return 0
}

var File_econ_gcmessages_proto protoreflect.FileDescriptor

var file_econ_gcmessages_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a, 0x13, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x12, 0x43,
	0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61, 0x75,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x8f, 0x01, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0xd7, 0x02, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x45, 0x63, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x7e, 0x0a, 0x19, 0x73, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x45, 0x63, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x17, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x75, 0x72,
	0x62, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74,
	0x75, 0x72, 0x62, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x1a, 0x71, 0x0a, 0x17, 0x43, 0x53, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x29, 0x43,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75,
	0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x73, 0x22, 0x66, 0x0a, 0x31, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x27, 0x43,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75,
	0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x73, 0x22, 0x49, 0x0a, 0x2f, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x31, 0x0a, 0x14,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22,
	0x53, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0xf2, 0x01, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0a,
	0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x1a,
	0x38, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x70, 0x0a, 0x2b, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f,
	0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x6d, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x66,
	0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x63,
	0x74, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x54, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x1e,
	0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x64, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a,
	0x41, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x22, 0x3d, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x66, 0x22, 0xa8, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x70, 0x65, 0x65, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x65, 0x65, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x66, 0x73, 0x22, 0x28, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x6b, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x22, 0x47, 0x0a, 0x1f,
	0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x61, 0x74, 0x65,
	0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x66, 0x22, 0xa3, 0x02, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x30, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x31, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x32, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x33, 0x22, 0x28, 0x0a, 0x07, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0f, 0x0a, 0x0b,
	0x6b, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x6b, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x22, 0xe1, 0x01, 0x0a, 0x1d,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x61, 0x6e, 0x55, 0x73, 0x65,
	0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x66, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65,
	0x71, 0x75, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x22,
	0x88, 0x02, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x51, 0x4c, 0x41, 0x64, 0x64, 0x44, 0x72,
	0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x9c, 0x01, 0x0a, 0x1b, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x51, 0x4c, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x66, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x74, 0x6f,
	0x5f, 0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x51, 0x0a, 0x18, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x4f,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x60, 0x0a, 0x21,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x67,
	0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x21, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x1e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x22, 0xef, 0x06, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xa4, 0x05,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x66, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x6c, 0x0a, 0x12, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x18, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0x8d, 0x01, 0x0a, 0x10, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a,
	0x82, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x61, 0x64, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64,
	0x22, 0x97, 0x02, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x17, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x5f, 0x70, 0x6f, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x14, 0x67, 0x69, 0x66, 0x74, 0x50, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x64, 0x75, 0x65, 0x6c,
	0x5f, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x64, 0x75, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x19, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x5f, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x6b, 0x49,
	0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x22, 0x7a, 0x0a, 0x11, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x30, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x4d, 0x73, 0x67, 0x22, 0x31, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x55, 0x73,
	0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x45, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x13, 0x6b, 0x5f, 0x45, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x4b, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x5f, 0x0a, 0x21, 0x43, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x66, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x71, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a,
	0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x3a, 0x13, 0x6b, 0x5f, 0x45, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x4b, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0xfa, 0x01, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x45, 0x63, 0x6f,
	0x6e, 0x53, 0x51, 0x4c, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x6c, 0x64, 0x5f, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x65, 0x77,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xc8, 0x01, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x61, 0x66, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x65, 0x64, 0x65, 0x73,
	0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x64, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x70, 0x65, 0x64, 0x65, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x64,
	0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x0e, 0x43, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0xbf, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0x70, 0x0a, 0x0b, 0x45, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x6f, 0x64,
	0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x6b,
	0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6c, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x55, 0x73, 0x65, 0x64, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x03, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x76, 0x4e, 0x65,
	0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x6f, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x74, 0x74, 0x72, 0x44, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x76, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x76, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x22, 0x43,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x76, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x20, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64,
	0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4b, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x41, 0x64, 0x64, 0x47, 0x69, 0x66, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x57, 0x72, 0x61, 0x70, 0x41, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x67, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xbc, 0x03, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x57, 0x72, 0x61, 0x70, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x12, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x4b, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x4d, 0x61, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x69,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x69, 0x66,
	0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x78, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x69, 0x66, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x67, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x76, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x26, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x33, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x55, 0x6e, 0x77, 0x72, 0x61, 0x70, 0x47, 0x69, 0x66, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x47, 0x69, 0x66, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8a, 0x05, 0x0a, 0x28, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x47, 0x69, 0x66, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61,
	0x73, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x54, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x76, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x26,
	0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x1a, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69, 0x70, 0x41, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x25, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x21, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x68, 0x69,
	0x70, 0x41, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x6e, 0x0a, 0x12, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x47, 0x69, 0x66,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9c, 0x01, 0x0a, 0x10, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x3a, 0x26, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xb5,
	0x04, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x0f, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x73, 0x12, 0x6c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x55,
	0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x3a, 0x18, 0x6b, 0x5f, 0x55,
	0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x65, 0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x19, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x16, 0x75, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0xb9, 0x02, 0x0a, 0x0d, 0x45,
	0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x6b, 0x5f, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x6b, 0x5f,
	0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x35, 0x0a, 0x31, 0x6b, 0x5f, 0x55, 0x6e, 0x70, 0x61, 0x63,
	0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x55,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22,
	0x6b, 0x5f, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x03, 0x12, 0x27, 0x0a, 0x23, 0x6b, 0x5f, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x04, 0x12, 0x29, 0x0a,
	0x25, 0x6b, 0x5f, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x42, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x10, 0x05, 0x12, 0x2c, 0x0a, 0x28, 0x6b, 0x5f, 0x55, 0x6e,
	0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x55, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x10, 0x06, 0x22, 0x5b, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x45, 0x71, 0x75, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x39, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x70, 0x73, 0x22, 0x51, 0x0a, 0x20, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x73, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x10, 0x73, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a,
	0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xed, 0x01, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x3a, 0x14, 0x6b, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x61, 0x0a, 0x09, 0x45, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01,
	0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x10, 0x02, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0xd2,
	0x05, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x3a, 0x17, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x50, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x22, 0xdc, 0x03, 0x0a, 0x0c, 0x45, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x50, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x61, 0x6e, 0x74,
	0x41, 0x66, 0x66, 0x6f, 0x72, 0x64, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x5f, 0x43, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x10, 0x03, 0x12, 0x26, 0x0a,
	0x22, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x61,
	0x6e, 0x74, 0x41, 0x66, 0x66, 0x6f, 0x72, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x10, 0x05,
	0x12, 0x26, 0x0a, 0x22, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x61, 0x6e, 0x74, 0x41, 0x66, 0x66,
	0x6f, 0x72, 0x64, 0x47, 0x65, 0x6d, 0x10, 0x06, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x5f, 0x4e, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x75, 0x6d, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x10, 0x07, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x41, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x08, 0x12, 0x23,
	0x0a, 0x1f, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x09, 0x12, 0x26, 0x0a, 0x22, 0x6b, 0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x0a, 0x12, 0x26, 0x0a, 0x22, 0x6b,
	0x5f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x0b, 0x22, 0xb9, 0x01, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x74,
	0x5f, 0x74, 0x6f, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x61, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x5f, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x63, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x22, 0xf6, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x12, 0x6b, 0x5f,
	0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x4b,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x51, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x3c, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x64, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3c, 0x0a, 0x21, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xca, 0x03, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x3a, 0x1f,
	0x6b, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x14, 0x45, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x6b,
	0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0x01, 0x12, 0x2e, 0x0a, 0x2a, 0x6b, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x10, 0x02, 0x12, 0x39, 0x0a, 0x35, 0x6b, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x42, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x03, 0x12, 0x35, 0x0a,
	0x31, 0x6b, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x6f, 0x65, 0x73, 0x6e, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x10, 0x04, 0x22, 0x76, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26,
	0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f,
	0x6f, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc9, 0x02, 0x0a,
	0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4e,
	0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x60, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x3a, 0x14, 0x6b, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x45,
	0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x4e, 0x61,
	0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x4e,
	0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x54,
	0x6f, 0x6f, 0x6c, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x02, 0x12, 0x23,
	0x0a, 0x1f, 0x6b, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f, 0x6b, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x73, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x04, 0x22, 0x53, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe2, 0x02,
	0x0a, 0x25, 0x43, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x44,
	0x65, 0x66, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x69, 0x74, 0x65, 0x6d, 0x52, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x6f, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x72, 0x44, 0x65,
	0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x48, 0x65, 0x72, 0x6f,
	0x12, 0x22, 0x0a, 0x0d, 0x67, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x61, 0x0a, 0x17, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x18, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x53,
	0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcc,
	0x01, 0x0a, 0x1a, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x53, 0x70, 0x65, 0x63, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x77, 0x0a,
	0x1e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xe0, 0x01, 0x0a, 0x3b, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x44, 0x45, 0x53, 0x45, 0x52, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x41,
	0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x50, 0x0a, 0x1e, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x11, 0x43, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x5f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x25, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x22, 0x99, 0x02, 0x0a, 0x26, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a,
	0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x1a, 0x83, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x55, 0x73, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x82,
	0x01, 0x0a, 0x28, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x64, 0x22, 0x9f, 0x02, 0x0a, 0x29, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52,
	0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x1a,
	0x83, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x55, 0x73, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x51, 0x4c,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x44, 0x65, 0x66,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x38, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22,
	0xa1, 0x07, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x11, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x6e, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x11,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x1a, 0x5b, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x1a, 0x88,
	0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a,
	0x11, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x41, 0x0a, 0x10, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb4, 0x01, 0x0a,
	0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x05, 0x22, 0xcc, 0x05, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x54, 0x78, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54, 0x78, 0x6e,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xe5, 0x02, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x22, 0x82, 0x01, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x44, 0x4b,
	0x65, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4a, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x75, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x28, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0xb3, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x89, 0x02, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x63, 0x12,
	0x3c, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x12, 0x32, 0x0a,
	0x16, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69,
	0x73, 0x4c, 0x61, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x6f,
	0x62, 0x1a, 0x3f, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x70, 0x65, 0x77, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0xbe, 0x01, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x67, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x1a,
	0x52, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0xfb, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x63,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0xa7, 0x02, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x77, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x21,
	0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x75,
	0x62, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12,
	0x2a, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x06, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x50, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x08,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x51, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x71, 0x0a, 0x21, 0x43, 0x45, 0x63, 0x6f, 0x6e,
	0x5f, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x22, 0x43, 0x45,
	0x63, 0x6f, 0x6e, 0x5f, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x22, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x1a, 0x3d, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x69, 0x64, 0x22, 0x67, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61,
	0x6c, 0x77, 0x61, 0x79, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x31, 0x0a, 0x12, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x21,
	0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x75, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x22, 0xdf, 0x01, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x75, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x07, 0x42,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x25, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d,
	0x61, 0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x43, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x73, 0x67,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x73, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d,
	0x73, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x2c, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x66, 0x22, 0xeb, 0x02, 0x0a, 0x34, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d,
	0x0a, 0x12, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x22, 0x93, 0x01,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x4e, 0x6f, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x10, 0x06, 0x2a, 0xd4, 0x38, 0x0a, 0x0a, 0x45, 0x47, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x4d,
	0x73, 0x67, 0x12, 0x11, 0x0a, 0x0c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x42, 0x61,
	0x73, 0x65, 0x10, 0xe8, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0xe9, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xec, 0x07, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xed, 0x07, 0x12, 0x1d,
	0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x10, 0xee, 0x07, 0x12, 0x16, 0x0a,
	0x11, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x10, 0xf1, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xf2, 0x07, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x47, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x57, 0x72, 0x65, 0x6e, 0x63, 0x68, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x10, 0xf3, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x10, 0xf4, 0x07, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4d,
	0x4f, 0x54, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x10, 0xf5, 0x07, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x6f, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0xf6, 0x07, 0x12, 0x2f,
	0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x6f, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0xf7, 0x07, 0x12,
	0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x64, 0x53, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x44,
	0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0xf8, 0x07, 0x12, 0x27, 0x0a, 0x22,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x10, 0xf9, 0x07, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x10, 0xfa, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x10, 0xfb,
	0x07, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0xfc, 0x07, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0xfd, 0x07, 0x12, 0x30,
	0x0a, 0x2b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0xfe, 0x07,
	0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x10, 0xff, 0x07, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x80, 0x08, 0x12, 0x1b,
	0x0a, 0x16, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x81, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x82, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x69, 0x66, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x10, 0x83, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x86, 0x08,
	0x12, 0x1c, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x10, 0x87, 0x08, 0x12, 0x1e,
	0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x6e, 0x77, 0x72, 0x61, 0x70,
	0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x8d, 0x08, 0x12, 0x1f,
	0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x6e, 0x77, 0x72, 0x61, 0x70,
	0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x8e, 0x08, 0x12,
	0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x8f, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x55, 0x73, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x10, 0x90, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0x91, 0x08, 0x12, 0x2a, 0x0a,
	0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x5f, 0x52, 0x65, 0x76, 0x6f, 0x6c, 0x76,
	0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x44, 0x45, 0x50, 0x52,
	0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x92, 0x08, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x10, 0x99, 0x08, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x10, 0x9b, 0x08, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0x9c, 0x08, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x72, 0x6b,
	0x10, 0x9d, 0x08, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x9e, 0x08, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x43, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x10, 0x9f, 0x08, 0x12,
	0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x43, 0x72, 0x61, 0x66, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xa0, 0x08, 0x12, 0x1b, 0x0a, 0x16,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x61, 0x78, 0x78, 0x79, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x10, 0xa1, 0x08, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x53, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0xa2, 0x08, 0x12, 0x24, 0x0a, 0x1f,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10,
	0xa3, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x10, 0xa5, 0x08, 0x12, 0x1d, 0x0a, 0x18,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x10, 0xa6, 0x08, 0x12, 0x29, 0x0a, 0x24, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x10, 0xa7, 0x08, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xa8, 0x08, 0x12, 0x2e, 0x0a, 0x29,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x5f,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x10, 0xab, 0x08, 0x12, 0x25, 0x0a, 0x20,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x4e, 0x61, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0xac, 0x08, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x73, 0x10, 0xad, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x55, 0x70, 0x10, 0xaf, 0x08, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xb0, 0x08,
	0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x10, 0xb1, 0x08, 0x12,
	0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x5f, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb3, 0x08, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x65, 0x6e, 0x6e, 0x61, 0x6e,
	0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x10, 0xb4, 0x08, 0x12, 0x1d, 0x0a, 0x18, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0xb5, 0x08, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x10, 0xc8, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x67, 0x67, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x10, 0xb6, 0x08, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x67, 0x67, 0x45, 0x73, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb7, 0x08, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x10, 0xba, 0x08, 0x12, 0x32, 0x0a, 0x2d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xbb, 0x08, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x10, 0xbc, 0x08, 0x12, 0x2c,
	0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xbd, 0x08, 0x12, 0x18, 0x0a, 0x13,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x47,
	0x65, 0x6d, 0x73, 0x10, 0xbe, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x10, 0xbf, 0x08, 0x12, 0x1c,
	0x0a, 0x17, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x6f, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x10, 0xc0, 0x08, 0x12, 0x24, 0x0a, 0x1f,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x6f, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0xc1, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64,
	0x64, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0xc2, 0x08, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x65, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x10, 0xc3, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x10, 0xc4, 0x08, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc5, 0x08, 0x12, 0x20, 0x0a,
	0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x47, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc6, 0x08, 0x12,
	0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc7, 0x08, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xcf, 0x08, 0x12, 0x18, 0x0a,
	0x13, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x64, 0x64, 0x47, 0x69, 0x66, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x10, 0xd0, 0x08, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x66,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xd1, 0x08, 0x12, 0x2a, 0x0a, 0x25, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd2, 0x08, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x66,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x10, 0xd3, 0x08, 0x12,
	0x2e, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x66, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd4, 0x08, 0x12,
	0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x69, 0x66,
	0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x10, 0xd5, 0x08,
	0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x10, 0xd6, 0x08, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd7,
	0x08, 0x12, 0x30, 0x0a, 0x2b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0xd8, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x10, 0xdc, 0x0b, 0x12, 0x29, 0x0a,
	0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xdd, 0x0b, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0xde, 0x0b, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x10, 0xdf, 0x0b, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0xe5, 0x0b, 0x12, 0x31, 0x0a, 0x2c, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xea, 0x0b, 0x12, 0x29,
	0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0xc1, 0x0c, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x10, 0xc2, 0x0c, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x42, 0x61,
	0x73, 0x65, 0x10, 0xa4, 0x0d, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x44, 0x65, 0x76, 0x5f, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0xd1, 0x0f, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x44, 0x65, 0x76, 0x5f, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd2, 0x0f, 0x12,
	0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x44, 0x65, 0x76, 0x5f, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xd3, 0x0f, 0x12, 0x2c, 0x0a, 0x27,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x44, 0x65, 0x76, 0x5f, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xd4, 0x0f, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x10, 0xc8, 0x13, 0x12, 0x2a,
	0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xc9, 0x13, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0xca, 0x13, 0x12, 0x28, 0x0a, 0x23,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0xcb, 0x13, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x10, 0xce, 0x13, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xcf, 0x13, 0x12, 0x26,
	0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x10, 0xd3, 0x13, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x69, 0x72, 0x74, 0x79, 0x53, 0x44, 0x4f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x10, 0xd4, 0x13, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x69, 0x72, 0x74, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x53, 0x44, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x10, 0xd5, 0x13, 0x12, 0x22,
	0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x51, 0x4c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x10,
	0xd6, 0x13, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f,
	0x47, 0x43, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0xd9, 0x13, 0x12, 0x21, 0x0a, 0x1c,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0xda, 0x13, 0x12,
	0x1b, 0x0a, 0x16, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x41, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x10, 0xdb, 0x13, 0x12, 0x25, 0x0a, 0x20,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x57, 0x65, 0x62, 0x41,
	0x50, 0x49, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x10, 0xdc, 0x13, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x10, 0xe0, 0x13, 0x12, 0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x10, 0xe3, 0x13, 0x12, 0x33, 0x0a, 0x2e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xe4, 0x13, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x10, 0xe5, 0x13, 0x12, 0x31, 0x0a, 0x2c, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x49,
	0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0xe6, 0x13, 0x12, 0x2e, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x10, 0xe7, 0x13, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x10, 0xe8, 0x13, 0x12, 0x2a, 0x0a, 0x25, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0xe9, 0x13, 0x12, 0x32, 0x0a, 0x2d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xea, 0x13, 0x12, 0x1c, 0x0a, 0x17, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xeb, 0x13, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xec, 0x13, 0x12, 0x25, 0x0a, 0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0xed, 0x13, 0x12, 0x2d,
	0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xee, 0x13, 0x12, 0x25, 0x0a,
	0x20, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x10, 0xef, 0x13, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0xf0, 0x13, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54,
	0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x43, 0x42, 0x61, 0x6e, 0x67,
	0x4e, 0x6f, 0x10, 0xf1, 0x13, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x43, 0x42, 0x61,
	0x6e, 0x67, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xf2, 0x13, 0x12,
	0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43,
	0x61, 0x6e, 0x55, 0x73, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x10, 0xf3, 0x13, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x53,
	0x51, 0x4c, 0x41, 0x64, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x10, 0xf4, 0x13, 0x12, 0x1f, 0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x54, 0x6f, 0x47, 0x43, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x4f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x10, 0xf5, 0x13, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x66, 0x66, 0x10, 0xf6, 0x13, 0x12, 0x2e,
	0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xf7, 0x13, 0x12, 0x28,
	0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xf8, 0x13, 0x12, 0x30, 0x0a, 0x2b, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xf9, 0x13, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x10, 0xfa, 0x13, 0x12, 0x2b, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x61, 0x64,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0xfb,
	0x13, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0xfd, 0x13, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xfe, 0x13, 0x12, 0x2e, 0x0a, 0x29, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xff, 0x13, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x80, 0x14, 0x12, 0x18, 0x0a, 0x13, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x65, 0x43, 0x72, 0x61,
	0x66, 0x74, 0x10, 0x81, 0x14, 0x12, 0x17, 0x0a, 0x12, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x82, 0x14, 0x12, 0x1f,
	0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x83, 0x14, 0x12,
	0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x49,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x84, 0x14, 0x12, 0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x57, 0x72, 0x61,
	0x70, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x10,
	0x85, 0x14, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x57, 0x72, 0x61, 0x70, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0x86, 0x14, 0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x87, 0x14, 0x12, 0x2e,
	0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x88, 0x14, 0x12, 0x1f,
	0x0a, 0x1a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x45, 0x71, 0x75, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0x89, 0x14, 0x12,
	0x27, 0x0a, 0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x45, 0x71, 0x75, 0x69, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x8a, 0x14, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x10, 0x8b, 0x14, 0x12, 0x2c,
	0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x8c, 0x14, 0x12, 0x2d, 0x0a, 0x28,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x10, 0x8d, 0x14, 0x12, 0x20, 0x0a, 0x1b, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x61, 0x74, 0x65, 0x10, 0x8e, 0x14, 0x12, 0x28, 0x0a,
	0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x8f, 0x14, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x6e, 0x70, 0x61, 0x63,
	0x6b, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x10, 0x90, 0x14, 0x12, 0x21, 0x0a, 0x1c, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x10, 0x91, 0x14, 0x12, 0x29, 0x0a,
	0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x92, 0x14, 0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x53, 0x51, 0x4c, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x10, 0x94, 0x14,
	0x12, 0x26, 0x0a, 0x21, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x95, 0x14, 0x12, 0x2e, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x96, 0x14, 0x12, 0x23, 0x0a, 0x1e, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x44, 0x65, 0x76, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0x97, 0x14, 0x12, 0x27, 0x0a,
	0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x10, 0x98, 0x14, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x99, 0x14, 0x12, 0x2d, 0x0a, 0x28, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x9a, 0x14, 0x12, 0x35, 0x0a, 0x30, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x9b, 0x14, 0x12, 0x27, 0x0a,
	0x22, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x10, 0x9c, 0x14, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x9d, 0x14, 0x12, 0x1e, 0x0a, 0x19, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x10, 0x9e, 0x14, 0x12, 0x1d, 0x0a, 0x18, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x67, 0x65, 0x73, 0x10, 0x9f, 0x14, 0x12, 0x20, 0x0a, 0x1b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x65,
	0x73, 0x74, 0x4d, 0x73, 0x67, 0x10, 0xa0, 0x14, 0x12, 0x2c, 0x0a, 0x27, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x10, 0xa1, 0x14, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x55, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xa2, 0x14, 0x12, 0x27, 0x0a, 0x22,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x10, 0xa3, 0x14, 0x12, 0x2f, 0x0a, 0x2a, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x10, 0xa4, 0x14, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67,
	0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x75, 0x62, 0x10, 0xa6, 0x14,
	0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x10, 0xa7, 0x14, 0x12, 0x24, 0x0a, 0x1f, 0x6b, 0x5f,
	0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x10, 0xa8, 0x14,
	0x12, 0x29, 0x0a, 0x24, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x10, 0xa9, 0x14, 0x12, 0x28, 0x0a, 0x23, 0x6b,
	0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72,
	0x61, 0x74, 0x65, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x10, 0xaa, 0x14, 0x12, 0x30, 0x0a, 0x2b, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x72, 0x61, 0x74, 0x65, 0x45, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xab, 0x14, 0x12, 0x28, 0x0a, 0x23, 0x6b, 0x5f, 0x45, 0x4d, 0x73,
	0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0xac,
	0x14, 0x12, 0x19, 0x0a, 0x14, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x69, 0x6e, 0x67, 0x10, 0xad, 0x14, 0x12, 0x26, 0x0a, 0x21,
	0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x75, 0x78, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x10, 0xae, 0x14, 0x12, 0x2e, 0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x75, 0x78, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0xaf, 0x14, 0x12, 0x22, 0x0a, 0x1d, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x47, 0x43,
	0x54, 0x6f, 0x47, 0x43, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0xb0, 0x14, 0x12, 0x33, 0x0a, 0x2e, 0x6b, 0x5f, 0x45, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x10, 0xb1, 0x14, 0x12, 0x3b, 0x0a,
	0x36, 0x6b, 0x5f, 0x45, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xb2, 0x14, 0x2a, 0xf3, 0x02, 0x0a, 0x1f, 0x45,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x2e,
	0x0a, 0x2a, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x36,
	0x0a, 0x32, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x10, 0x01, 0x12, 0x3f, 0x0a, 0x3b, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x50, 0x75, 0x72, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x02, 0x12, 0x3d, 0x0a, 0x39, 0x6b, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x43, 0x6f, 0x75, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x46, 0x69, 0x6e, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x10, 0x03, 0x12, 0x35, 0x0a, 0x31, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d,
	0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x4e, 0x6f, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x10, 0x04, 0x12, 0x31, 0x0a,
	0x2d, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x05,
	0x2a, 0xb0, 0x02, 0x0a, 0x1d, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x28, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67,
	0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x3c, 0x0a, 0x38, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x49, 0x6e, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x01, 0x12, 0x3a,
	0x0a, 0x36, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x43, 0x6f, 0x75, 0x6c, 0x64, 0x4e, 0x6f, 0x74,
	0x46, 0x69, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x6b, 0x5f,
	0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x53, 0x4f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x10, 0x03, 0x12,
	0x32, 0x0a, 0x2e, 0x6b, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x75, 0x72, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x10, 0x04, 0x2a, 0xb9, 0x0a, 0x0a, 0x1b, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x01, 0x12, 0x36, 0x0a, 0x32, 0x6b,
	0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x56, 0x41, 0x43,
	0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x56, 0x41, 0x43, 0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x10, 0x03, 0x12, 0x38, 0x0a, 0x34, 0x6b, 0x5f, 0x45, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x04, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x12, 0x2d,
	0x0a, 0x29, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x4e, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x10, 0x06, 0x12, 0x28, 0x0a,
	0x24, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x07, 0x12, 0x29, 0x0a, 0x25, 0x6b, 0x5f, 0x45, 0x47, 0x43,
	0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x6f, 0x6f, 0x53, 0x6f, 0x6f, 0x6e,
	0x10, 0x08, 0x12, 0x30, 0x0a, 0x2c, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x54, 0x6f, 0x6f, 0x53, 0x6f, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x10, 0x09, 0x12, 0x38, 0x0a, 0x34, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x0a, 0x12, 0x35,
	0x0a, 0x31, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x10, 0x0b, 0x12, 0x43, 0x0a, 0x3f, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x72, 0x65, 0x65, 0x5f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x44, 0x45,
	0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x3a, 0x0a, 0x36, 0x6b, 0x5f,
	0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x5f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x10, 0x0d, 0x12, 0x35, 0x0a, 0x31, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x0e, 0x12, 0x30, 0x0a,
	0x2c, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10, 0x0f, 0x12,
	0x33, 0x0a, 0x2f, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x4e, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x10, 0x10, 0x12, 0x30, 0x0a, 0x2c, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4e, 0x65, 0x65, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x47,
	0x75, 0x61, 0x72, 0x64, 0x10, 0x11, 0x12, 0x34, 0x0a, 0x30, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x47, 0x75, 0x61,
	0x72, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x12, 0x12, 0x31, 0x0a, 0x2d,
	0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x68,
	0x65, 0x79, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x10, 0x13, 0x12,
	0x37, 0x0a, 0x33, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x14, 0x12, 0x32, 0x0a, 0x2e, 0x6b, 0x5f, 0x45, 0x47,
	0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x4e, 0x65, 0x77, 0x5f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x15, 0x12, 0x35, 0x0a, 0x31,
	0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x65,
	0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x10, 0x16, 0x12, 0x31, 0x0a, 0x2d, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d, 0x73, 0x67, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x6f, 0x6f, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x10, 0x17, 0x12, 0x37, 0x0a, 0x33, 0x6b, 0x5f, 0x45, 0x47, 0x43, 0x4d,
	0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x46, 0x75,
	0x6e, 0x64, 0x73, 0x4e, 0x6f, 0x74, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x10, 0x18, 0x42,
	0x05, 0x48, 0x01, 0x80, 0x01, 0x00,
}

var (
	file_econ_gcmessages_proto_rawDescOnce sync.Once
	file_econ_gcmessages_proto_rawDescData = file_econ_gcmessages_proto_rawDesc
)

func file_econ_gcmessages_proto_rawDescGZIP() []byte {
	file_econ_gcmessages_proto_rawDescOnce.Do(func() {
		file_econ_gcmessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_econ_gcmessages_proto_rawDescData)
	})
	return file_econ_gcmessages_proto_rawDescData
}

var file_econ_gcmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 14)
var file_econ_gcmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 137)
var file_econ_gcmessages_proto_goTypes = []interface{}{
	(EGCItemMsg)(0),                                                       // 0: dota.EGCItemMsg
	(EItemPurgatoryResponse_Finalize)(0),                                  // 1: dota.EItemPurgatoryResponse_Finalize
	(EItemPurgatoryResponse_Refund)(0),                                    // 2: dota.EItemPurgatoryResponse_Refund
	(EGCMsgInitiateTradeResponse)(0),                                      // 3: dota.EGCMsgInitiateTradeResponse
	(CMsgRequestCrateItemsResponse_EResult)(0),                            // 4: dota.CMsgRequestCrateItemsResponse.EResult
	(CMsgRequestCrateEscalationLevelResponse_EResult)(0),                  // 5: dota.CMsgRequestCrateEscalationLevelResponse.EResult
	(CMsgRedeemCodeResponse_EResultCode)(0),                               // 6: dota.CMsgRedeemCodeResponse.EResultCode
	(CMsgClientToGCUnpackBundleResponse_EUnpackBundle)(0),                 // 7: dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle
	(CMsgClientToGCSetItemStyleResponse_ESetStyle)(0),                     // 8: dota.CMsgClientToGCSetItemStyleResponse.ESetStyle
	(CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle)(0),               // 9: dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle
	(CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute)(0),   // 10: dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute
	(CMsgClientToGCNameItemResponse_ENameItem)(0),                         // 11: dota.CMsgClientToGCNameItemResponse.ENameItem
	(CMsgClientToGCCreateStaticRecipeResponse_EResponse)(0),               // 12: dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse
	(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse_EResponse)(0),   // 13: dota.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.EResponse
	(*CMsgApplyAutograph)(nil),                                            // 14: dota.CMsgApplyAutograph
	(*CMsgAdjustItemEquippedState)(nil),                                   // 15: dota.CMsgAdjustItemEquippedState
	(*CMsgEconPlayerStrangeCountAdjustment)(nil),                          // 16: dota.CMsgEconPlayerStrangeCountAdjustment
	(*CMsgRequestItemPurgatory_FinalizePurchase)(nil),                     // 17: dota.CMsgRequestItemPurgatory_FinalizePurchase
	(*CMsgRequestItemPurgatory_FinalizePurchaseResponse)(nil),             // 18: dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse
	(*CMsgRequestItemPurgatory_RefundPurchase)(nil),                       // 19: dota.CMsgRequestItemPurgatory_RefundPurchase
	(*CMsgRequestItemPurgatory_RefundPurchaseResponse)(nil),               // 20: dota.CMsgRequestItemPurgatory_RefundPurchaseResponse
	(*CMsgCraftingResponse)(nil),                                          // 21: dota.CMsgCraftingResponse
	(*CMsgGCRequestStoreSalesData)(nil),                                   // 22: dota.CMsgGCRequestStoreSalesData
	(*CMsgGCRequestStoreSalesDataResponse)(nil),                           // 23: dota.CMsgGCRequestStoreSalesDataResponse
	(*CMsgGCRequestStoreSalesDataUpToDateResponse)(nil),                   // 24: dota.CMsgGCRequestStoreSalesDataUpToDateResponse
	(*CMsgGCToGCPingRequest)(nil),                                         // 25: dota.CMsgGCToGCPingRequest
	(*CMsgGCToGCPingResponse)(nil),                                        // 26: dota.CMsgGCToGCPingResponse
	(*CMsgGCToGCGetUserSessionServer)(nil),                                // 27: dota.CMsgGCToGCGetUserSessionServer
	(*CMsgGCToGCGetUserSessionServerResponse)(nil),                        // 28: dota.CMsgGCToGCGetUserSessionServerResponse
	(*CMsgGCToGCGetUserServerMembers)(nil),                                // 29: dota.CMsgGCToGCGetUserServerMembers
	(*CMsgGCToGCGetUserServerMembersResponse)(nil),                        // 30: dota.CMsgGCToGCGetUserServerMembersResponse
	(*CMsgLookupMultipleAccountNames)(nil),                                // 31: dota.CMsgLookupMultipleAccountNames
	(*CMsgLookupMultipleAccountNamesResponse)(nil),                        // 32: dota.CMsgLookupMultipleAccountNamesResponse
	(*CMsgRequestCrateItems)(nil),                                         // 33: dota.CMsgRequestCrateItems
	(*CMsgRequestCrateItemsResponse)(nil),                                 // 34: dota.CMsgRequestCrateItemsResponse
	(*CMsgRequestCrateEscalationLevel)(nil),                               // 35: dota.CMsgRequestCrateEscalationLevel
	(*CMsgRequestCrateEscalationLevelResponse)(nil),                       // 36: dota.CMsgRequestCrateEscalationLevelResponse
	(*CMsgGCToGCCanUseDropRateBonus)(nil),                                 // 37: dota.CMsgGCToGCCanUseDropRateBonus
	(*CMsgSQLAddDropRateBonus)(nil),                                       // 38: dota.CMsgSQLAddDropRateBonus
	(*CMsgSQLUpgradeBattleBooster)(nil),                                   // 39: dota.CMsgSQLUpgradeBattleBooster
	(*CMsgGCToGCRefreshSOCache)(nil),                                      // 40: dota.CMsgGCToGCRefreshSOCache
	(*CMsgGCToGCCheckAccountTradeStatus)(nil),                             // 41: dota.CMsgGCToGCCheckAccountTradeStatus
	(*CMsgGCToGCCheckAccountTradeStatusResponse)(nil),                     // 42: dota.CMsgGCToGCCheckAccountTradeStatusResponse
	(*CMsgGCToGCAddSubscriptionTime)(nil),                                 // 43: dota.CMsgGCToGCAddSubscriptionTime
	(*CMsgGCToGCGrantAccountRolledItems)(nil),                             // 44: dota.CMsgGCToGCGrantAccountRolledItems
	(*CMsgGCToGCGrantSelfMadeItemToAccount)(nil),                          // 45: dota.CMsgGCToGCGrantSelfMadeItemToAccount
	(*CMsgUseItem)(nil),                                                   // 46: dota.CMsgUseItem
	(*CMsgServerUseItem)(nil),                                             // 47: dota.CMsgServerUseItem
	(*CMsgUseMultipleItems)(nil),                                          // 48: dota.CMsgUseMultipleItems
	(*CMsgGCPartnerBalanceRequest)(nil),                                   // 49: dota.CMsgGCPartnerBalanceRequest
	(*CMsgGCPartnerBalanceResponse)(nil),                                  // 50: dota.CMsgGCPartnerBalanceResponse
	(*CGCStoreRechargeRedirect_LineItem)(nil),                             // 51: dota.CGCStoreRechargeRedirect_LineItem
	(*CMsgGCPartnerRechargeRedirectURLRequest)(nil),                       // 52: dota.CMsgGCPartnerRechargeRedirectURLRequest
	(*CMsgGCPartnerRechargeRedirectURLResponse)(nil),                      // 53: dota.CMsgGCPartnerRechargeRedirectURLResponse
	(*CMsgGCEconSQLWorkItemEmbeddedRollbackData)(nil),                     // 54: dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData
	(*CMsgCraftStatue)(nil),                                               // 55: dota.CMsgCraftStatue
	(*CMsgRedeemCode)(nil),                                                // 56: dota.CMsgRedeemCode
	(*CMsgRedeemCodeResponse)(nil),                                        // 57: dota.CMsgRedeemCodeResponse
	(*CMsgDevNewItemRequest)(nil),                                         // 58: dota.CMsgDevNewItemRequest
	(*CMsgDevNewItemRequestResponse)(nil),                                 // 59: dota.CMsgDevNewItemRequestResponse
	(*CMsgDevUnlockAllItemStyles)(nil),                                    // 60: dota.CMsgDevUnlockAllItemStyles
	(*CMsgDevUnlockAllItemStylesResponse)(nil),                            // 61: dota.CMsgDevUnlockAllItemStylesResponse
	(*CMsgGCGetAccountSubscriptionItem)(nil),                              // 62: dota.CMsgGCGetAccountSubscriptionItem
	(*CMsgGCGetAccountSubscriptionItemResponse)(nil),                      // 63: dota.CMsgGCGetAccountSubscriptionItemResponse
	(*CMsgGCAddGiftItem)(nil),                                             // 64: dota.CMsgGCAddGiftItem
	(*CMsgClientToGCWrapAndDeliverGift)(nil),                              // 65: dota.CMsgClientToGCWrapAndDeliverGift
	(*CMsgClientToGCWrapAndDeliverGiftResponse)(nil),                      // 66: dota.CMsgClientToGCWrapAndDeliverGiftResponse
	(*CMsgClientToGCUnwrapGift)(nil),                                      // 67: dota.CMsgClientToGCUnwrapGift
	(*CMsgClientToGCGetGiftPermissions)(nil),                              // 68: dota.CMsgClientToGCGetGiftPermissions
	(*CMsgClientToGCGetGiftPermissionsResponse)(nil),                      // 69: dota.CMsgClientToGCGetGiftPermissionsResponse
	(*CMsgClientToGCUnpackBundle)(nil),                                    // 70: dota.CMsgClientToGCUnpackBundle
	(*CMsgClientToGCUnpackBundleResponse)(nil),                            // 71: dota.CMsgClientToGCUnpackBundleResponse
	(*CMsgGCToClientStoreTransactionCompleted)(nil),                       // 72: dota.CMsgGCToClientStoreTransactionCompleted
	(*CMsgClientToGCEquipItems)(nil),                                      // 73: dota.CMsgClientToGCEquipItems
	(*CMsgClientToGCEquipItemsResponse)(nil),                              // 74: dota.CMsgClientToGCEquipItemsResponse
	(*CMsgClientToGCSetItemStyle)(nil),                                    // 75: dota.CMsgClientToGCSetItemStyle
	(*CMsgClientToGCSetItemStyleResponse)(nil),                            // 76: dota.CMsgClientToGCSetItemStyleResponse
	(*CMsgClientToGCUnlockItemStyle)(nil),                                 // 77: dota.CMsgClientToGCUnlockItemStyle
	(*CMsgClientToGCUnlockItemStyleResponse)(nil),                         // 78: dota.CMsgClientToGCUnlockItemStyleResponse
	(*CMsgClientToGCSetItemInventoryCategory)(nil),                        // 79: dota.CMsgClientToGCSetItemInventoryCategory
	(*CMsgClientToGCUnlockCrate)(nil),                                     // 80: dota.CMsgClientToGCUnlockCrate
	(*CMsgClientToGCUnlockCrateResponse)(nil),                             // 81: dota.CMsgClientToGCUnlockCrateResponse
	(*CMsgClientToGCRemoveItemAttribute)(nil),                             // 82: dota.CMsgClientToGCRemoveItemAttribute
	(*CMsgClientToGCRemoveItemAttributeResponse)(nil),                     // 83: dota.CMsgClientToGCRemoveItemAttributeResponse
	(*CMsgClientToGCNameItem)(nil),                                        // 84: dota.CMsgClientToGCNameItem
	(*CMsgClientToGCNameItemResponse)(nil),                                // 85: dota.CMsgClientToGCNameItemResponse
	(*CMsgGCSetItemPosition)(nil),                                         // 86: dota.CMsgGCSetItemPosition
	(*CAttribute_ItemDynamicRecipeComponent)(nil),                         // 87: dota.CAttribute_ItemDynamicRecipeComponent
	(*CProtoItemSocket)(nil),                                              // 88: dota.CProtoItemSocket
	(*CProtoItemSocket_Empty)(nil),                                        // 89: dota.CProtoItemSocket_Empty
	(*CProtoItemSocket_Effect)(nil),                                       // 90: dota.CProtoItemSocket_Effect
	(*CProtoItemSocket_Color)(nil),                                        // 91: dota.CProtoItemSocket_Color
	(*CProtoItemSocket_Strange)(nil),                                      // 92: dota.CProtoItemSocket_Strange
	(*CProtoItemSocket_Spectator)(nil),                                    // 93: dota.CProtoItemSocket_Spectator
	(*CProtoItemSocket_AssetModifier)(nil),                                // 94: dota.CProtoItemSocket_AssetModifier
	(*CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)(nil),   // 95: dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY
	(*CProtoItemSocket_Autograph)(nil),                                    // 96: dota.CProtoItemSocket_Autograph
	(*CProtoItemSocket_StaticVisuals)(nil),                                // 97: dota.CProtoItemSocket_StaticVisuals
	(*CAttribute_String)(nil),                                             // 98: dota.CAttribute_String
	(*CWorkshop_GetItemDailyRevenue_Request)(nil),                         // 99: dota.CWorkshop_GetItemDailyRevenue_Request
	(*CWorkshop_GetItemDailyRevenue_Response)(nil),                        // 100: dota.CWorkshop_GetItemDailyRevenue_Response
	(*CWorkshop_GetPackageDailyRevenue_Request)(nil),                      // 101: dota.CWorkshop_GetPackageDailyRevenue_Request
	(*CWorkshop_GetPackageDailyRevenue_Response)(nil),                     // 102: dota.CWorkshop_GetPackageDailyRevenue_Response
	(*CMsgSQLGCToGCGrantBackpackSlots)(nil),                               // 103: dota.CMsgSQLGCToGCGrantBackpackSlots
	(*CMsgClientToGCLookupAccountName)(nil),                               // 104: dota.CMsgClientToGCLookupAccountName
	(*CMsgClientToGCLookupAccountNameResponse)(nil),                       // 105: dota.CMsgClientToGCLookupAccountNameResponse
	(*CMsgClientToGCCreateStaticRecipe)(nil),                              // 106: dota.CMsgClientToGCCreateStaticRecipe
	(*CMsgClientToGCCreateStaticRecipeResponse)(nil),                      // 107: dota.CMsgClientToGCCreateStaticRecipeResponse
	(*CMsgProcessTransactionOrder)(nil),                                   // 108: dota.CMsgProcessTransactionOrder
	(*CMsgGCToGCStoreProcessCDKeyTransaction)(nil),                        // 109: dota.CMsgGCToGCStoreProcessCDKeyTransaction
	(*CMsgGCToGCStoreProcessCDKeyTransactionResponse)(nil),                // 110: dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse
	(*CMsgGCToGCStoreProcessSettlement)(nil),                              // 111: dota.CMsgGCToGCStoreProcessSettlement
	(*CMsgGCToGCStoreProcessSettlementResponse)(nil),                      // 112: dota.CMsgGCToGCStoreProcessSettlementResponse
	(*CMsgGCToGCBroadcastConsoleCommand)(nil),                             // 113: dota.CMsgGCToGCBroadcastConsoleCommand
	(*CMsgGCToGCConsoleOutput)(nil),                                       // 114: dota.CMsgGCToGCConsoleOutput
	(*CMsgItemAges)(nil),                                                  // 115: dota.CMsgItemAges
	(*CMsgGCToGCInternalTestMsg)(nil),                                     // 116: dota.CMsgGCToGCInternalTestMsg
	(*CMsgGCToGCClientServerVersionsUpdated)(nil),                         // 117: dota.CMsgGCToGCClientServerVersionsUpdated
	(*CMsgGCToGCBroadcastMessageFromSub)(nil),                             // 118: dota.CMsgGCToGCBroadcastMessageFromSub
	(*CMsgGCToClientCurrencyPricePoints)(nil),                             // 119: dota.CMsgGCToClientCurrencyPricePoints
	(*CMsgBannedWordList)(nil),                                            // 120: dota.CMsgBannedWordList
	(*CEcon_FlushInventoryCache_Request)(nil),                             // 121: dota.CEcon_FlushInventoryCache_Request
	(*CEcon_FlushInventoryCache_Response)(nil),                            // 122: dota.CEcon_FlushInventoryCache_Response
	(*CMsgGCToGCFlushSteamInventoryCache)(nil),                            // 123: dota.CMsgGCToGCFlushSteamInventoryCache
	(*CMsgGCToGCUpdateSubscriptionItems)(nil),                             // 124: dota.CMsgGCToGCUpdateSubscriptionItems
	(*CMsgGCToGCSelfPing)(nil),                                            // 125: dota.CMsgGCToGCSelfPing
	(*CMsgGCToGCGetInfuxIntervalStats)(nil),                               // 126: dota.CMsgGCToGCGetInfuxIntervalStats
	(*CMsgGCToGCGetInfuxIntervalStatsResponse)(nil),                       // 127: dota.CMsgGCToGCGetInfuxIntervalStatsResponse
	(*CMsgGCToGCPurchaseSucceeded)(nil),                                   // 128: dota.CMsgGCToGCPurchaseSucceeded
	(*CExtraMsgBlock)(nil),                                                // 129: dota.CExtraMsgBlock
	(*CMsgClientToGCGetLimitedItemPurchaseQuantity)(nil),                  // 130: dota.CMsgClientToGCGetLimitedItemPurchaseQuantity
	(*CMsgClientToGCGetLimitedItemPurchaseQuantityResponse)(nil),          // 131: dota.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse
	(*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment)(nil),  // 132: dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment
	(*CMsgGCRequestStoreSalesDataResponse_Price)(nil),                     // 133: dota.CMsgGCRequestStoreSalesDataResponse.Price
	(*CMsgLookupMultipleAccountNamesResponse_Account)(nil),                // 134: dota.CMsgLookupMultipleAccountNamesResponse.Account
	(*CMsgGCToGCGrantAccountRolledItems_Item)(nil),                        // 135: dota.CMsgGCToGCGrantAccountRolledItems.Item
	(*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute)(nil),       // 136: dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute
	(*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry)(nil),   // 137: dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry
	(*CMsgClientToGCGetGiftPermissionsResponse_FriendPermission)(nil),     // 138: dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission
	(*CMsgClientToGCUnlockCrateResponse_Item)(nil),                        // 139: dota.CMsgClientToGCUnlockCrateResponse.Item
	(*CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue)(nil),    // 140: dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue
	(*CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue)(nil), // 141: dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue
	(*CMsgClientToGCCreateStaticRecipe_Item)(nil),                         // 142: dota.CMsgClientToGCCreateStaticRecipe.Item
	(*CMsgClientToGCCreateStaticRecipeResponse_OutputItem)(nil),           // 143: dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem
	(*CMsgClientToGCCreateStaticRecipeResponse_InputError)(nil),           // 144: dota.CMsgClientToGCCreateStaticRecipeResponse.InputError
	(*CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput)(nil),     // 145: dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput
	(*CMsgProcessTransactionOrder_Item)(nil),                              // 146: dota.CMsgProcessTransactionOrder.Item
	(*CMsgGCToGCConsoleOutput_OutputLine)(nil),                            // 147: dota.CMsgGCToGCConsoleOutput.OutputLine
	(*CMsgItemAges_MaxItemIDTimestamp)(nil),                               // 148: dota.CMsgItemAges.MaxItemIDTimestamp
	(*CMsgGCToClientCurrencyPricePoints_Currency)(nil),                    // 149: dota.CMsgGCToClientCurrencyPricePoints.Currency
	(*CMsgGCToGCFlushSteamInventoryCache_Key)(nil),                        // 150: dota.CMsgGCToGCFlushSteamInventoryCache.Key
	(EGCPartnerRequestResponse)(0),                                        // 151: dota.EGCPartnerRequestResponse
	(EGCMsgResponse)(0),                                                   // 152: dota.EGCMsgResponse
}
var file_econ_gcmessages_proto_depIdxs = []int32{
	132, // 0: dota.CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments:type_name -> dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment
	133, // 1: dota.CMsgGCRequestStoreSalesDataResponse.sale_price:type_name -> dota.CMsgGCRequestStoreSalesDataResponse.Price
	134, // 2: dota.CMsgLookupMultipleAccountNamesResponse.accounts:type_name -> dota.CMsgLookupMultipleAccountNamesResponse.Account
	135, // 3: dota.CMsgGCToGCGrantAccountRolledItems.items:type_name -> dota.CMsgGCToGCGrantAccountRolledItems.Item
	46,  // 4: dota.CMsgServerUseItem.use_item_msg:type_name -> dota.CMsgUseItem
	151, // 5: dota.CMsgGCPartnerBalanceResponse.result:type_name -> dota.EGCPartnerRequestResponse
	51,  // 6: dota.CMsgGCPartnerRechargeRedirectURLRequest.line_items:type_name -> dota.CGCStoreRechargeRedirect_LineItem
	151, // 7: dota.CMsgGCPartnerRechargeRedirectURLResponse.result:type_name -> dota.EGCPartnerRequestResponse
	152, // 8: dota.CMsgClientToGCWrapAndDeliverGiftResponse.response:type_name -> dota.EGCMsgResponse
	3,   // 9: dota.CMsgClientToGCWrapAndDeliverGiftResponse.trade_restriction:type_name -> dota.EGCMsgInitiateTradeResponse
	3,   // 10: dota.CMsgClientToGCGetGiftPermissionsResponse.sender_permission:type_name -> dota.EGCMsgInitiateTradeResponse
	138, // 11: dota.CMsgClientToGCGetGiftPermissionsResponse.friend_permissions:type_name -> dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission
	7,   // 12: dota.CMsgClientToGCUnpackBundleResponse.response:type_name -> dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle
	15,  // 13: dota.CMsgClientToGCEquipItems.equips:type_name -> dota.CMsgAdjustItemEquippedState
	8,   // 14: dota.CMsgClientToGCSetItemStyleResponse.response:type_name -> dota.CMsgClientToGCSetItemStyleResponse.ESetStyle
	9,   // 15: dota.CMsgClientToGCUnlockItemStyleResponse.response:type_name -> dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle
	152, // 16: dota.CMsgClientToGCUnlockCrateResponse.result:type_name -> dota.EGCMsgResponse
	139, // 17: dota.CMsgClientToGCUnlockCrateResponse.granted_items:type_name -> dota.CMsgClientToGCUnlockCrateResponse.Item
	10,  // 18: dota.CMsgClientToGCRemoveItemAttributeResponse.response:type_name -> dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute
	11,  // 19: dota.CMsgClientToGCNameItemResponse.response:type_name -> dota.CMsgClientToGCNameItemResponse.ENameItem
	88,  // 20: dota.CProtoItemSocket_Empty.socket:type_name -> dota.CProtoItemSocket
	88,  // 21: dota.CProtoItemSocket_Effect.socket:type_name -> dota.CProtoItemSocket
	88,  // 22: dota.CProtoItemSocket_Color.socket:type_name -> dota.CProtoItemSocket
	88,  // 23: dota.CProtoItemSocket_Strange.socket:type_name -> dota.CProtoItemSocket
	88,  // 24: dota.CProtoItemSocket_Spectator.socket:type_name -> dota.CProtoItemSocket
	88,  // 25: dota.CProtoItemSocket_AssetModifier.socket:type_name -> dota.CProtoItemSocket
	88,  // 26: dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket:type_name -> dota.CProtoItemSocket
	88,  // 27: dota.CProtoItemSocket_Autograph.socket:type_name -> dota.CProtoItemSocket
	88,  // 28: dota.CProtoItemSocket_StaticVisuals.socket:type_name -> dota.CProtoItemSocket
	140, // 29: dota.CWorkshop_GetItemDailyRevenue_Response.country_revenue:type_name -> dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue
	141, // 30: dota.CWorkshop_GetPackageDailyRevenue_Response.country_revenue:type_name -> dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue
	142, // 31: dota.CMsgClientToGCCreateStaticRecipe.items:type_name -> dota.CMsgClientToGCCreateStaticRecipe.Item
	12,  // 32: dota.CMsgClientToGCCreateStaticRecipeResponse.response:type_name -> dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse
	143, // 33: dota.CMsgClientToGCCreateStaticRecipeResponse.output_items:type_name -> dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem
	144, // 34: dota.CMsgClientToGCCreateStaticRecipeResponse.input_errors:type_name -> dota.CMsgClientToGCCreateStaticRecipeResponse.InputError
	145, // 35: dota.CMsgClientToGCCreateStaticRecipeResponse.additional_outputs:type_name -> dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput
	146, // 36: dota.CMsgProcessTransactionOrder.items:type_name -> dota.CMsgProcessTransactionOrder.Item
	108, // 37: dota.CMsgGCToGCStoreProcessCDKeyTransaction.order:type_name -> dota.CMsgProcessTransactionOrder
	108, // 38: dota.CMsgGCToGCStoreProcessSettlement.order:type_name -> dota.CMsgProcessTransactionOrder
	147, // 39: dota.CMsgGCToGCConsoleOutput.msgs:type_name -> dota.CMsgGCToGCConsoleOutput.OutputLine
	148, // 40: dota.CMsgItemAges.max_item_id_timestamps:type_name -> dota.CMsgItemAges.MaxItemIDTimestamp
	149, // 41: dota.CMsgGCToClientCurrencyPricePoints.currencies:type_name -> dota.CMsgGCToClientCurrencyPricePoints.Currency
	150, // 42: dota.CMsgGCToGCFlushSteamInventoryCache.keys:type_name -> dota.CMsgGCToGCFlushSteamInventoryCache.Key
	13,  // 43: dota.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.result:type_name -> dota.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.EResponse
	136, // 44: dota.CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes:type_name -> dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute
	137, // 45: dota.CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries:type_name -> dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry
	3,   // 46: dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.permission:type_name -> dota.EGCMsgInitiateTradeResponse
	12,  // 47: dota.CMsgClientToGCCreateStaticRecipeResponse.InputError.error:type_name -> dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse
	48,  // [48:48] is the sub-list for method output_type
	48,  // [48:48] is the sub-list for method input_type
	48,  // [48:48] is the sub-list for extension type_name
	48,  // [48:48] is the sub-list for extension extendee
	0,   // [0:48] is the sub-list for field type_name
}

func init() { file_econ_gcmessages_proto_init() }
func file_econ_gcmessages_proto_init() {
	if File_econ_gcmessages_proto != nil {
		return
	}
	file_steammessages_proto_init()
	file_econ_shared_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_econ_gcmessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgApplyAutograph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAdjustItemEquippedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgEconPlayerStrangeCountAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestItemPurgatory_FinalizePurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestItemPurgatory_FinalizePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestItemPurgatory_RefundPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestItemPurgatory_RefundPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCraftingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestStoreSalesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestStoreSalesDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestStoreSalesDataUpToDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCPingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGetUserSessionServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGetUserSessionServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGetUserServerMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGetUserServerMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLookupMultipleAccountNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLookupMultipleAccountNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestCrateItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestCrateItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestCrateEscalationLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestCrateEscalationLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCCanUseDropRateBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSQLAddDropRateBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSQLUpgradeBattleBooster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCRefreshSOCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCCheckAccountTradeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCCheckAccountTradeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCAddSubscriptionTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGrantAccountRolledItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGrantSelfMadeItemToAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgUseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgServerUseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgUseMultipleItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCPartnerBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCPartnerBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGCStoreRechargeRedirect_LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCPartnerRechargeRedirectURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCPartnerRechargeRedirectURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCEconSQLWorkItemEmbeddedRollbackData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgCraftStatue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRedeemCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRedeemCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDevNewItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDevNewItemRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDevUnlockAllItemStyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDevUnlockAllItemStylesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCGetAccountSubscriptionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCGetAccountSubscriptionItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCAddGiftItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCWrapAndDeliverGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCWrapAndDeliverGiftResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnwrapGift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCGetGiftPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCGetGiftPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnpackBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnpackBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientStoreTransactionCompleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCEquipItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCEquipItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCSetItemStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCSetItemStyleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnlockItemStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnlockItemStyleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCSetItemInventoryCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnlockCrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnlockCrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCRemoveItemAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCRemoveItemAttributeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCNameItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCNameItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCSetItemPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAttribute_ItemDynamicRecipeComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_Effect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_Strange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_Spectator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_AssetModifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_Autograph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CProtoItemSocket_StaticVisuals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAttribute_String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetItemDailyRevenue_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetItemDailyRevenue_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetPackageDailyRevenue_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetPackageDailyRevenue_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSQLGCToGCGrantBackpackSlots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCLookupAccountName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCLookupAccountNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCreateStaticRecipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCreateStaticRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgProcessTransactionOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCStoreProcessCDKeyTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCStoreProcessCDKeyTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCStoreProcessSettlement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCStoreProcessSettlementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCBroadcastConsoleCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCConsoleOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgItemAges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCInternalTestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCClientServerVersionsUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCBroadcastMessageFromSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientCurrencyPricePoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBannedWordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEcon_FlushInventoryCache_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEcon_FlushInventoryCache_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCFlushSteamInventoryCache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCUpdateSubscriptionItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCSelfPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGetInfuxIntervalStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGetInfuxIntervalStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCPurchaseSucceeded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CExtraMsgBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCGetLimitedItemPurchaseQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCGetLimitedItemPurchaseQuantityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCRequestStoreSalesDataResponse_Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLookupMultipleAccountNamesResponse_Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGrantAccountRolledItems_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCGetGiftPermissionsResponse_FriendPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCUnlockCrateResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCreateStaticRecipe_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCreateStaticRecipeResponse_OutputItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCreateStaticRecipeResponse_InputError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgProcessTransactionOrder_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCConsoleOutput_OutputLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgItemAges_MaxItemIDTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToClientCurrencyPricePoints_Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_econ_gcmessages_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGCToGCFlushSteamInventoryCache_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_econ_gcmessages_proto_rawDesc,
			NumEnums:      14,
			NumMessages:   137,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_econ_gcmessages_proto_goTypes,
		DependencyIndexes: file_econ_gcmessages_proto_depIdxs,
		EnumInfos:         file_econ_gcmessages_proto_enumTypes,
		MessageInfos:      file_econ_gcmessages_proto_msgTypes,
	}.Build()
	File_econ_gcmessages_proto = out.File
	file_econ_gcmessages_proto_rawDesc = nil
	file_econ_gcmessages_proto_goTypes = nil
	file_econ_gcmessages_proto_depIdxs = nil
}

// Code generated by protoc-gen-go.
// source: dota_gcmessages_client_chat.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CMsgGCToClientPrivateChatResponse_Result int32

const (
	CMsgGCToClientPrivateChatResponse_SUCCESS                       CMsgGCToClientPrivateChatResponse_Result = 0
	CMsgGCToClientPrivateChatResponse_FAILURE_CREATION_LOCK         CMsgGCToClientPrivateChatResponse_Result = 1
	CMsgGCToClientPrivateChatResponse_FAILURE_SQL_TRANSACTION       CMsgGCToClientPrivateChatResponse_Result = 2
	CMsgGCToClientPrivateChatResponse_FAILURE_SDO_LOAD              CMsgGCToClientPrivateChatResponse_Result = 3
	CMsgGCToClientPrivateChatResponse_FAILURE_NO_PERMISSION         CMsgGCToClientPrivateChatResponse_Result = 4
	CMsgGCToClientPrivateChatResponse_FAILURE_ALREADY_MEMBER        CMsgGCToClientPrivateChatResponse_Result = 5
	CMsgGCToClientPrivateChatResponse_FAILURE_NOT_A_MEMBER          CMsgGCToClientPrivateChatResponse_Result = 7
	CMsgGCToClientPrivateChatResponse_FAILURE_NO_REMAINING_ADMINS   CMsgGCToClientPrivateChatResponse_Result = 8
	CMsgGCToClientPrivateChatResponse_FAILURE_NO_ROOM               CMsgGCToClientPrivateChatResponse_Result = 9
	CMsgGCToClientPrivateChatResponse_FAILURE_CREATION_RATE_LIMITED CMsgGCToClientPrivateChatResponse_Result = 10
	CMsgGCToClientPrivateChatResponse_FAILURE_UNKNOWN_CHANNEL_NAME  CMsgGCToClientPrivateChatResponse_Result = 11
	CMsgGCToClientPrivateChatResponse_FAILURE_UNKNOWN_USER          CMsgGCToClientPrivateChatResponse_Result = 12
	CMsgGCToClientPrivateChatResponse_FAILURE_UNKNOWN_ERROR         CMsgGCToClientPrivateChatResponse_Result = 13
	CMsgGCToClientPrivateChatResponse_FAILURE_CANNOT_KICK_ADMIN     CMsgGCToClientPrivateChatResponse_Result = 14
	CMsgGCToClientPrivateChatResponse_FAILURE_ALREADY_ADMIN         CMsgGCToClientPrivateChatResponse_Result = 15
)

var CMsgGCToClientPrivateChatResponse_Result_name = map[int32]string{
	0:  "SUCCESS",
	1:  "FAILURE_CREATION_LOCK",
	2:  "FAILURE_SQL_TRANSACTION",
	3:  "FAILURE_SDO_LOAD",
	4:  "FAILURE_NO_PERMISSION",
	5:  "FAILURE_ALREADY_MEMBER",
	7:  "FAILURE_NOT_A_MEMBER",
	8:  "FAILURE_NO_REMAINING_ADMINS",
	9:  "FAILURE_NO_ROOM",
	10: "FAILURE_CREATION_RATE_LIMITED",
	11: "FAILURE_UNKNOWN_CHANNEL_NAME",
	12: "FAILURE_UNKNOWN_USER",
	13: "FAILURE_UNKNOWN_ERROR",
	14: "FAILURE_CANNOT_KICK_ADMIN",
	15: "FAILURE_ALREADY_ADMIN",
}
var CMsgGCToClientPrivateChatResponse_Result_value = map[string]int32{
	"SUCCESS":                       0,
	"FAILURE_CREATION_LOCK":         1,
	"FAILURE_SQL_TRANSACTION":       2,
	"FAILURE_SDO_LOAD":              3,
	"FAILURE_NO_PERMISSION":         4,
	"FAILURE_ALREADY_MEMBER":        5,
	"FAILURE_NOT_A_MEMBER":          7,
	"FAILURE_NO_REMAINING_ADMINS":   8,
	"FAILURE_NO_ROOM":               9,
	"FAILURE_CREATION_RATE_LIMITED": 10,
	"FAILURE_UNKNOWN_CHANNEL_NAME":  11,
	"FAILURE_UNKNOWN_USER":          12,
	"FAILURE_UNKNOWN_ERROR":         13,
	"FAILURE_CANNOT_KICK_ADMIN":     14,
	"FAILURE_ALREADY_ADMIN":         15,
}

func (x CMsgGCToClientPrivateChatResponse_Result) Enum() *CMsgGCToClientPrivateChatResponse_Result {
	p := new(CMsgGCToClientPrivateChatResponse_Result)
	*p = x
	return p
}
func (x CMsgGCToClientPrivateChatResponse_Result) String() string {
	return proto.EnumName(CMsgGCToClientPrivateChatResponse_Result_name, int32(x))
}
func (x *CMsgGCToClientPrivateChatResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgGCToClientPrivateChatResponse_Result_value, data, "CMsgGCToClientPrivateChatResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgGCToClientPrivateChatResponse_Result(value)
	return nil
}
func (CMsgGCToClientPrivateChatResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor10, []int{4, 0}
}

type CMsgDOTAJoinChatChannelResponse_Result int32

const (
	CMsgDOTAJoinChatChannelResponse_JOIN_SUCCESS                    CMsgDOTAJoinChatChannelResponse_Result = 0
	CMsgDOTAJoinChatChannelResponse_INVALID_CHANNEL_TYPE            CMsgDOTAJoinChatChannelResponse_Result = 1
	CMsgDOTAJoinChatChannelResponse_ACCOUNT_NOT_FOUND               CMsgDOTAJoinChatChannelResponse_Result = 2
	CMsgDOTAJoinChatChannelResponse_ACH_FAILED                      CMsgDOTAJoinChatChannelResponse_Result = 3
	CMsgDOTAJoinChatChannelResponse_USER_IN_TOO_MANY_CHANNELS       CMsgDOTAJoinChatChannelResponse_Result = 4
	CMsgDOTAJoinChatChannelResponse_RATE_LIMIT_EXCEEDED             CMsgDOTAJoinChatChannelResponse_Result = 5
	CMsgDOTAJoinChatChannelResponse_CHANNEL_FULL                    CMsgDOTAJoinChatChannelResponse_Result = 6
	CMsgDOTAJoinChatChannelResponse_CHANNEL_FULL_OVERFLOWED         CMsgDOTAJoinChatChannelResponse_Result = 7
	CMsgDOTAJoinChatChannelResponse_FAILED_TO_ADD_USER              CMsgDOTAJoinChatChannelResponse_Result = 8
	CMsgDOTAJoinChatChannelResponse_CHANNEL_TYPE_DISABLED           CMsgDOTAJoinChatChannelResponse_Result = 9
	CMsgDOTAJoinChatChannelResponse_PRIVATE_CHAT_CREATE_FAILED      CMsgDOTAJoinChatChannelResponse_Result = 10
	CMsgDOTAJoinChatChannelResponse_PRIVATE_CHAT_NO_PERMISSION      CMsgDOTAJoinChatChannelResponse_Result = 11
	CMsgDOTAJoinChatChannelResponse_PRIVATE_CHAT_CREATE_LOCK_FAILED CMsgDOTAJoinChatChannelResponse_Result = 12
	CMsgDOTAJoinChatChannelResponse_PRIVATE_CHAT_KICKED             CMsgDOTAJoinChatChannelResponse_Result = 13
)

var CMsgDOTAJoinChatChannelResponse_Result_name = map[int32]string{
	0:  "JOIN_SUCCESS",
	1:  "INVALID_CHANNEL_TYPE",
	2:  "ACCOUNT_NOT_FOUND",
	3:  "ACH_FAILED",
	4:  "USER_IN_TOO_MANY_CHANNELS",
	5:  "RATE_LIMIT_EXCEEDED",
	6:  "CHANNEL_FULL",
	7:  "CHANNEL_FULL_OVERFLOWED",
	8:  "FAILED_TO_ADD_USER",
	9:  "CHANNEL_TYPE_DISABLED",
	10: "PRIVATE_CHAT_CREATE_FAILED",
	11: "PRIVATE_CHAT_NO_PERMISSION",
	12: "PRIVATE_CHAT_CREATE_LOCK_FAILED",
	13: "PRIVATE_CHAT_KICKED",
}
var CMsgDOTAJoinChatChannelResponse_Result_value = map[string]int32{
	"JOIN_SUCCESS":                    0,
	"INVALID_CHANNEL_TYPE":            1,
	"ACCOUNT_NOT_FOUND":               2,
	"ACH_FAILED":                      3,
	"USER_IN_TOO_MANY_CHANNELS":       4,
	"RATE_LIMIT_EXCEEDED":             5,
	"CHANNEL_FULL":                    6,
	"CHANNEL_FULL_OVERFLOWED":         7,
	"FAILED_TO_ADD_USER":              8,
	"CHANNEL_TYPE_DISABLED":           9,
	"PRIVATE_CHAT_CREATE_FAILED":      10,
	"PRIVATE_CHAT_NO_PERMISSION":      11,
	"PRIVATE_CHAT_CREATE_LOCK_FAILED": 12,
	"PRIVATE_CHAT_KICKED":             13,
}

func (x CMsgDOTAJoinChatChannelResponse_Result) Enum() *CMsgDOTAJoinChatChannelResponse_Result {
	p := new(CMsgDOTAJoinChatChannelResponse_Result)
	*p = x
	return p
}
func (x CMsgDOTAJoinChatChannelResponse_Result) String() string {
	return proto.EnumName(CMsgDOTAJoinChatChannelResponse_Result_name, int32(x))
}
func (x *CMsgDOTAJoinChatChannelResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAJoinChatChannelResponse_Result_value, data, "CMsgDOTAJoinChatChannelResponse_Result")
	if err != nil {
		return err
	}
	*x = CMsgDOTAJoinChatChannelResponse_Result(value)
	return nil
}
func (CMsgDOTAJoinChatChannelResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor10, []int{13, 0}
}

type CMsgClientToGCPrivateChatInvite struct {
	PrivateChatChannelName *string `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	InvitedAccountId       *uint32 `protobuf:"varint,2,opt,name=invited_account_id,json=invitedAccountId" json:"invited_account_id,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgClientToGCPrivateChatInvite) Reset()         { *m = CMsgClientToGCPrivateChatInvite{} }
func (m *CMsgClientToGCPrivateChatInvite) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCPrivateChatInvite) ProtoMessage()    {}
func (*CMsgClientToGCPrivateChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{0}
}

func (m *CMsgClientToGCPrivateChatInvite) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

func (m *CMsgClientToGCPrivateChatInvite) GetInvitedAccountId() uint32 {
	if m != nil && m.InvitedAccountId != nil {
		return *m.InvitedAccountId
	}
	return 0
}

type CMsgClientToGCPrivateChatKick struct {
	PrivateChatChannelName *string `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	KickAccountId          *uint32 `protobuf:"varint,2,opt,name=kick_account_id,json=kickAccountId" json:"kick_account_id,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgClientToGCPrivateChatKick) Reset()                    { *m = CMsgClientToGCPrivateChatKick{} }
func (m *CMsgClientToGCPrivateChatKick) String() string            { return proto.CompactTextString(m) }
func (*CMsgClientToGCPrivateChatKick) ProtoMessage()               {}
func (*CMsgClientToGCPrivateChatKick) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *CMsgClientToGCPrivateChatKick) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

func (m *CMsgClientToGCPrivateChatKick) GetKickAccountId() uint32 {
	if m != nil && m.KickAccountId != nil {
		return *m.KickAccountId
	}
	return 0
}

type CMsgClientToGCPrivateChatPromote struct {
	PrivateChatChannelName *string `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	PromoteAccountId       *uint32 `protobuf:"varint,2,opt,name=promote_account_id,json=promoteAccountId" json:"promote_account_id,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgClientToGCPrivateChatPromote) Reset()         { *m = CMsgClientToGCPrivateChatPromote{} }
func (m *CMsgClientToGCPrivateChatPromote) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCPrivateChatPromote) ProtoMessage()    {}
func (*CMsgClientToGCPrivateChatPromote) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{2}
}

func (m *CMsgClientToGCPrivateChatPromote) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

func (m *CMsgClientToGCPrivateChatPromote) GetPromoteAccountId() uint32 {
	if m != nil && m.PromoteAccountId != nil {
		return *m.PromoteAccountId
	}
	return 0
}

type CMsgClientToGCPrivateChatDemote struct {
	PrivateChatChannelName *string `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	DemoteAccountId        *uint32 `protobuf:"varint,2,opt,name=demote_account_id,json=demoteAccountId" json:"demote_account_id,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgClientToGCPrivateChatDemote) Reset()         { *m = CMsgClientToGCPrivateChatDemote{} }
func (m *CMsgClientToGCPrivateChatDemote) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCPrivateChatDemote) ProtoMessage()    {}
func (*CMsgClientToGCPrivateChatDemote) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{3}
}

func (m *CMsgClientToGCPrivateChatDemote) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

func (m *CMsgClientToGCPrivateChatDemote) GetDemoteAccountId() uint32 {
	if m != nil && m.DemoteAccountId != nil {
		return *m.DemoteAccountId
	}
	return 0
}

type CMsgGCToClientPrivateChatResponse struct {
	PrivateChatChannelName *string                                   `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	Result                 *CMsgGCToClientPrivateChatResponse_Result `protobuf:"varint,2,opt,name=result,enum=dota.CMsgGCToClientPrivateChatResponse_Result,def=0" json:"result,omitempty"`
	Username               *string                                   `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	XXX_unrecognized       []byte                                    `json:"-"`
}

func (m *CMsgGCToClientPrivateChatResponse) Reset()         { *m = CMsgGCToClientPrivateChatResponse{} }
func (m *CMsgGCToClientPrivateChatResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientPrivateChatResponse) ProtoMessage()    {}
func (*CMsgGCToClientPrivateChatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{4}
}

const Default_CMsgGCToClientPrivateChatResponse_Result CMsgGCToClientPrivateChatResponse_Result = CMsgGCToClientPrivateChatResponse_SUCCESS

func (m *CMsgGCToClientPrivateChatResponse) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

func (m *CMsgGCToClientPrivateChatResponse) GetResult() CMsgGCToClientPrivateChatResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgGCToClientPrivateChatResponse_Result
}

func (m *CMsgGCToClientPrivateChatResponse) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

type CMsgClientToGCPrivateChatInfoRequest struct {
	PrivateChatChannelName *string `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CMsgClientToGCPrivateChatInfoRequest) Reset()         { *m = CMsgClientToGCPrivateChatInfoRequest{} }
func (m *CMsgClientToGCPrivateChatInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientToGCPrivateChatInfoRequest) ProtoMessage()    {}
func (*CMsgClientToGCPrivateChatInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{5}
}

func (m *CMsgClientToGCPrivateChatInfoRequest) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

type CMsgGCToClientPrivateChatInfoResponse struct {
	PrivateChatChannelName *string                                         `protobuf:"bytes,1,opt,name=private_chat_channel_name,json=privateChatChannelName" json:"private_chat_channel_name,omitempty"`
	Members                []*CMsgGCToClientPrivateChatInfoResponse_Member `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	Creator                *uint32                                         `protobuf:"varint,3,opt,name=creator" json:"creator,omitempty"`
	CreationDate           *uint32                                         `protobuf:"varint,4,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
	XXX_unrecognized       []byte                                          `json:"-"`
}

func (m *CMsgGCToClientPrivateChatInfoResponse) Reset()         { *m = CMsgGCToClientPrivateChatInfoResponse{} }
func (m *CMsgGCToClientPrivateChatInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgGCToClientPrivateChatInfoResponse) ProtoMessage()    {}
func (*CMsgGCToClientPrivateChatInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{6}
}

func (m *CMsgGCToClientPrivateChatInfoResponse) GetPrivateChatChannelName() string {
	if m != nil && m.PrivateChatChannelName != nil {
		return *m.PrivateChatChannelName
	}
	return ""
}

func (m *CMsgGCToClientPrivateChatInfoResponse) GetMembers() []*CMsgGCToClientPrivateChatInfoResponse_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgGCToClientPrivateChatInfoResponse) GetCreator() uint32 {
	if m != nil && m.Creator != nil {
		return *m.Creator
	}
	return 0
}

func (m *CMsgGCToClientPrivateChatInfoResponse) GetCreationDate() uint32 {
	if m != nil && m.CreationDate != nil {
		return *m.CreationDate
	}
	return 0
}

type CMsgGCToClientPrivateChatInfoResponse_Member struct {
	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Status           *uint32 `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCToClientPrivateChatInfoResponse_Member) Reset() {
	*m = CMsgGCToClientPrivateChatInfoResponse_Member{}
}
func (m *CMsgGCToClientPrivateChatInfoResponse_Member) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgGCToClientPrivateChatInfoResponse_Member) ProtoMessage() {}
func (*CMsgGCToClientPrivateChatInfoResponse_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{6, 0}
}

func (m *CMsgGCToClientPrivateChatInfoResponse_Member) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCToClientPrivateChatInfoResponse_Member) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCToClientPrivateChatInfoResponse_Member) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTAJoinChatChannel struct {
	ChannelName      *string               `protobuf:"bytes,2,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	ChannelType      *DOTAChatChannelTypeT `protobuf:"varint,4,opt,name=channel_type,json=channelType,enum=dota.DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAJoinChatChannel) Reset()                    { *m = CMsgDOTAJoinChatChannel{} }
func (m *CMsgDOTAJoinChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAJoinChatChannel) ProtoMessage()               {}
func (*CMsgDOTAJoinChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{7} }

const Default_CMsgDOTAJoinChatChannel_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional

func (m *CMsgDOTAJoinChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTAJoinChatChannel) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTAJoinChatChannel_ChannelType
}

type CMsgDOTALeaveChatChannel struct {
	ChannelId        *uint64 `protobuf:"varint,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTALeaveChatChannel) Reset()                    { *m = CMsgDOTALeaveChatChannel{} }
func (m *CMsgDOTALeaveChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTALeaveChatChannel) ProtoMessage()               {}
func (*CMsgDOTALeaveChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{8} }

func (m *CMsgDOTALeaveChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type CMsgGCChatReportPublicSpam struct {
	ChannelId        *uint64 `protobuf:"varint,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	ChannelUserId    *uint32 `protobuf:"varint,2,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgGCChatReportPublicSpam) Reset()                    { *m = CMsgGCChatReportPublicSpam{} }
func (m *CMsgGCChatReportPublicSpam) String() string            { return proto.CompactTextString(m) }
func (*CMsgGCChatReportPublicSpam) ProtoMessage()               {}
func (*CMsgGCChatReportPublicSpam) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{9} }

func (m *CMsgGCChatReportPublicSpam) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgGCChatReportPublicSpam) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

type CMsgDOTAClientIgnoredUser struct {
	IgnoredAccountId *uint32 `protobuf:"varint,1,opt,name=ignored_account_id,json=ignoredAccountId" json:"ignored_account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAClientIgnoredUser) Reset()                    { *m = CMsgDOTAClientIgnoredUser{} }
func (m *CMsgDOTAClientIgnoredUser) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAClientIgnoredUser) ProtoMessage()               {}
func (*CMsgDOTAClientIgnoredUser) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{10} }

func (m *CMsgDOTAClientIgnoredUser) GetIgnoredAccountId() uint32 {
	if m != nil && m.IgnoredAccountId != nil {
		return *m.IgnoredAccountId
	}
	return 0
}

type CMsgDOTAChatMessage struct {
	AccountId                   *uint32                             `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ChannelId                   *uint64                             `protobuf:"varint,2,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	PersonaName                 *string                             `protobuf:"bytes,3,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	Text                        *string                             `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Timestamp                   *uint32                             `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	SuggestInviteAccountId      *uint32                             `protobuf:"varint,6,opt,name=suggest_invite_account_id,json=suggestInviteAccountId" json:"suggest_invite_account_id,omitempty"`
	SuggestInviteName           *string                             `protobuf:"bytes,7,opt,name=suggest_invite_name,json=suggestInviteName" json:"suggest_invite_name,omitempty"`
	FantasyDraftOwnerAccountId  *uint32                             `protobuf:"varint,8,opt,name=fantasy_draft_owner_account_id,json=fantasyDraftOwnerAccountId" json:"fantasy_draft_owner_account_id,omitempty"`
	FantasyDraftPlayerAccountId *uint32                             `protobuf:"varint,9,opt,name=fantasy_draft_player_account_id,json=fantasyDraftPlayerAccountId" json:"fantasy_draft_player_account_id,omitempty"`
	EventId                     *uint32                             `protobuf:"varint,10,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	SuggestInviteToLobby        *bool                               `protobuf:"varint,11,opt,name=suggest_invite_to_lobby,json=suggestInviteToLobby" json:"suggest_invite_to_lobby,omitempty"`
	EventPoints                 *uint32                             `protobuf:"varint,12,opt,name=event_points,json=eventPoints" json:"event_points,omitempty"`
	CoinFlip                    *bool                               `protobuf:"varint,13,opt,name=coin_flip,json=coinFlip" json:"coin_flip,omitempty"`
	PlayerId                    *int32                              `protobuf:"varint,14,opt,name=player_id,json=playerId,def=-1" json:"player_id,omitempty"`
	ShareProfileAccountId       *uint32                             `protobuf:"varint,15,opt,name=share_profile_account_id,json=shareProfileAccountId" json:"share_profile_account_id,omitempty"`
	ChannelUserId               *uint32                             `protobuf:"varint,16,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	DiceRoll                    *CMsgDOTAChatMessage_DiceRoll       `protobuf:"bytes,17,opt,name=dice_roll,json=diceRoll" json:"dice_roll,omitempty"`
	SharePartyId                *uint64                             `protobuf:"varint,18,opt,name=share_party_id,json=sharePartyId" json:"share_party_id,omitempty"`
	ShareLobbyId                *uint64                             `protobuf:"varint,19,opt,name=share_lobby_id,json=shareLobbyId" json:"share_lobby_id,omitempty"`
	ShareLobbyCustomGameId      *uint64                             `protobuf:"varint,20,opt,name=share_lobby_custom_game_id,json=shareLobbyCustomGameId" json:"share_lobby_custom_game_id,omitempty"`
	ShareLobbyPasskey           *string                             `protobuf:"bytes,21,opt,name=share_lobby_passkey,json=shareLobbyPasskey" json:"share_lobby_passkey,omitempty"`
	PrivateChatChannelId        *uint32                             `protobuf:"varint,22,opt,name=private_chat_channel_id,json=privateChatChannelId" json:"private_chat_channel_id,omitempty"`
	Status                      *uint32                             `protobuf:"varint,23,opt,name=status" json:"status,omitempty"`
	LegacyBattleCupVictory      *bool                               `protobuf:"varint,24,opt,name=legacy_battle_cup_victory,json=legacyBattleCupVictory" json:"legacy_battle_cup_victory,omitempty"`
	BattleCupStreak             *uint32                             `protobuf:"varint,29,opt,name=battle_cup_streak,json=battleCupStreak" json:"battle_cup_streak,omitempty"`
	BadgeLevel                  *uint32                             `protobuf:"varint,25,opt,name=badge_level,json=badgeLevel" json:"badge_level,omitempty"`
	SuggestPickHeroId           *uint32                             `protobuf:"varint,26,opt,name=suggest_pick_hero_id,json=suggestPickHeroId" json:"suggest_pick_hero_id,omitempty"`
	SuggestPickHeroRole         *string                             `protobuf:"bytes,27,opt,name=suggest_pick_hero_role,json=suggestPickHeroRole" json:"suggest_pick_hero_role,omitempty"`
	SuggestBanHeroId            *uint32                             `protobuf:"varint,30,opt,name=suggest_ban_hero_id,json=suggestBanHeroId" json:"suggest_ban_hero_id,omitempty"`
	Terse                       *bool                               `protobuf:"varint,28,opt,name=terse" json:"terse,omitempty"`
	IgnoreMuted                 *bool                               `protobuf:"varint,31,opt,name=ignore_muted,json=ignoreMuted" json:"ignore_muted,omitempty"`
	TriviaAnswer                *CMsgDOTAChatMessage_TriviaAnswered `protobuf:"bytes,32,opt,name=trivia_answer,json=triviaAnswer" json:"trivia_answer,omitempty"`
	XXX_unrecognized            []byte                              `json:"-"`
}

func (m *CMsgDOTAChatMessage) Reset()                    { *m = CMsgDOTAChatMessage{} }
func (m *CMsgDOTAChatMessage) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChatMessage) ProtoMessage()               {}
func (*CMsgDOTAChatMessage) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{11} }

const Default_CMsgDOTAChatMessage_PlayerId int32 = -1

func (m *CMsgDOTAChatMessage) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestInviteAccountId() uint32 {
	if m != nil && m.SuggestInviteAccountId != nil {
		return *m.SuggestInviteAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestInviteName() string {
	if m != nil && m.SuggestInviteName != nil {
		return *m.SuggestInviteName
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetFantasyDraftOwnerAccountId() uint32 {
	if m != nil && m.FantasyDraftOwnerAccountId != nil {
		return *m.FantasyDraftOwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetFantasyDraftPlayerAccountId() uint32 {
	if m != nil && m.FantasyDraftPlayerAccountId != nil {
		return *m.FantasyDraftPlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetEventId() uint32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestInviteToLobby() bool {
	if m != nil && m.SuggestInviteToLobby != nil {
		return *m.SuggestInviteToLobby
	}
	return false
}

func (m *CMsgDOTAChatMessage) GetEventPoints() uint32 {
	if m != nil && m.EventPoints != nil {
		return *m.EventPoints
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetCoinFlip() bool {
	if m != nil && m.CoinFlip != nil {
		return *m.CoinFlip
	}
	return false
}

func (m *CMsgDOTAChatMessage) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return Default_CMsgDOTAChatMessage_PlayerId
}

func (m *CMsgDOTAChatMessage) GetShareProfileAccountId() uint32 {
	if m != nil && m.ShareProfileAccountId != nil {
		return *m.ShareProfileAccountId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetDiceRoll() *CMsgDOTAChatMessage_DiceRoll {
	if m != nil {
		return m.DiceRoll
	}
	return nil
}

func (m *CMsgDOTAChatMessage) GetSharePartyId() uint64 {
	if m != nil && m.SharePartyId != nil {
		return *m.SharePartyId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetShareLobbyId() uint64 {
	if m != nil && m.ShareLobbyId != nil {
		return *m.ShareLobbyId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetShareLobbyCustomGameId() uint64 {
	if m != nil && m.ShareLobbyCustomGameId != nil {
		return *m.ShareLobbyCustomGameId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetShareLobbyPasskey() string {
	if m != nil && m.ShareLobbyPasskey != nil {
		return *m.ShareLobbyPasskey
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetPrivateChatChannelId() uint32 {
	if m != nil && m.PrivateChatChannelId != nil {
		return *m.PrivateChatChannelId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetLegacyBattleCupVictory() bool {
	if m != nil && m.LegacyBattleCupVictory != nil {
		return *m.LegacyBattleCupVictory
	}
	return false
}

func (m *CMsgDOTAChatMessage) GetBattleCupStreak() uint32 {
	if m != nil && m.BattleCupStreak != nil {
		return *m.BattleCupStreak
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetBadgeLevel() uint32 {
	if m != nil && m.BadgeLevel != nil {
		return *m.BadgeLevel
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestPickHeroId() uint32 {
	if m != nil && m.SuggestPickHeroId != nil {
		return *m.SuggestPickHeroId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetSuggestPickHeroRole() string {
	if m != nil && m.SuggestPickHeroRole != nil {
		return *m.SuggestPickHeroRole
	}
	return ""
}

func (m *CMsgDOTAChatMessage) GetSuggestBanHeroId() uint32 {
	if m != nil && m.SuggestBanHeroId != nil {
		return *m.SuggestBanHeroId
	}
	return 0
}

func (m *CMsgDOTAChatMessage) GetTerse() bool {
	if m != nil && m.Terse != nil {
		return *m.Terse
	}
	return false
}

func (m *CMsgDOTAChatMessage) GetIgnoreMuted() bool {
	if m != nil && m.IgnoreMuted != nil {
		return *m.IgnoreMuted
	}
	return false
}

func (m *CMsgDOTAChatMessage) GetTriviaAnswer() *CMsgDOTAChatMessage_TriviaAnswered {
	if m != nil {
		return m.TriviaAnswer
	}
	return nil
}

type CMsgDOTAChatMessage_DiceRoll struct {
	RollMin          *int32 `protobuf:"varint,1,opt,name=roll_min,json=rollMin" json:"roll_min,omitempty"`
	RollMax          *int32 `protobuf:"varint,2,opt,name=roll_max,json=rollMax" json:"roll_max,omitempty"`
	Result           *int32 `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTAChatMessage_DiceRoll) Reset()         { *m = CMsgDOTAChatMessage_DiceRoll{} }
func (m *CMsgDOTAChatMessage_DiceRoll) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatMessage_DiceRoll) ProtoMessage()    {}
func (*CMsgDOTAChatMessage_DiceRoll) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{11, 0}
}

func (m *CMsgDOTAChatMessage_DiceRoll) GetRollMin() int32 {
	if m != nil && m.RollMin != nil {
		return *m.RollMin
	}
	return 0
}

func (m *CMsgDOTAChatMessage_DiceRoll) GetRollMax() int32 {
	if m != nil && m.RollMax != nil {
		return *m.RollMax
	}
	return 0
}

func (m *CMsgDOTAChatMessage_DiceRoll) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type CMsgDOTAChatMessage_TriviaAnswered struct {
	QuestionId            *uint32 `protobuf:"varint,1,opt,name=question_id,json=questionId" json:"question_id,omitempty"`
	AnswerIndex           *uint32 `protobuf:"varint,2,opt,name=answer_index,json=answerIndex" json:"answer_index,omitempty"`
	PartyQuestionsCorrect *uint32 `protobuf:"varint,3,opt,name=party_questions_correct,json=partyQuestionsCorrect" json:"party_questions_correct,omitempty"`
	PartyQuestionsViewed  *uint32 `protobuf:"varint,4,opt,name=party_questions_viewed,json=partyQuestionsViewed" json:"party_questions_viewed,omitempty"`
	PartyTriviaPoints     *uint32 `protobuf:"varint,5,opt,name=party_trivia_points,json=partyTriviaPoints" json:"party_trivia_points,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *CMsgDOTAChatMessage_TriviaAnswered) Reset()         { *m = CMsgDOTAChatMessage_TriviaAnswered{} }
func (m *CMsgDOTAChatMessage_TriviaAnswered) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatMessage_TriviaAnswered) ProtoMessage()    {}
func (*CMsgDOTAChatMessage_TriviaAnswered) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{11, 1}
}

func (m *CMsgDOTAChatMessage_TriviaAnswered) GetQuestionId() uint32 {
	if m != nil && m.QuestionId != nil {
		return *m.QuestionId
	}
	return 0
}

func (m *CMsgDOTAChatMessage_TriviaAnswered) GetAnswerIndex() uint32 {
	if m != nil && m.AnswerIndex != nil {
		return *m.AnswerIndex
	}
	return 0
}

func (m *CMsgDOTAChatMessage_TriviaAnswered) GetPartyQuestionsCorrect() uint32 {
	if m != nil && m.PartyQuestionsCorrect != nil {
		return *m.PartyQuestionsCorrect
	}
	return 0
}

func (m *CMsgDOTAChatMessage_TriviaAnswered) GetPartyQuestionsViewed() uint32 {
	if m != nil && m.PartyQuestionsViewed != nil {
		return *m.PartyQuestionsViewed
	}
	return 0
}

func (m *CMsgDOTAChatMessage_TriviaAnswered) GetPartyTriviaPoints() uint32 {
	if m != nil && m.PartyTriviaPoints != nil {
		return *m.PartyTriviaPoints
	}
	return 0
}

type CMsgDOTAChatMember struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	ChannelUserId    *uint32 `protobuf:"varint,3,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	Status           *uint32 `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatMember) Reset()                    { *m = CMsgDOTAChatMember{} }
func (m *CMsgDOTAChatMember) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChatMember) ProtoMessage()               {}
func (*CMsgDOTAChatMember) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{12} }

func (m *CMsgDOTAChatMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAChatMember) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAChatMember) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

func (m *CMsgDOTAChatMember) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTAJoinChatChannelResponse struct {
	Response         *uint32                                 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	ChannelName      *string                                 `protobuf:"bytes,2,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	ChannelId        *uint64                                 `protobuf:"fixed64,3,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	MaxMembers       *uint32                                 `protobuf:"varint,4,opt,name=max_members,json=maxMembers" json:"max_members,omitempty"`
	Members          []*CMsgDOTAChatMember                   `protobuf:"bytes,5,rep,name=members" json:"members,omitempty"`
	ChannelType      *DOTAChatChannelTypeT                   `protobuf:"varint,6,opt,name=channel_type,json=channelType,enum=dota.DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	Result           *CMsgDOTAJoinChatChannelResponse_Result `protobuf:"varint,7,opt,name=result,enum=dota.CMsgDOTAJoinChatChannelResponse_Result,def=0" json:"result,omitempty"`
	GcInitiatedJoin  *bool                                   `protobuf:"varint,8,opt,name=gc_initiated_join,json=gcInitiatedJoin" json:"gc_initiated_join,omitempty"`
	ChannelUserId    *uint32                                 `protobuf:"varint,9,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	WelcomeMessage   *string                                 `protobuf:"bytes,10,opt,name=welcome_message,json=welcomeMessage" json:"welcome_message,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *CMsgDOTAJoinChatChannelResponse) Reset()         { *m = CMsgDOTAJoinChatChannelResponse{} }
func (m *CMsgDOTAJoinChatChannelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAJoinChatChannelResponse) ProtoMessage()    {}
func (*CMsgDOTAJoinChatChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{13}
}

const Default_CMsgDOTAJoinChatChannelResponse_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional
const Default_CMsgDOTAJoinChatChannelResponse_Result CMsgDOTAJoinChatChannelResponse_Result = CMsgDOTAJoinChatChannelResponse_JOIN_SUCCESS

func (m *CMsgDOTAJoinChatChannelResponse) GetResponse() uint32 {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTAJoinChatChannelResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetMaxMembers() uint32 {
	if m != nil && m.MaxMembers != nil {
		return *m.MaxMembers
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetMembers() []*CMsgDOTAChatMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CMsgDOTAJoinChatChannelResponse) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTAJoinChatChannelResponse_ChannelType
}

func (m *CMsgDOTAJoinChatChannelResponse) GetResult() CMsgDOTAJoinChatChannelResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAJoinChatChannelResponse_Result
}

func (m *CMsgDOTAJoinChatChannelResponse) GetGcInitiatedJoin() bool {
	if m != nil && m.GcInitiatedJoin != nil {
		return *m.GcInitiatedJoin
	}
	return false
}

func (m *CMsgDOTAJoinChatChannelResponse) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

func (m *CMsgDOTAJoinChatChannelResponse) GetWelcomeMessage() string {
	if m != nil && m.WelcomeMessage != nil {
		return *m.WelcomeMessage
	}
	return ""
}

type CMsgDOTAChatChannelFullUpdate struct {
	ChannelId        *uint64               `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Members          []*CMsgDOTAChatMember `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAChatChannelFullUpdate) Reset()                    { *m = CMsgDOTAChatChannelFullUpdate{} }
func (m *CMsgDOTAChatChannelFullUpdate) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChatChannelFullUpdate) ProtoMessage()               {}
func (*CMsgDOTAChatChannelFullUpdate) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{14} }

func (m *CMsgDOTAChatChannelFullUpdate) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatChannelFullUpdate) GetMembers() []*CMsgDOTAChatMember {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgDOTAOtherJoinedChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,3,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	ChannelUserId    *uint32 `protobuf:"varint,4,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	Status           *uint32 `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAOtherJoinedChatChannel) Reset()         { *m = CMsgDOTAOtherJoinedChatChannel{} }
func (m *CMsgDOTAOtherJoinedChatChannel) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAOtherJoinedChatChannel) ProtoMessage()    {}
func (*CMsgDOTAOtherJoinedChatChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{15}
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

func (m *CMsgDOTAOtherJoinedChatChannel) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTAOtherLeftChatChannel struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	ChannelUserId    *uint32 `protobuf:"varint,3,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAOtherLeftChatChannel) Reset()                    { *m = CMsgDOTAOtherLeftChatChannel{} }
func (m *CMsgDOTAOtherLeftChatChannel) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAOtherLeftChatChannel) ProtoMessage()               {}
func (*CMsgDOTAOtherLeftChatChannel) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{16} }

func (m *CMsgDOTAOtherLeftChatChannel) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAOtherLeftChatChannel) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAOtherLeftChatChannel) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

type CMsgDOTAChatChannelMemberUpdate struct {
	ChannelId        *uint64                                         `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	LeftSteamIds     []uint64                                        `protobuf:"fixed64,2,rep,name=left_steam_ids,json=leftSteamIds" json:"left_steam_ids,omitempty"`
	JoinedMembers    []*CMsgDOTAChatChannelMemberUpdate_JoinedMember `protobuf:"bytes,3,rep,name=joined_members,json=joinedMembers" json:"joined_members,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *CMsgDOTAChatChannelMemberUpdate) Reset()         { *m = CMsgDOTAChatChannelMemberUpdate{} }
func (m *CMsgDOTAChatChannelMemberUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatChannelMemberUpdate) ProtoMessage()    {}
func (*CMsgDOTAChatChannelMemberUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{17}
}

func (m *CMsgDOTAChatChannelMemberUpdate) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatChannelMemberUpdate) GetLeftSteamIds() []uint64 {
	if m != nil {
		return m.LeftSteamIds
	}
	return nil
}

func (m *CMsgDOTAChatChannelMemberUpdate) GetJoinedMembers() []*CMsgDOTAChatChannelMemberUpdate_JoinedMember {
	if m != nil {
		return m.JoinedMembers
	}
	return nil
}

type CMsgDOTAChatChannelMemberUpdate_JoinedMember struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	ChannelUserId    *uint32 `protobuf:"varint,3,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	Status           *uint32 `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) Reset() {
	*m = CMsgDOTAChatChannelMemberUpdate_JoinedMember{}
}
func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAChatChannelMemberUpdate_JoinedMember) ProtoMessage() {}
func (*CMsgDOTAChatChannelMemberUpdate_JoinedMember) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{17, 0}
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

func (m *CMsgDOTAChatChannelMemberUpdate_JoinedMember) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTARequestChatChannelList struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CMsgDOTARequestChatChannelList) Reset()         { *m = CMsgDOTARequestChatChannelList{} }
func (m *CMsgDOTARequestChatChannelList) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestChatChannelList) ProtoMessage()    {}
func (*CMsgDOTARequestChatChannelList) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{18}
}

type CMsgDOTARequestChatChannelListResponse struct {
	Channels         []*CMsgDOTARequestChatChannelListResponse_ChatChannel `protobuf:"bytes,1,rep,name=channels" json:"channels,omitempty"`
	XXX_unrecognized []byte                                                `json:"-"`
}

func (m *CMsgDOTARequestChatChannelListResponse) Reset() {
	*m = CMsgDOTARequestChatChannelListResponse{}
}
func (m *CMsgDOTARequestChatChannelListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTARequestChatChannelListResponse) ProtoMessage()    {}
func (*CMsgDOTARequestChatChannelListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{19}
}

func (m *CMsgDOTARequestChatChannelListResponse) GetChannels() []*CMsgDOTARequestChatChannelListResponse_ChatChannel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type CMsgDOTARequestChatChannelListResponse_ChatChannel struct {
	ChannelName      *string               `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	NumMembers       *uint32               `protobuf:"varint,2,opt,name=num_members,json=numMembers" json:"num_members,omitempty"`
	ChannelType      *DOTAChatChannelTypeT `protobuf:"varint,3,opt,name=channel_type,json=channelType,enum=dota.DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) Reset() {
	*m = CMsgDOTARequestChatChannelListResponse_ChatChannel{}
}
func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTARequestChatChannelListResponse_ChatChannel) ProtoMessage() {}
func (*CMsgDOTARequestChatChannelListResponse_ChatChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{19, 0}
}

const Default_CMsgDOTARequestChatChannelListResponse_ChatChannel_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) GetNumMembers() uint32 {
	if m != nil && m.NumMembers != nil {
		return *m.NumMembers
	}
	return 0
}

func (m *CMsgDOTARequestChatChannelListResponse_ChatChannel) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTARequestChatChannelListResponse_ChatChannel_ChannelType
}

type CMsgDOTAChatGetUserList struct {
	ChannelId        *uint64 `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatGetUserList) Reset()                    { *m = CMsgDOTAChatGetUserList{} }
func (m *CMsgDOTAChatGetUserList) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetUserList) ProtoMessage()               {}
func (*CMsgDOTAChatGetUserList) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{20} }

func (m *CMsgDOTAChatGetUserList) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type CMsgDOTAChatGetUserListResponse struct {
	ChannelId        *uint64                                   `protobuf:"fixed64,1,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	Members          []*CMsgDOTAChatGetUserListResponse_Member `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CMsgDOTAChatGetUserListResponse) Reset()         { *m = CMsgDOTAChatGetUserListResponse{} }
func (m *CMsgDOTAChatGetUserListResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetUserListResponse) ProtoMessage()    {}
func (*CMsgDOTAChatGetUserListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{21}
}

func (m *CMsgDOTAChatGetUserListResponse) GetChannelId() uint64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

func (m *CMsgDOTAChatGetUserListResponse) GetMembers() []*CMsgDOTAChatGetUserListResponse_Member {
	if m != nil {
		return m.Members
	}
	return nil
}

type CMsgDOTAChatGetUserListResponse_Member struct {
	SteamId          *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	PersonaName      *string `protobuf:"bytes,2,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	ChannelUserId    *uint32 `protobuf:"varint,3,opt,name=channel_user_id,json=channelUserId" json:"channel_user_id,omitempty"`
	Status           *uint32 `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgDOTAChatGetUserListResponse_Member) Reset() {
	*m = CMsgDOTAChatGetUserListResponse_Member{}
}
func (m *CMsgDOTAChatGetUserListResponse_Member) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetUserListResponse_Member) ProtoMessage()    {}
func (*CMsgDOTAChatGetUserListResponse_Member) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{21, 0}
}

func (m *CMsgDOTAChatGetUserListResponse_Member) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAChatGetUserListResponse_Member) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgDOTAChatGetUserListResponse_Member) GetChannelUserId() uint32 {
	if m != nil && m.ChannelUserId != nil {
		return *m.ChannelUserId
	}
	return 0
}

func (m *CMsgDOTAChatGetUserListResponse_Member) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTAChatGetMemberCount struct {
	ChannelName      *string               `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	ChannelType      *DOTAChatChannelTypeT `protobuf:"varint,2,opt,name=channel_type,json=channelType,enum=dota.DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAChatGetMemberCount) Reset()                    { *m = CMsgDOTAChatGetMemberCount{} }
func (m *CMsgDOTAChatGetMemberCount) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetMemberCount) ProtoMessage()               {}
func (*CMsgDOTAChatGetMemberCount) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{22} }

const Default_CMsgDOTAChatGetMemberCount_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional

func (m *CMsgDOTAChatGetMemberCount) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTAChatGetMemberCount) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTAChatGetMemberCount_ChannelType
}

type CMsgDOTAChatGetMemberCountResponse struct {
	ChannelName      *string               `protobuf:"bytes,1,opt,name=channel_name,json=channelName" json:"channel_name,omitempty"`
	ChannelType      *DOTAChatChannelTypeT `protobuf:"varint,2,opt,name=channel_type,json=channelType,enum=dota.DOTAChatChannelTypeT,def=0" json:"channel_type,omitempty"`
	MemberCount      *uint32               `protobuf:"varint,3,opt,name=member_count,json=memberCount" json:"member_count,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CMsgDOTAChatGetMemberCountResponse) Reset()         { *m = CMsgDOTAChatGetMemberCountResponse{} }
func (m *CMsgDOTAChatGetMemberCountResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatGetMemberCountResponse) ProtoMessage()    {}
func (*CMsgDOTAChatGetMemberCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{23}
}

const Default_CMsgDOTAChatGetMemberCountResponse_ChannelType DOTAChatChannelTypeT = DOTAChatChannelTypeT_DOTAChannelType_Regional

func (m *CMsgDOTAChatGetMemberCountResponse) GetChannelName() string {
	if m != nil && m.ChannelName != nil {
		return *m.ChannelName
	}
	return ""
}

func (m *CMsgDOTAChatGetMemberCountResponse) GetChannelType() DOTAChatChannelTypeT {
	if m != nil && m.ChannelType != nil {
		return *m.ChannelType
	}
	return Default_CMsgDOTAChatGetMemberCountResponse_ChannelType
}

func (m *CMsgDOTAChatGetMemberCountResponse) GetMemberCount() uint32 {
	if m != nil && m.MemberCount != nil {
		return *m.MemberCount
	}
	return 0
}

type CMsgDOTAChatRegionsEnabled struct {
	EnableAllRegions *bool                                `protobuf:"varint,1,opt,name=enable_all_regions,json=enableAllRegions" json:"enable_all_regions,omitempty"`
	EnabledRegions   []*CMsgDOTAChatRegionsEnabled_Region `protobuf:"bytes,2,rep,name=enabled_regions,json=enabledRegions" json:"enabled_regions,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CMsgDOTAChatRegionsEnabled) Reset()                    { *m = CMsgDOTAChatRegionsEnabled{} }
func (m *CMsgDOTAChatRegionsEnabled) String() string            { return proto.CompactTextString(m) }
func (*CMsgDOTAChatRegionsEnabled) ProtoMessage()               {}
func (*CMsgDOTAChatRegionsEnabled) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{24} }

func (m *CMsgDOTAChatRegionsEnabled) GetEnableAllRegions() bool {
	if m != nil && m.EnableAllRegions != nil {
		return *m.EnableAllRegions
	}
	return false
}

func (m *CMsgDOTAChatRegionsEnabled) GetEnabledRegions() []*CMsgDOTAChatRegionsEnabled_Region {
	if m != nil {
		return m.EnabledRegions
	}
	return nil
}

type CMsgDOTAChatRegionsEnabled_Region struct {
	MinLatitude      *float32 `protobuf:"fixed32,1,opt,name=min_latitude,json=minLatitude" json:"min_latitude,omitempty"`
	MaxLatitude      *float32 `protobuf:"fixed32,2,opt,name=max_latitude,json=maxLatitude" json:"max_latitude,omitempty"`
	MinLongitude     *float32 `protobuf:"fixed32,3,opt,name=min_longitude,json=minLongitude" json:"min_longitude,omitempty"`
	MaxLongitude     *float32 `protobuf:"fixed32,4,opt,name=max_longitude,json=maxLongitude" json:"max_longitude,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgDOTAChatRegionsEnabled_Region) Reset()         { *m = CMsgDOTAChatRegionsEnabled_Region{} }
func (m *CMsgDOTAChatRegionsEnabled_Region) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAChatRegionsEnabled_Region) ProtoMessage()    {}
func (*CMsgDOTAChatRegionsEnabled_Region) Descriptor() ([]byte, []int) {
	return fileDescriptor10, []int{24, 0}
}

func (m *CMsgDOTAChatRegionsEnabled_Region) GetMinLatitude() float32 {
	if m != nil && m.MinLatitude != nil {
		return *m.MinLatitude
	}
	return 0
}

func (m *CMsgDOTAChatRegionsEnabled_Region) GetMaxLatitude() float32 {
	if m != nil && m.MaxLatitude != nil {
		return *m.MaxLatitude
	}
	return 0
}

func (m *CMsgDOTAChatRegionsEnabled_Region) GetMinLongitude() float32 {
	if m != nil && m.MinLongitude != nil {
		return *m.MinLongitude
	}
	return 0
}

func (m *CMsgDOTAChatRegionsEnabled_Region) GetMaxLongitude() float32 {
	if m != nil && m.MaxLongitude != nil {
		return *m.MaxLongitude
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgClientToGCPrivateChatInvite)(nil), "dota.CMsgClientToGCPrivateChatInvite")
	proto.RegisterType((*CMsgClientToGCPrivateChatKick)(nil), "dota.CMsgClientToGCPrivateChatKick")
	proto.RegisterType((*CMsgClientToGCPrivateChatPromote)(nil), "dota.CMsgClientToGCPrivateChatPromote")
	proto.RegisterType((*CMsgClientToGCPrivateChatDemote)(nil), "dota.CMsgClientToGCPrivateChatDemote")
	proto.RegisterType((*CMsgGCToClientPrivateChatResponse)(nil), "dota.CMsgGCToClientPrivateChatResponse")
	proto.RegisterType((*CMsgClientToGCPrivateChatInfoRequest)(nil), "dota.CMsgClientToGCPrivateChatInfoRequest")
	proto.RegisterType((*CMsgGCToClientPrivateChatInfoResponse)(nil), "dota.CMsgGCToClientPrivateChatInfoResponse")
	proto.RegisterType((*CMsgGCToClientPrivateChatInfoResponse_Member)(nil), "dota.CMsgGCToClientPrivateChatInfoResponse.Member")
	proto.RegisterType((*CMsgDOTAJoinChatChannel)(nil), "dota.CMsgDOTAJoinChatChannel")
	proto.RegisterType((*CMsgDOTALeaveChatChannel)(nil), "dota.CMsgDOTALeaveChatChannel")
	proto.RegisterType((*CMsgGCChatReportPublicSpam)(nil), "dota.CMsgGCChatReportPublicSpam")
	proto.RegisterType((*CMsgDOTAClientIgnoredUser)(nil), "dota.CMsgDOTAClientIgnoredUser")
	proto.RegisterType((*CMsgDOTAChatMessage)(nil), "dota.CMsgDOTAChatMessage")
	proto.RegisterType((*CMsgDOTAChatMessage_DiceRoll)(nil), "dota.CMsgDOTAChatMessage.DiceRoll")
	proto.RegisterType((*CMsgDOTAChatMessage_TriviaAnswered)(nil), "dota.CMsgDOTAChatMessage.TriviaAnswered")
	proto.RegisterType((*CMsgDOTAChatMember)(nil), "dota.CMsgDOTAChatMember")
	proto.RegisterType((*CMsgDOTAJoinChatChannelResponse)(nil), "dota.CMsgDOTAJoinChatChannelResponse")
	proto.RegisterType((*CMsgDOTAChatChannelFullUpdate)(nil), "dota.CMsgDOTAChatChannelFullUpdate")
	proto.RegisterType((*CMsgDOTAOtherJoinedChatChannel)(nil), "dota.CMsgDOTAOtherJoinedChatChannel")
	proto.RegisterType((*CMsgDOTAOtherLeftChatChannel)(nil), "dota.CMsgDOTAOtherLeftChatChannel")
	proto.RegisterType((*CMsgDOTAChatChannelMemberUpdate)(nil), "dota.CMsgDOTAChatChannelMemberUpdate")
	proto.RegisterType((*CMsgDOTAChatChannelMemberUpdate_JoinedMember)(nil), "dota.CMsgDOTAChatChannelMemberUpdate.JoinedMember")
	proto.RegisterType((*CMsgDOTARequestChatChannelList)(nil), "dota.CMsgDOTARequestChatChannelList")
	proto.RegisterType((*CMsgDOTARequestChatChannelListResponse)(nil), "dota.CMsgDOTARequestChatChannelListResponse")
	proto.RegisterType((*CMsgDOTARequestChatChannelListResponse_ChatChannel)(nil), "dota.CMsgDOTARequestChatChannelListResponse.ChatChannel")
	proto.RegisterType((*CMsgDOTAChatGetUserList)(nil), "dota.CMsgDOTAChatGetUserList")
	proto.RegisterType((*CMsgDOTAChatGetUserListResponse)(nil), "dota.CMsgDOTAChatGetUserListResponse")
	proto.RegisterType((*CMsgDOTAChatGetUserListResponse_Member)(nil), "dota.CMsgDOTAChatGetUserListResponse.Member")
	proto.RegisterType((*CMsgDOTAChatGetMemberCount)(nil), "dota.CMsgDOTAChatGetMemberCount")
	proto.RegisterType((*CMsgDOTAChatGetMemberCountResponse)(nil), "dota.CMsgDOTAChatGetMemberCountResponse")
	proto.RegisterType((*CMsgDOTAChatRegionsEnabled)(nil), "dota.CMsgDOTAChatRegionsEnabled")
	proto.RegisterType((*CMsgDOTAChatRegionsEnabled_Region)(nil), "dota.CMsgDOTAChatRegionsEnabled.Region")
	proto.RegisterEnum("dota.CMsgGCToClientPrivateChatResponse_Result", CMsgGCToClientPrivateChatResponse_Result_name, CMsgGCToClientPrivateChatResponse_Result_value)
	proto.RegisterEnum("dota.CMsgDOTAJoinChatChannelResponse_Result", CMsgDOTAJoinChatChannelResponse_Result_name, CMsgDOTAJoinChatChannelResponse_Result_value)
}

func init() { proto.RegisterFile("dota_gcmessages_client_chat.proto", fileDescriptor10) }

var fileDescriptor10 = []byte{
	// 2404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x38, 0x49, 0x73, 0xe3, 0xc6,
	0xd5, 0x06, 0xb5, 0x91, 0x8f, 0x5a, 0x30, 0x3d, 0x1a, 0x09, 0xe2, 0x2c, 0xd2, 0xd0, 0xfe, 0x6c,
	0x95, 0x6b, 0xac, 0xaf, 0xa2, 0x6c, 0xf6, 0x5c, 0x52, 0x10, 0x09, 0xcd, 0xc0, 0xc3, 0xcd, 0x20,
	0x35, 0xf6, 0x9c, 0xba, 0x5a, 0x40, 0x8b, 0x82, 0x05, 0x02, 0x0c, 0xd0, 0xd4, 0x48, 0x37, 0x57,
	0x0e, 0xa9, 0x54, 0x92, 0x4b, 0x72, 0x48, 0x25, 0x97, 0xfc, 0x81, 0xe4, 0x9e, 0x53, 0x6e, 0xfe,
	0x01, 0xf9, 0x21, 0xc9, 0x25, 0xa9, 0xdc, 0x53, 0xdd, 0x8d, 0x95, 0xa2, 0x24, 0xa7, 0xe4, 0x8a,
	0x2f, 0x2c, 0xf6, 0xdb, 0xb7, 0x7e, 0xfd, 0x1e, 0xe0, 0xa9, 0x13, 0x30, 0x82, 0x87, 0xf6, 0x88,
	0x46, 0x11, 0x19, 0xd2, 0x08, 0xdb, 0x9e, 0x4b, 0x7d, 0x86, 0xed, 0x53, 0xc2, 0xf6, 0xc6, 0x61,
	0xc0, 0x02, 0x34, 0xcf, 0x49, 0x6a, 0x9b, 0x82, 0x30, 0x3a, 0x25, 0x21, 0x75, 0x30, 0xf5, 0x27,
	0xa3, 0x48, 0xa2, 0xeb, 0xbf, 0x54, 0x60, 0xbb, 0xd1, 0x8e, 0x86, 0x0d, 0xc1, 0x38, 0x08, 0x5e,
	0x34, 0x7a, 0xa1, 0x7b, 0x4e, 0x18, 0x6d, 0x9c, 0x12, 0x66, 0xfa, 0xe7, 0x2e, 0xa3, 0xe8, 0x13,
	0xd8, 0x1a, 0x4b, 0xa0, 0x10, 0xcc, 0x7f, 0x7c, 0x9f, 0x7a, 0xd8, 0x27, 0x23, 0xaa, 0x29, 0x3b,
	0xca, 0x6e, 0xc5, 0xda, 0x18, 0x67, 0x5c, 0x0d, 0x89, 0xee, 0x90, 0x11, 0x45, 0xcf, 0x00, 0xb9,
	0x42, 0x88, 0x83, 0x89, 0x6d, 0x07, 0x13, 0x9f, 0x61, 0xd7, 0xd1, 0x4a, 0x3b, 0xca, 0xee, 0x8a,
	0xa5, 0xc6, 0x18, 0x5d, 0x22, 0x4c, 0xa7, 0xfe, 0x33, 0x05, 0x1e, 0x5f, 0x6b, 0xcc, 0x2b, 0xd7,
	0x3e, 0xbb, 0x8b, 0x29, 0xef, 0xc3, 0xda, 0x99, 0x6b, 0x9f, 0x5d, 0xb5, 0x63, 0x85, 0x83, 0x33,
	0x23, 0x7e, 0xa5, 0xc0, 0xce, 0xb5, 0x46, 0xf4, 0xc2, 0x60, 0x14, 0xdc, 0x39, 0x24, 0x63, 0x29,
	0x65, 0x46, 0x48, 0x62, 0x4c, 0x66, 0xcd, 0x2f, 0x6e, 0xca, 0x4f, 0x93, 0xde, 0xd5, 0x98, 0x0f,
	0xe1, 0x9e, 0x43, 0x67, 0xdb, 0xb2, 0x26, 0x11, 0x99, 0x29, 0x7f, 0x9f, 0x87, 0xa7, 0xdc, 0x94,
	0x17, 0x8d, 0x41, 0x20, 0xcd, 0xc9, 0x99, 0x62, 0xd1, 0x68, 0x1c, 0xf8, 0xd1, 0x9d, 0x8c, 0xe9,
	0xc2, 0x62, 0x48, 0xa3, 0x89, 0xc7, 0x84, 0x05, 0xab, 0xfb, 0x7b, 0x7b, 0xbc, 0x6a, 0xf7, 0x6e,
	0xd5, 0xb9, 0x67, 0x09, 0xae, 0xe7, 0x4b, 0xfd, 0xa3, 0x46, 0xc3, 0xe8, 0xf7, 0xad, 0x58, 0x0c,
	0xaa, 0x41, 0x79, 0x12, 0xd1, 0x50, 0xa8, 0x9e, 0x13, 0xaa, 0xd3, 0x73, 0xfd, 0x8f, 0x73, 0xb0,
	0x28, 0xf9, 0x50, 0x15, 0x12, 0x4e, 0xf5, 0x1d, 0xb4, 0x05, 0x0f, 0x0e, 0x75, 0xb3, 0x75, 0x64,
	0x19, 0xb8, 0x61, 0x19, 0xfa, 0xc0, 0xec, 0x76, 0x70, 0xab, 0xdb, 0x78, 0xa5, 0x2a, 0xe8, 0x21,
	0x6c, 0x26, 0xa8, 0xfe, 0x67, 0x2d, 0x3c, 0xb0, 0xf4, 0x4e, 0x5f, 0x6f, 0x70, 0x0a, 0xb5, 0x84,
	0xd6, 0x41, 0x4d, 0x91, 0xcd, 0x2e, 0x6e, 0x75, 0xf5, 0xa6, 0x3a, 0x97, 0x97, 0xd6, 0xe9, 0xe2,
	0x9e, 0x61, 0xb5, 0xcd, 0x7e, 0x9f, 0x33, 0xcc, 0xa3, 0x1a, 0x6c, 0x24, 0x28, 0xbd, 0x65, 0x19,
	0x7a, 0xf3, 0x0d, 0x6e, 0x1b, 0xed, 0x03, 0xc3, 0x52, 0x17, 0x90, 0x06, 0xeb, 0x19, 0xdb, 0x00,
	0xeb, 0x09, 0x66, 0x09, 0x6d, 0xc3, 0xc3, 0x9c, 0x40, 0xcb, 0x68, 0xeb, 0x66, 0xc7, 0xec, 0xbc,
	0xc0, 0x7a, 0xb3, 0x6d, 0x76, 0xfa, 0x6a, 0x19, 0xdd, 0x87, 0xb5, 0x3c, 0x41, 0xb7, 0xdb, 0x56,
	0x2b, 0xe8, 0x29, 0x3c, 0xbe, 0xe2, 0x94, 0xa5, 0x0f, 0x0c, 0xdc, 0x32, 0xdb, 0xe6, 0xc0, 0x68,
	0xaa, 0x80, 0x76, 0xe0, 0x51, 0x42, 0x72, 0xd4, 0x79, 0xd5, 0xe9, 0x7e, 0xde, 0xc1, 0x8d, 0x97,
	0x7a, 0xa7, 0x63, 0xb4, 0x70, 0x47, 0x6f, 0x1b, 0x6a, 0x35, 0x6f, 0x54, 0x42, 0x71, 0xd4, 0x37,
	0x2c, 0x75, 0x39, 0xef, 0x65, 0x82, 0x31, 0x2c, 0xab, 0x6b, 0xa9, 0x2b, 0xe8, 0x31, 0x6c, 0xa5,
	0x9a, 0xf5, 0x0e, 0x77, 0xe6, 0x95, 0xd9, 0x78, 0x25, 0xcd, 0x55, 0x57, 0xf3, 0x9c, 0x49, 0x10,
	0x24, 0x6a, 0xad, 0x4e, 0xe0, 0xbd, 0x1b, 0x1a, 0xd3, 0x49, 0x60, 0xd1, 0x9f, 0x4e, 0x68, 0xc4,
	0xee, 0x50, 0x70, 0xf5, 0xaf, 0x4b, 0xf0, 0x7f, 0xd7, 0x56, 0x97, 0xd4, 0x71, 0xf7, 0xaa, 0x6e,
	0xc1, 0xd2, 0x88, 0x8e, 0x8e, 0x69, 0x18, 0x69, 0xa5, 0x9d, 0xb9, 0xdd, 0xea, 0xfe, 0xfe, 0x2d,
	0x65, 0x9d, 0x57, 0xbc, 0xd7, 0x16, 0xac, 0x56, 0x22, 0x02, 0x69, 0xb0, 0x64, 0x87, 0x94, 0xb0,
	0x20, 0x14, 0x15, 0xbd, 0x62, 0x25, 0x47, 0xf4, 0x2e, 0xac, 0x88, 0xbf, 0x6e, 0xe0, 0x63, 0x87,
	0x30, 0xaa, 0xcd, 0x0b, 0xfc, 0x72, 0x02, 0x6c, 0x12, 0x46, 0x6b, 0x7d, 0x58, 0x94, 0x12, 0xd1,
	0x63, 0x80, 0xdc, 0x95, 0x57, 0x04, 0x6d, 0x85, 0x24, 0x97, 0x1d, 0x21, 0x98, 0x17, 0xbe, 0x95,
	0x84, 0x6f, 0xe2, 0x3f, 0xda, 0x80, 0xc5, 0x88, 0x11, 0x36, 0x89, 0x62, 0xd5, 0xf1, 0xa9, 0xfe,
	0x3b, 0x05, 0x36, 0xb9, 0x37, 0xcd, 0xee, 0x40, 0xff, 0x34, 0x70, 0xfd, 0x5c, 0x04, 0xd0, 0x53,
	0x58, 0x2e, 0xc4, 0x4a, 0xca, 0xab, 0xda, 0xb9, 0x00, 0x7d, 0x91, 0x91, 0xb0, 0xcb, 0xb1, 0xb4,
	0x7b, 0x75, 0xff, 0xa1, 0x8c, 0x12, 0x97, 0x99, 0x93, 0x37, 0xb8, 0x1c, 0x53, 0xcc, 0x9e, 0x6b,
	0x31, 0x38, 0x05, 0x59, 0x74, 0xe8, 0x06, 0x3e, 0xf1, 0x52, 0xc9, 0x1c, 0x5a, 0xff, 0x04, 0xb4,
	0xc4, 0xae, 0x16, 0x25, 0xe7, 0xf9, 0xd4, 0x70, 0xff, 0x13, 0xad, 0xb1, 0xff, 0xf3, 0x56, 0x25,
	0x86, 0x98, 0x4e, 0xdd, 0x86, 0x9a, 0x4c, 0x90, 0x6c, 0x34, 0xe3, 0x20, 0x64, 0xbd, 0xc9, 0xb1,
	0xe7, 0xda, 0xfd, 0x31, 0x19, 0xdd, 0xc2, 0xcc, 0x9f, 0x9a, 0x04, 0xcd, 0xfb, 0x4d, 0xee, 0xa9,
	0x89, 0xc1, 0x47, 0x11, 0x0d, 0x4d, 0xa7, 0x6e, 0xc2, 0x56, 0x62, 0x9f, 0xac, 0x02, 0x73, 0xe8,
	0x07, 0x21, 0x75, 0x38, 0x5a, 0x3c, 0x9d, 0xf2, 0x88, 0xaf, 0x24, 0x4a, 0x8d, 0x31, 0x59, 0x73,
	0xfe, 0xc7, 0x0a, 0xdc, 0x4f, 0x65, 0x9d, 0x12, 0xd6, 0x96, 0x13, 0xc1, 0x6d, 0x69, 0x2e, 0x3a,
	0x52, 0x9a, 0x76, 0xe4, 0x29, 0x2c, 0x8f, 0x69, 0x18, 0x05, 0x3e, 0xc1, 0xb9, 0x26, 0x5a, 0x8d,
	0x61, 0x22, 0x7b, 0x08, 0xe6, 0x19, 0xbd, 0x60, 0x22, 0x6b, 0x15, 0x4b, 0xfc, 0x47, 0x8f, 0xa0,
	0xc2, 0xdc, 0x11, 0x8d, 0x18, 0x19, 0x8d, 0xb5, 0x05, 0xa9, 0x33, 0x05, 0xf0, 0xbb, 0x14, 0x4d,
	0x86, 0x43, 0x1a, 0x31, 0x2c, 0x27, 0x80, 0xbc, 0x7f, 0x8b, 0x82, 0x7a, 0x23, 0x26, 0x90, 0x03,
	0x48, 0xea, 0x25, 0xda, 0x83, 0xfb, 0x53, 0xac, 0xc2, 0xac, 0x25, 0xa1, 0xfb, 0x5e, 0x81, 0x49,
	0x18, 0x77, 0x00, 0x4f, 0x4e, 0x88, 0xcf, 0x48, 0x74, 0x89, 0x9d, 0x90, 0x9c, 0x30, 0x1c, 0xbc,
	0xf5, 0x69, 0x98, 0xd7, 0x57, 0x16, 0xfa, 0x6a, 0x31, 0x55, 0x93, 0x13, 0x75, 0x39, 0x4d, 0xa6,
	0xb3, 0x09, 0xdb, 0x45, 0x19, 0x63, 0x8f, 0x5c, 0x16, 0x85, 0x54, 0x84, 0x90, 0x87, 0x79, 0x21,
	0x3d, 0x41, 0x94, 0x49, 0xd9, 0x82, 0x32, 0x3d, 0xa7, 0x92, 0x1c, 0xe4, 0xc5, 0x15, 0x67, 0xd3,
	0x41, 0x3f, 0x84, 0xcd, 0x29, 0xa7, 0x58, 0x80, 0xbd, 0xe0, 0xf8, 0xf8, 0x52, 0xab, 0xee, 0x28,
	0xbb, 0x65, 0x6b, 0xbd, 0xe0, 0xd8, 0x20, 0x68, 0x71, 0x1c, 0xcf, 0x8d, 0x94, 0x38, 0x0e, 0x5c,
	0x9f, 0x45, 0xda, 0xb2, 0x90, 0x5a, 0x15, 0xb0, 0x9e, 0x00, 0xa1, 0x87, 0x50, 0xb1, 0x03, 0xd7,
	0xc7, 0x27, 0x9e, 0x3b, 0xd6, 0x56, 0x84, 0xac, 0x32, 0x07, 0x1c, 0x7a, 0xee, 0x18, 0x6d, 0x43,
	0x25, 0xf6, 0xc4, 0x75, 0xb4, 0xd5, 0x1d, 0x65, 0x77, 0xe1, 0x79, 0xe9, 0xa3, 0xef, 0x59, 0x65,
	0x09, 0x34, 0x1d, 0xf4, 0x63, 0xd0, 0xc4, 0xc0, 0x88, 0xc7, 0x61, 0x70, 0xe2, 0x7a, 0x85, 0x34,
	0xad, 0x09, 0x65, 0x0f, 0x04, 0xbe, 0x27, 0xd1, 0x99, 0xaf, 0x33, 0xca, 0x5f, 0x9d, 0x51, 0xfe,
	0xe8, 0x27, 0x50, 0x71, 0x5c, 0x9b, 0xe2, 0x30, 0xf0, 0x3c, 0xed, 0xde, 0x8e, 0xb2, 0x5b, 0xdd,
	0xaf, 0x67, 0xbd, 0x71, 0xaa, 0x92, 0xf7, 0x9a, 0xae, 0x4d, 0xad, 0xc0, 0xf3, 0xac, 0xb2, 0x13,
	0xff, 0x43, 0xef, 0xc1, 0x6a, 0x6c, 0x21, 0x09, 0xd9, 0x25, 0xd7, 0x83, 0x44, 0x05, 0x2f, 0x4b,
	0xbb, 0x38, 0xd0, 0x74, 0x32, 0x2a, 0x11, 0x53, 0x4e, 0x75, 0x3f, 0x47, 0x25, 0x82, 0x69, 0x3a,
	0xe8, 0x39, 0xd4, 0xf2, 0x54, 0xf6, 0x24, 0x62, 0xc1, 0x08, 0x0f, 0xc9, 0x88, 0x72, 0x8e, 0x75,
	0xc1, 0xb1, 0x91, 0x71, 0x34, 0x04, 0xfe, 0x05, 0x19, 0xd1, 0xb8, 0x2c, 0x73, 0xbc, 0x63, 0x12,
	0x45, 0x67, 0xf4, 0x52, 0x7b, 0x10, 0x97, 0x65, 0xca, 0xd4, 0x93, 0x08, 0x9e, 0xf1, 0x99, 0xaf,
	0x89, 0xeb, 0x68, 0x1b, 0x22, 0x50, 0xeb, 0x57, 0xdf, 0x12, 0xd3, 0xc9, 0xf5, 0xdf, 0xcd, 0x7c,
	0xff, 0xe5, 0x17, 0xca, 0xa3, 0x43, 0x62, 0x5f, 0xe2, 0x63, 0xc2, 0x98, 0x47, 0xb1, 0x3d, 0x19,
	0xe3, 0x73, 0xd7, 0x66, 0x41, 0x78, 0xa9, 0x69, 0x22, 0xed, 0x1b, 0x92, 0xe0, 0x40, 0xe0, 0x1b,
	0x93, 0xf1, 0x6b, 0x89, 0xe5, 0xf3, 0x5f, 0x8e, 0x27, 0x62, 0x21, 0x25, 0x67, 0xda, 0x63, 0x39,
	0xff, 0x1d, 0x27, 0xc4, 0x7d, 0x01, 0x46, 0xdb, 0x50, 0x3d, 0x26, 0xce, 0x90, 0x62, 0x8f, 0x9e,
	0x53, 0x4f, 0xdb, 0x12, 0x54, 0x20, 0x40, 0x2d, 0x0e, 0x41, 0xff, 0x0f, 0x49, 0xa5, 0xe2, 0x31,
	0x9f, 0xb4, 0x4f, 0x69, 0x18, 0x70, 0x9f, 0x6a, 0x82, 0x32, 0xb9, 0x9e, 0x3d, 0xd7, 0x3e, 0x7b,
	0x49, 0xc3, 0xc0, 0x74, 0xd0, 0xf7, 0x61, 0xe3, 0x2a, 0x43, 0x18, 0x78, 0x54, 0x7b, 0x28, 0x42,
	0x77, 0x7f, 0x8a, 0xc5, 0x0a, 0x3c, 0x8a, 0x3e, 0xca, 0x7a, 0xc0, 0x31, 0xf1, 0x53, 0x25, 0x4f,
	0x64, 0x63, 0x8c, 0x51, 0x07, 0xc4, 0x8f, 0x75, 0xac, 0xc3, 0x02, 0xa3, 0x61, 0x44, 0xb5, 0x47,
	0x22, 0x10, 0xf2, 0xc0, 0x2f, 0x8f, 0x6c, 0xa1, 0x78, 0x34, 0x61, 0xd4, 0xd1, 0xb6, 0x05, 0xb2,
	0x2a, 0x61, 0x6d, 0x0e, 0x42, 0x6d, 0x58, 0x61, 0xa1, 0x7b, 0xee, 0x12, 0x4c, 0xfc, 0xe8, 0x2d,
	0x0d, 0xb5, 0x1d, 0x51, 0xa1, 0xbb, 0xd7, 0x57, 0xe8, 0x40, 0x90, 0xeb, 0x82, 0x9a, 0x3a, 0xd6,
	0x32, 0xcb, 0x9d, 0x6b, 0x5f, 0x40, 0x39, 0xa9, 0x60, 0xde, 0x0c, 0x78, 0xcd, 0xe3, 0x91, 0xeb,
	0x8b, 0x96, 0xbc, 0x60, 0x2d, 0xf1, 0x73, 0xdb, 0xf5, 0x33, 0x14, 0xb9, 0x10, 0xed, 0x38, 0x41,
	0x91, 0x0b, 0x9e, 0xfe, 0x78, 0x3c, 0x9e, 0x13, 0x88, 0xf8, 0x54, 0xfb, 0xa7, 0x02, 0xab, 0x45,
	0xd5, 0x3c, 0x55, 0x62, 0x38, 0xe2, 0xb3, 0x40, 0xda, 0xf6, 0x21, 0x01, 0xc9, 0xc6, 0x2e, 0xbd,
	0xc2, 0xae, 0xef, 0xd0, 0x8b, 0xf8, 0x79, 0xaa, 0x4a, 0x98, 0xc9, 0x41, 0xe8, 0x47, 0xb0, 0x29,
	0xaf, 0x55, 0xc2, 0x16, 0x61, 0x3b, 0x08, 0x43, 0x6a, 0xb3, 0xf8, 0xf9, 0x7f, 0x20, 0xd0, 0x9f,
	0x25, 0xd8, 0x86, 0x44, 0xa2, 0x1f, 0xc0, 0xc6, 0x34, 0xdf, 0xb9, 0x4b, 0xdf, 0x52, 0x27, 0x1e,
	0x48, 0xd6, 0x8b, 0x6c, 0xaf, 0x05, 0x8e, 0x5f, 0x21, 0xc9, 0x15, 0xc7, 0x3c, 0x6e, 0x6a, 0xf2,
	0xf1, 0xb8, 0x27, 0x50, 0xd2, 0x47, 0xd9, 0xda, 0xea, 0xbf, 0x55, 0x00, 0x15, 0x73, 0x20, 0xa6,
	0x9a, 0x2d, 0x28, 0x47, 0x8c, 0x92, 0x51, 0xe2, 0xf5, 0xa2, 0xb5, 0x24, 0xce, 0x33, 0xde, 0xb2,
	0xd2, 0xd5, 0xb7, 0x6c, 0x46, 0xe3, 0x9a, 0x9b, 0xd5, 0xb8, 0xb2, 0x8b, 0x38, 0x5f, 0x18, 0x84,
	0xfe, 0xbd, 0x28, 0x97, 0xb5, 0x19, 0x83, 0x50, 0x3a, 0x49, 0xd6, 0xa0, 0x1c, 0xc6, 0xff, 0xe3,
	0xbc, 0xa4, 0xe7, 0x6f, 0x32, 0x2c, 0x15, 0x1f, 0xec, 0x39, 0xe1, 0x62, 0xee, 0xc1, 0xde, 0x86,
	0xea, 0x88, 0x5c, 0xe0, 0x64, 0xe0, 0x94, 0xe6, 0xc1, 0x88, 0x5c, 0xb4, 0xe3, 0xf9, 0x71, 0x3f,
	0x9b, 0x46, 0x17, 0xc4, 0x34, 0xaa, 0xcd, 0xaa, 0xe7, 0xe2, 0xcc, 0x39, 0x3d, 0xa0, 0x2d, 0x7e,
	0x5b, 0x03, 0x1a, 0xb2, 0xd2, 0x92, 0x5e, 0x12, 0x32, 0x9f, 0x15, 0x8d, 0xb9, 0x26, 0x86, 0xc9,
	0xbe, 0xb7, 0xfc, 0x69, 0xd7, 0xec, 0xe0, 0xe9, 0xa5, 0xef, 0x43, 0xb8, 0x37, 0xb4, 0xb1, 0xeb,
	0xbb, 0xcc, 0x25, 0x8c, 0x3a, 0xf8, 0xcb, 0xc0, 0xf5, 0xc5, 0x33, 0x5f, 0xb6, 0xd6, 0x86, 0xb6,
	0x99, 0xc0, 0xb9, 0xec, 0x59, 0x09, 0xaf, 0xcc, 0x4a, 0xf8, 0x07, 0xb0, 0xf6, 0x96, 0x7a, 0x76,
	0x30, 0xa2, 0x38, 0xfe, 0xd4, 0x22, 0x1e, 0xf1, 0x8a, 0xb5, 0x1a, 0x83, 0xe3, 0x16, 0x50, 0xff,
	0x57, 0x29, 0xdd, 0x2a, 0x55, 0x28, 0xd8, 0xa7, 0xbe, 0xc3, 0x17, 0x28, 0xb3, 0xf3, 0x5a, 0x6f,
	0x99, 0xcd, 0x74, 0xb5, 0x1a, 0xbc, 0xe9, 0x19, 0xaa, 0x82, 0x1e, 0xc0, 0x3d, 0xbd, 0xd1, 0xe8,
	0x1e, 0x75, 0x06, 0x62, 0xdf, 0x3b, 0xec, 0x1e, 0x75, 0x9a, 0x6a, 0x09, 0xad, 0x02, 0xe8, 0x8d,
	0x97, 0x98, 0x6f, 0x48, 0x06, 0xdf, 0x26, 0x1f, 0xc3, 0x16, 0xdf, 0xb8, 0xb0, 0xd9, 0xc1, 0x83,
	0x6e, 0x17, 0xb7, 0xf5, 0xce, 0x9b, 0x44, 0x52, 0x5f, 0x9d, 0x47, 0x9b, 0x70, 0x3f, 0x5b, 0xea,
	0xb0, 0xf1, 0x45, 0xc3, 0x30, 0x9a, 0x46, 0x53, 0x5d, 0xe0, 0xa6, 0x24, 0x0a, 0x0f, 0x8f, 0x5a,
	0x2d, 0x75, 0x91, 0xaf, 0xb2, 0x79, 0x08, 0xee, 0xbe, 0x36, 0xac, 0xc3, 0x56, 0xf7, 0x73, 0xa3,
	0xa9, 0x2e, 0xa1, 0x0d, 0x40, 0x52, 0x25, 0x1e, 0x74, 0xb1, 0xde, 0x6c, 0xca, 0x35, 0xaf, 0xcc,
	0x97, 0xb5, 0xbc, 0xdd, 0xb8, 0x69, 0xf6, 0xf5, 0x03, 0x6e, 0x59, 0x05, 0x3d, 0x81, 0x5a, 0xcf,
	0x32, 0x5f, 0x73, 0xed, 0x8d, 0x97, 0xfa, 0x40, 0x6e, 0x99, 0x46, 0x62, 0x39, 0x5c, 0xc1, 0x17,
	0x97, 0xe1, 0x2a, 0x7a, 0x17, 0xb6, 0x67, 0xf1, 0xf3, 0xc5, 0x3b, 0x11, 0xb2, 0xcc, 0xfd, 0x2b,
	0x10, 0xf1, 0x4d, 0xd2, 0x68, 0xaa, 0x2b, 0xf5, 0x50, 0x7e, 0x36, 0x9a, 0x2a, 0xc5, 0xc3, 0x89,
	0xe7, 0x1d, 0x8d, 0xf9, 0x2a, 0x34, 0x63, 0x5e, 0x2f, 0xdc, 0x9a, 0xfd, 0xe9, 0x15, 0xed, 0xf6,
	0x4b, 0x51, 0xff, 0xab, 0x02, 0x4f, 0x12, 0x7c, 0x97, 0x9d, 0xd2, 0x90, 0x17, 0x14, 0x75, 0x6e,
	0x5e, 0x31, 0x16, 0x6f, 0x1a, 0xae, 0x67, 0x34, 0xa4, 0x7c, 0x3b, 0x9b, 0x2b, 0xb6, 0xb3, 0x19,
	0xa5, 0x3b, 0x7f, 0x73, 0xaf, 0x5a, 0x28, 0xf4, 0xaa, 0xaf, 0x14, 0x78, 0x54, 0xb0, 0xbf, 0x45,
	0x4f, 0xd8, 0x7f, 0x61, 0x7d, 0xde, 0xb4, 0xd2, 0xad, 0xa6, 0xcd, 0x6a, 0xa3, 0xf5, 0xbf, 0x95,
	0xb2, 0x76, 0x99, 0xd3, 0x2c, 0x23, 0xfd, 0xcd, 0x32, 0xf7, 0x1e, 0xac, 0x7a, 0xf4, 0x84, 0xe1,
	0xc4, 0x14, 0x99, 0xc0, 0x45, 0x6b, 0x99, 0x43, 0xfb, 0xd2, 0x9e, 0x08, 0xbd, 0x81, 0xd5, 0x2f,
	0x45, 0x76, 0xd2, 0xc6, 0x38, 0x37, 0xbd, 0x89, 0xdf, 0x60, 0xc3, 0x9e, 0xcc, 0x6c, 0x5c, 0x00,
	0x2b, 0x5f, 0xe6, 0x4e, 0x51, 0xed, 0xd7, 0x0a, 0x2c, 0xe7, 0xf1, 0xdf, 0xf1, 0x0b, 0xb4, 0x93,
	0x15, 0x65, 0xfc, 0x7d, 0x24, 0xe7, 0x54, 0xcb, 0x8d, 0x58, 0xfd, 0xcf, 0x25, 0x78, 0xff, 0x66,
	0x92, 0xf4, 0xa9, 0x1a, 0x40, 0x39, 0xd6, 0x1a, 0x69, 0x8a, 0x08, 0xd8, 0xc7, 0xc5, 0x80, 0xdd,
	0xcc, 0xbf, 0x97, 0x6f, 0xdd, 0xa9, 0xa4, 0xda, 0x9f, 0x14, 0xa8, 0xde, 0xf4, 0x85, 0x40, 0xb9,
	0xfa, 0xe8, 0x6d, 0x43, 0xd5, 0x9f, 0x8c, 0x70, 0x76, 0x47, 0xc5, 0xab, 0xe6, 0x4f, 0x46, 0xed,
	0x6b, 0x5e, 0xa8, 0xb9, 0x6f, 0xed, 0x13, 0xc2, 0xc7, 0xd9, 0xa7, 0x0d, 0x2e, 0xe3, 0x05, 0x65,
	0x3c, 0x03, 0xdc, 0xcd, 0x5b, 0x4a, 0xb3, 0xfe, 0x9b, 0xa9, 0xea, 0xce, 0xb1, 0xa6, 0x11, 0xbe,
	0xa5, 0xba, 0x0f, 0xa7, 0xfb, 0xd2, 0xb3, 0xab, 0x05, 0x3b, 0x43, 0xec, 0xf4, 0x47, 0xa3, 0xda,
	0xcf, 0x95, 0xf4, 0xb3, 0xcf, 0x77, 0x5b, 0x9e, 0x7f, 0x50, 0xe4, 0x67, 0x95, 0x9c, 0xf1, 0xd2,
	0xae, 0x06, 0x5f, 0x1d, 0xbf, 0x49, 0x29, 0x4c, 0x67, 0xba, 0xf4, 0xad, 0x65, 0xfa, 0x6b, 0x05,
	0xea, 0xd7, 0xdb, 0x66, 0x5d, 0x37, 0xa3, 0xfd, 0x2f, 0x6d, 0xe4, 0xca, 0x65, 0x4e, 0xb1, 0xd8,
	0xb5, 0xe3, 0xe0, 0x57, 0x47, 0x99, 0x9d, 0xf5, 0xbf, 0x94, 0x8a, 0x21, 0x96, 0x82, 0x22, 0xc3,
	0x27, 0xc7, 0x1e, 0x75, 0xd0, 0x33, 0x40, 0x54, 0xfc, 0xc5, 0xc4, 0xf3, 0x70, 0x28, 0x91, 0xc2,
	0x89, 0xb2, 0xa5, 0x4a, 0x8c, 0xee, 0x79, 0x31, 0x13, 0xea, 0xc1, 0x9a, 0x84, 0x39, 0x29, 0xa9,
	0x2c, 0xc4, 0x0f, 0xae, 0x16, 0x62, 0x51, 0xd1, 0x9e, 0x3c, 0x5a, 0xab, 0x31, 0x7f, 0x8c, 0xad,
	0xfd, 0x5e, 0xe1, 0x03, 0x12, 0xff, 0x2f, 0x9c, 0x71, 0x7d, 0xec, 0x11, 0xe6, 0xb2, 0x89, 0x23,
	0x23, 0x59, 0xb2, 0xaa, 0x23, 0xd7, 0x6f, 0xc5, 0x20, 0x41, 0x42, 0x2e, 0x32, 0x92, 0x52, 0x4c,
	0x42, 0x2e, 0x52, 0x92, 0x77, 0x61, 0x45, 0x48, 0x09, 0xfc, 0xa1, 0xa4, 0x99, 0x13, 0x34, 0x5c,
	0x74, 0x2b, 0x81, 0x09, 0x22, 0x2e, 0x27, 0x25, 0x9a, 0x8f, 0x89, 0xc8, 0x45, 0x4a, 0x74, 0xb0,
	0xf0, 0x52, 0xf9, 0x4a, 0x79, 0xe7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x88, 0x4d, 0xb7,
	0x54, 0x1b, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.5
// source: dota_gcmessages_client_showcase.proto

package dota

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EShowcaseHeroPlusFlag int32

const (
	EShowcaseHeroPlusFlag_k_eShowcaseHeroPlusFlag_None           EShowcaseHeroPlusFlag = 0
	EShowcaseHeroPlusFlag_k_eShowcaseHeroPlusFlag_BadgePosTop    EShowcaseHeroPlusFlag = 1
	EShowcaseHeroPlusFlag_k_eShowcaseHeroPlusFlag_BadgePosBottom EShowcaseHeroPlusFlag = 2
	EShowcaseHeroPlusFlag_k_eShowcaseHeroPlusFlag_BadgePosLeft   EShowcaseHeroPlusFlag = 4
	EShowcaseHeroPlusFlag_k_eShowcaseHeroPlusFlag_BadgePosRight  EShowcaseHeroPlusFlag = 8
	EShowcaseHeroPlusFlag_k_eShowcaseHeroPlusFlag_ShowRelics     EShowcaseHeroPlusFlag = 16
)

// Enum value maps for EShowcaseHeroPlusFlag.
var (
	EShowcaseHeroPlusFlag_name = map[int32]string{
		0:  "k_eShowcaseHeroPlusFlag_None",
		1:  "k_eShowcaseHeroPlusFlag_BadgePosTop",
		2:  "k_eShowcaseHeroPlusFlag_BadgePosBottom",
		4:  "k_eShowcaseHeroPlusFlag_BadgePosLeft",
		8:  "k_eShowcaseHeroPlusFlag_BadgePosRight",
		16: "k_eShowcaseHeroPlusFlag_ShowRelics",
	}
	EShowcaseHeroPlusFlag_value = map[string]int32{
		"k_eShowcaseHeroPlusFlag_None":           0,
		"k_eShowcaseHeroPlusFlag_BadgePosTop":    1,
		"k_eShowcaseHeroPlusFlag_BadgePosBottom": 2,
		"k_eShowcaseHeroPlusFlag_BadgePosLeft":   4,
		"k_eShowcaseHeroPlusFlag_BadgePosRight":  8,
		"k_eShowcaseHeroPlusFlag_ShowRelics":     16,
	}
)

func (x EShowcaseHeroPlusFlag) Enum() *EShowcaseHeroPlusFlag {
	p := new(EShowcaseHeroPlusFlag)
	*p = x
	return p
}

func (x EShowcaseHeroPlusFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShowcaseHeroPlusFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[0].Descriptor()
}

func (EShowcaseHeroPlusFlag) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[0]
}

func (x EShowcaseHeroPlusFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShowcaseHeroPlusFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShowcaseHeroPlusFlag(num)
	return nil
}

// Deprecated: Use EShowcaseHeroPlusFlag.Descriptor instead.
func (EShowcaseHeroPlusFlag) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{0}
}

type EShowcaseType int32

const (
	EShowcaseType_k_eShowcaseType_Invalid            EShowcaseType = 0
	EShowcaseType_k_eShowcaseType_Profile            EShowcaseType = 1
	EShowcaseType_k_eShowcaseType_MiniProfile        EShowcaseType = 2
	EShowcaseType_k_eShowcaseType_DefaultProfile     EShowcaseType = 3
	EShowcaseType_k_eShowcaseType_DefaultMiniProfile EShowcaseType = 4
)

// Enum value maps for EShowcaseType.
var (
	EShowcaseType_name = map[int32]string{
		0: "k_eShowcaseType_Invalid",
		1: "k_eShowcaseType_Profile",
		2: "k_eShowcaseType_MiniProfile",
		3: "k_eShowcaseType_DefaultProfile",
		4: "k_eShowcaseType_DefaultMiniProfile",
	}
	EShowcaseType_value = map[string]int32{
		"k_eShowcaseType_Invalid":            0,
		"k_eShowcaseType_Profile":            1,
		"k_eShowcaseType_MiniProfile":        2,
		"k_eShowcaseType_DefaultProfile":     3,
		"k_eShowcaseType_DefaultMiniProfile": 4,
	}
)

func (x EShowcaseType) Enum() *EShowcaseType {
	p := new(EShowcaseType)
	*p = x
	return p
}

func (x EShowcaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShowcaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[1].Descriptor()
}

func (EShowcaseType) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[1]
}

func (x EShowcaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShowcaseType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShowcaseType(num)
	return nil
}

// Deprecated: Use EShowcaseType.Descriptor instead.
func (EShowcaseType) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{1}
}

type EShowcaseItemState int32

const (
	EShowcaseItemState_k_eShowcaseItemState_Ok                 EShowcaseItemState = 0
	EShowcaseItemState_k_eShowcaseItemState_MinorModifications EShowcaseItemState = 1
	EShowcaseItemState_k_eShowcaseItemState_ValidityUnknown    EShowcaseItemState = 2
	EShowcaseItemState_k_eShowcaseItemState_PartiallyInvalid   EShowcaseItemState = 3
	EShowcaseItemState_k_eShowcaseItemState_Invalid            EShowcaseItemState = 4
	EShowcaseItemState_k_eShowcaseItemState_Failure            EShowcaseItemState = 5
)

// Enum value maps for EShowcaseItemState.
var (
	EShowcaseItemState_name = map[int32]string{
		0: "k_eShowcaseItemState_Ok",
		1: "k_eShowcaseItemState_MinorModifications",
		2: "k_eShowcaseItemState_ValidityUnknown",
		3: "k_eShowcaseItemState_PartiallyInvalid",
		4: "k_eShowcaseItemState_Invalid",
		5: "k_eShowcaseItemState_Failure",
	}
	EShowcaseItemState_value = map[string]int32{
		"k_eShowcaseItemState_Ok":                 0,
		"k_eShowcaseItemState_MinorModifications": 1,
		"k_eShowcaseItemState_ValidityUnknown":    2,
		"k_eShowcaseItemState_PartiallyInvalid":   3,
		"k_eShowcaseItemState_Invalid":            4,
		"k_eShowcaseItemState_Failure":            5,
	}
)

func (x EShowcaseItemState) Enum() *EShowcaseItemState {
	p := new(EShowcaseItemState)
	*p = x
	return p
}

func (x EShowcaseItemState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShowcaseItemState) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[2].Descriptor()
}

func (EShowcaseItemState) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[2]
}

func (x EShowcaseItemState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShowcaseItemState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShowcaseItemState(num)
	return nil
}

// Deprecated: Use EShowcaseItemState.Descriptor instead.
func (EShowcaseItemState) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{2}
}

type EShowcaseAuditAction int32

const (
	EShowcaseAuditAction_k_eShowcaseAuditAction_Invalid                    EShowcaseAuditAction = 0
	EShowcaseAuditAction_k_eShowcaseAuditAction_ShowcaseChanged            EShowcaseAuditAction = 1
	EShowcaseAuditAction_k_eShowcaseAuditAction_AdminShowcaseReset         EShowcaseAuditAction = 2
	EShowcaseAuditAction_k_eShowcaseAuditAction_AdminShowcaseAccountLocked EShowcaseAuditAction = 3
	EShowcaseAuditAction_k_eShowcaseAuditAction_AdminShowcaseExonerated    EShowcaseAuditAction = 4
	EShowcaseAuditAction_k_eShowcaseAuditAction_AdminShowcaseConvicted     EShowcaseAuditAction = 5
	EShowcaseAuditAction_k_eShowcaseAuditAction_AdminModerationApproved    EShowcaseAuditAction = 6
	EShowcaseAuditAction_k_eShowcaseAuditAction_AdminModerationRejected    EShowcaseAuditAction = 7
)

// Enum value maps for EShowcaseAuditAction.
var (
	EShowcaseAuditAction_name = map[int32]string{
		0: "k_eShowcaseAuditAction_Invalid",
		1: "k_eShowcaseAuditAction_ShowcaseChanged",
		2: "k_eShowcaseAuditAction_AdminShowcaseReset",
		3: "k_eShowcaseAuditAction_AdminShowcaseAccountLocked",
		4: "k_eShowcaseAuditAction_AdminShowcaseExonerated",
		5: "k_eShowcaseAuditAction_AdminShowcaseConvicted",
		6: "k_eShowcaseAuditAction_AdminModerationApproved",
		7: "k_eShowcaseAuditAction_AdminModerationRejected",
	}
	EShowcaseAuditAction_value = map[string]int32{
		"k_eShowcaseAuditAction_Invalid":                    0,
		"k_eShowcaseAuditAction_ShowcaseChanged":            1,
		"k_eShowcaseAuditAction_AdminShowcaseReset":         2,
		"k_eShowcaseAuditAction_AdminShowcaseAccountLocked": 3,
		"k_eShowcaseAuditAction_AdminShowcaseExonerated":    4,
		"k_eShowcaseAuditAction_AdminShowcaseConvicted":     5,
		"k_eShowcaseAuditAction_AdminModerationApproved":    6,
		"k_eShowcaseAuditAction_AdminModerationRejected":    7,
	}
)

func (x EShowcaseAuditAction) Enum() *EShowcaseAuditAction {
	p := new(EShowcaseAuditAction)
	*p = x
	return p
}

func (x EShowcaseAuditAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShowcaseAuditAction) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[3].Descriptor()
}

func (EShowcaseAuditAction) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[3]
}

func (x EShowcaseAuditAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShowcaseAuditAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShowcaseAuditAction(num)
	return nil
}

// Deprecated: Use EShowcaseAuditAction.Descriptor instead.
func (EShowcaseAuditAction) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{3}
}

type EShowcaseItemFlag int32

const (
	EShowcaseItemFlag_k_eShowcaseItemFlag_None             EShowcaseItemFlag = 0
	EShowcaseItemFlag_k_eShowcaseItemFlag_FlipHorizontally EShowcaseItemFlag = 1
)

// Enum value maps for EShowcaseItemFlag.
var (
	EShowcaseItemFlag_name = map[int32]string{
		0: "k_eShowcaseItemFlag_None",
		1: "k_eShowcaseItemFlag_FlipHorizontally",
	}
	EShowcaseItemFlag_value = map[string]int32{
		"k_eShowcaseItemFlag_None":             0,
		"k_eShowcaseItemFlag_FlipHorizontally": 1,
	}
)

func (x EShowcaseItemFlag) Enum() *EShowcaseItemFlag {
	p := new(EShowcaseItemFlag)
	*p = x
	return p
}

func (x EShowcaseItemFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShowcaseItemFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[4].Descriptor()
}

func (EShowcaseItemFlag) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[4]
}

func (x EShowcaseItemFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShowcaseItemFlag) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShowcaseItemFlag(num)
	return nil
}

// Deprecated: Use EShowcaseItemFlag.Descriptor instead.
func (EShowcaseItemFlag) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{4}
}

type EShowcaseItemFlag_Hero int32

const (
	EShowcaseItemFlag_Hero_k_eShowcaseItemFlag_Hero_None              EShowcaseItemFlag_Hero = 0
	EShowcaseItemFlag_Hero_k_eShowcaseItemFlag_Hero_ShowPedestal      EShowcaseItemFlag_Hero = 1
	EShowcaseItemFlag_Hero_k_eShowcaseItemFlag_Hero_UseCurrentLoadout EShowcaseItemFlag_Hero = 2
	EShowcaseItemFlag_Hero_k_eShowcaseItemFlag_Hero_ShowHeroCard      EShowcaseItemFlag_Hero = 4
	EShowcaseItemFlag_Hero_k_eShowcaseItemFlag_Hero_HeroCardHideName  EShowcaseItemFlag_Hero = 8
	EShowcaseItemFlag_Hero_k_eShowcaseItemFlag_Hero_HeroCardUseMovie  EShowcaseItemFlag_Hero = 16
)

// Enum value maps for EShowcaseItemFlag_Hero.
var (
	EShowcaseItemFlag_Hero_name = map[int32]string{
		0:  "k_eShowcaseItemFlag_Hero_None",
		1:  "k_eShowcaseItemFlag_Hero_ShowPedestal",
		2:  "k_eShowcaseItemFlag_Hero_UseCurrentLoadout",
		4:  "k_eShowcaseItemFlag_Hero_ShowHeroCard",
		8:  "k_eShowcaseItemFlag_Hero_HeroCardHideName",
		16: "k_eShowcaseItemFlag_Hero_HeroCardUseMovie",
	}
	EShowcaseItemFlag_Hero_value = map[string]int32{
		"k_eShowcaseItemFlag_Hero_None":              0,
		"k_eShowcaseItemFlag_Hero_ShowPedestal":      1,
		"k_eShowcaseItemFlag_Hero_UseCurrentLoadout": 2,
		"k_eShowcaseItemFlag_Hero_ShowHeroCard":      4,
		"k_eShowcaseItemFlag_Hero_HeroCardHideName":  8,
		"k_eShowcaseItemFlag_Hero_HeroCardUseMovie":  16,
	}
)

func (x EShowcaseItemFlag_Hero) Enum() *EShowcaseItemFlag_Hero {
	p := new(EShowcaseItemFlag_Hero)
	*p = x
	return p
}

func (x EShowcaseItemFlag_Hero) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EShowcaseItemFlag_Hero) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[5].Descriptor()
}

func (EShowcaseItemFlag_Hero) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[5]
}

func (x EShowcaseItemFlag_Hero) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EShowcaseItemFlag_Hero) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EShowcaseItemFlag_Hero(num)
	return nil
}

// Deprecated: Use EShowcaseItemFlag_Hero.Descriptor instead.
func (EShowcaseItemFlag_Hero) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{5}
}

type CMsgShowcaseItem_PlayerMatch_EPlayerOutcome int32

const (
	CMsgShowcaseItem_PlayerMatch_k_eInvalid   CMsgShowcaseItem_PlayerMatch_EPlayerOutcome = 0
	CMsgShowcaseItem_PlayerMatch_k_eWin       CMsgShowcaseItem_PlayerMatch_EPlayerOutcome = 1
	CMsgShowcaseItem_PlayerMatch_k_eLoss      CMsgShowcaseItem_PlayerMatch_EPlayerOutcome = 2
	CMsgShowcaseItem_PlayerMatch_k_eNotScored CMsgShowcaseItem_PlayerMatch_EPlayerOutcome = 3
)

// Enum value maps for CMsgShowcaseItem_PlayerMatch_EPlayerOutcome.
var (
	CMsgShowcaseItem_PlayerMatch_EPlayerOutcome_name = map[int32]string{
		0: "k_eInvalid",
		1: "k_eWin",
		2: "k_eLoss",
		3: "k_eNotScored",
	}
	CMsgShowcaseItem_PlayerMatch_EPlayerOutcome_value = map[string]int32{
		"k_eInvalid":   0,
		"k_eWin":       1,
		"k_eLoss":      2,
		"k_eNotScored": 3,
	}
)

func (x CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) Enum() *CMsgShowcaseItem_PlayerMatch_EPlayerOutcome {
	p := new(CMsgShowcaseItem_PlayerMatch_EPlayerOutcome)
	*p = x
	return p
}

func (x CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[6].Descriptor()
}

func (CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[6]
}

func (x CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgShowcaseItem_PlayerMatch_EPlayerOutcome(num)
	return nil
}

// Deprecated: Use CMsgShowcaseItem_PlayerMatch_EPlayerOutcome.Descriptor instead.
func (CMsgShowcaseItem_PlayerMatch_EPlayerOutcome) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{6, 0}
}

type CMsgShowcase_EModerationState int32

const (
	CMsgShowcase_k_eModerationState_Ok              CMsgShowcase_EModerationState = 0
	CMsgShowcase_k_eModerationState_PendingApproval CMsgShowcase_EModerationState = 1
)

// Enum value maps for CMsgShowcase_EModerationState.
var (
	CMsgShowcase_EModerationState_name = map[int32]string{
		0: "k_eModerationState_Ok",
		1: "k_eModerationState_PendingApproval",
	}
	CMsgShowcase_EModerationState_value = map[string]int32{
		"k_eModerationState_Ok":              0,
		"k_eModerationState_PendingApproval": 1,
	}
)

func (x CMsgShowcase_EModerationState) Enum() *CMsgShowcase_EModerationState {
	p := new(CMsgShowcase_EModerationState)
	*p = x
	return p
}

func (x CMsgShowcase_EModerationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgShowcase_EModerationState) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[7].Descriptor()
}

func (CMsgShowcase_EModerationState) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[7]
}

func (x CMsgShowcase_EModerationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgShowcase_EModerationState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgShowcase_EModerationState(num)
	return nil
}

// Deprecated: Use CMsgShowcase_EModerationState.Descriptor instead.
func (CMsgShowcase_EModerationState) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{16, 0}
}

type CMsgClientToGCShowcaseGetUserDataResponse_EResponse int32

const (
	CMsgClientToGCShowcaseGetUserDataResponse_k_eInternalError   CMsgClientToGCShowcaseGetUserDataResponse_EResponse = 0
	CMsgClientToGCShowcaseGetUserDataResponse_k_eSuccess         CMsgClientToGCShowcaseGetUserDataResponse_EResponse = 1
	CMsgClientToGCShowcaseGetUserDataResponse_k_eTooBusy         CMsgClientToGCShowcaseGetUserDataResponse_EResponse = 2
	CMsgClientToGCShowcaseGetUserDataResponse_k_eDisabled        CMsgClientToGCShowcaseGetUserDataResponse_EResponse = 3
	CMsgClientToGCShowcaseGetUserDataResponse_k_eTimeout         CMsgClientToGCShowcaseGetUserDataResponse_EResponse = 4
	CMsgClientToGCShowcaseGetUserDataResponse_k_eUnknownShowcase CMsgClientToGCShowcaseGetUserDataResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseGetUserDataResponse_EResponse.
var (
	CMsgClientToGCShowcaseGetUserDataResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eUnknownShowcase",
	}
	CMsgClientToGCShowcaseGetUserDataResponse_EResponse_value = map[string]int32{
		"k_eInternalError":   0,
		"k_eSuccess":         1,
		"k_eTooBusy":         2,
		"k_eDisabled":        3,
		"k_eTimeout":         4,
		"k_eUnknownShowcase": 5,
	}
)

func (x CMsgClientToGCShowcaseGetUserDataResponse_EResponse) Enum() *CMsgClientToGCShowcaseGetUserDataResponse_EResponse {
	p := new(CMsgClientToGCShowcaseGetUserDataResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseGetUserDataResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseGetUserDataResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[8].Descriptor()
}

func (CMsgClientToGCShowcaseGetUserDataResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[8]
}

func (x CMsgClientToGCShowcaseGetUserDataResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseGetUserDataResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseGetUserDataResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseGetUserDataResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseGetUserDataResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{18, 0}
}

type CMsgClientToGCShowcaseSetUserDataResponse_EResponse int32

const (
	CMsgClientToGCShowcaseSetUserDataResponse_k_eInternalError            CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 0
	CMsgClientToGCShowcaseSetUserDataResponse_k_eSuccess                  CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 1
	CMsgClientToGCShowcaseSetUserDataResponse_k_eTooBusy                  CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 2
	CMsgClientToGCShowcaseSetUserDataResponse_k_eDisabled                 CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 3
	CMsgClientToGCShowcaseSetUserDataResponse_k_eTimeout                  CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 4
	CMsgClientToGCShowcaseSetUserDataResponse_k_eInvalid                  CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 5
	CMsgClientToGCShowcaseSetUserDataResponse_k_eLockedFromEditing        CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 6
	CMsgClientToGCShowcaseSetUserDataResponse_k_eBudgetExceeded           CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 7
	CMsgClientToGCShowcaseSetUserDataResponse_k_eCommunicationScoreTooLow CMsgClientToGCShowcaseSetUserDataResponse_EResponse = 8
)

// Enum value maps for CMsgClientToGCShowcaseSetUserDataResponse_EResponse.
var (
	CMsgClientToGCShowcaseSetUserDataResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eInvalid",
		6: "k_eLockedFromEditing",
		7: "k_eBudgetExceeded",
		8: "k_eCommunicationScoreTooLow",
	}
	CMsgClientToGCShowcaseSetUserDataResponse_EResponse_value = map[string]int32{
		"k_eInternalError":            0,
		"k_eSuccess":                  1,
		"k_eTooBusy":                  2,
		"k_eDisabled":                 3,
		"k_eTimeout":                  4,
		"k_eInvalid":                  5,
		"k_eLockedFromEditing":        6,
		"k_eBudgetExceeded":           7,
		"k_eCommunicationScoreTooLow": 8,
	}
)

func (x CMsgClientToGCShowcaseSetUserDataResponse_EResponse) Enum() *CMsgClientToGCShowcaseSetUserDataResponse_EResponse {
	p := new(CMsgClientToGCShowcaseSetUserDataResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseSetUserDataResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseSetUserDataResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[9].Descriptor()
}

func (CMsgClientToGCShowcaseSetUserDataResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[9]
}

func (x CMsgClientToGCShowcaseSetUserDataResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseSetUserDataResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseSetUserDataResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseSetUserDataResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseSetUserDataResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{20, 0}
}

type CMsgClientToGCShowcaseSubmitReportResponse_EResponse int32

const (
	CMsgClientToGCShowcaseSubmitReportResponse_k_eInternalError   CMsgClientToGCShowcaseSubmitReportResponse_EResponse = 0
	CMsgClientToGCShowcaseSubmitReportResponse_k_eSuccess         CMsgClientToGCShowcaseSubmitReportResponse_EResponse = 1
	CMsgClientToGCShowcaseSubmitReportResponse_k_eTooBusy         CMsgClientToGCShowcaseSubmitReportResponse_EResponse = 2
	CMsgClientToGCShowcaseSubmitReportResponse_k_eDisabled        CMsgClientToGCShowcaseSubmitReportResponse_EResponse = 3
	CMsgClientToGCShowcaseSubmitReportResponse_k_eTimeout         CMsgClientToGCShowcaseSubmitReportResponse_EResponse = 4
	CMsgClientToGCShowcaseSubmitReportResponse_k_eAlreadyReported CMsgClientToGCShowcaseSubmitReportResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseSubmitReportResponse_EResponse.
var (
	CMsgClientToGCShowcaseSubmitReportResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eAlreadyReported",
	}
	CMsgClientToGCShowcaseSubmitReportResponse_EResponse_value = map[string]int32{
		"k_eInternalError":   0,
		"k_eSuccess":         1,
		"k_eTooBusy":         2,
		"k_eDisabled":        3,
		"k_eTimeout":         4,
		"k_eAlreadyReported": 5,
	}
)

func (x CMsgClientToGCShowcaseSubmitReportResponse_EResponse) Enum() *CMsgClientToGCShowcaseSubmitReportResponse_EResponse {
	p := new(CMsgClientToGCShowcaseSubmitReportResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseSubmitReportResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseSubmitReportResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[10].Descriptor()
}

func (CMsgClientToGCShowcaseSubmitReportResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[10]
}

func (x CMsgClientToGCShowcaseSubmitReportResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseSubmitReportResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseSubmitReportResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseSubmitReportResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseSubmitReportResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{22, 0}
}

type CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eInternalError CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eSuccess       CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eTooBusy       CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eDisabled      CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eTimeout       CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eNoPermission  CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
	}
	CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
	}
)

func (x CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[11].Descriptor()
}

func (CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[11]
}

func (x CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{28, 0}
}

type CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eInternalError CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eSuccess       CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eTooBusy       CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eDisabled      CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eTimeout       CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eNoPermission  CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 5
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eNotFound      CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
		6: "k_eNotFound",
	}
	CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
		"k_eNotFound":      6,
	}
)

func (x CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[12].Descriptor()
}

func (CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[12]
}

func (x CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{30, 0}
}

type CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eInternalError CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eSuccess       CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eTooBusy       CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eDisabled      CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eTimeout       CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eNoPermission  CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
	}
	CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
	}
)

func (x CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[13].Descriptor()
}

func (CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[13]
}

func (x CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{35, 0}
}

type CMsgClientToGCShowcaseAdminResetResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminResetResponse_k_eInternalError CMsgClientToGCShowcaseAdminResetResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminResetResponse_k_eSuccess       CMsgClientToGCShowcaseAdminResetResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminResetResponse_k_eTooBusy       CMsgClientToGCShowcaseAdminResetResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminResetResponse_k_eDisabled      CMsgClientToGCShowcaseAdminResetResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminResetResponse_k_eTimeout       CMsgClientToGCShowcaseAdminResetResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminResetResponse_k_eNoPermission  CMsgClientToGCShowcaseAdminResetResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseAdminResetResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminResetResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
	}
	CMsgClientToGCShowcaseAdminResetResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
	}
)

func (x CMsgClientToGCShowcaseAdminResetResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminResetResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminResetResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminResetResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminResetResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[14].Descriptor()
}

func (CMsgClientToGCShowcaseAdminResetResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[14]
}

func (x CMsgClientToGCShowcaseAdminResetResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminResetResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminResetResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminResetResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminResetResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{37, 0}
}

type CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminLockAccountResponse_k_eInternalError CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminLockAccountResponse_k_eSuccess       CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminLockAccountResponse_k_eTooBusy       CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminLockAccountResponse_k_eDisabled      CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminLockAccountResponse_k_eTimeout       CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminLockAccountResponse_k_eNoPermission  CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
	}
	CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
	}
)

func (x CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[15].Descriptor()
}

func (CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[15]
}

func (x CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{39, 0}
}

type CMsgClientToGCShowcaseAdminConvictResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminConvictResponse_k_eInternalError    CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminConvictResponse_k_eSuccess          CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminConvictResponse_k_eTooBusy          CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminConvictResponse_k_eDisabled         CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminConvictResponse_k_eTimeout          CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminConvictResponse_k_eNoPermission     CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 5
	CMsgClientToGCShowcaseAdminConvictResponse_k_eAlreadyConvicted CMsgClientToGCShowcaseAdminConvictResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCShowcaseAdminConvictResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminConvictResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
		6: "k_eAlreadyConvicted",
	}
	CMsgClientToGCShowcaseAdminConvictResponse_EResponse_value = map[string]int32{
		"k_eInternalError":    0,
		"k_eSuccess":          1,
		"k_eTooBusy":          2,
		"k_eDisabled":         3,
		"k_eTimeout":          4,
		"k_eNoPermission":     5,
		"k_eAlreadyConvicted": 6,
	}
)

func (x CMsgClientToGCShowcaseAdminConvictResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminConvictResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminConvictResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminConvictResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminConvictResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[16].Descriptor()
}

func (CMsgClientToGCShowcaseAdminConvictResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[16]
}

func (x CMsgClientToGCShowcaseAdminConvictResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminConvictResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminConvictResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminConvictResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminConvictResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{41, 0}
}

type CMsgClientToGCShowcaseAdminExonerateResponse_EResponse int32

const (
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eInternalError     CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 0
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eSuccess           CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 1
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eTooBusy           CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 2
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eDisabled          CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 3
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eTimeout           CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 4
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eNoPermission      CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 5
	CMsgClientToGCShowcaseAdminExonerateResponse_k_eAlreadyExonerated CMsgClientToGCShowcaseAdminExonerateResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCShowcaseAdminExonerateResponse_EResponse.
var (
	CMsgClientToGCShowcaseAdminExonerateResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
		6: "k_eAlreadyExonerated",
	}
	CMsgClientToGCShowcaseAdminExonerateResponse_EResponse_value = map[string]int32{
		"k_eInternalError":     0,
		"k_eSuccess":           1,
		"k_eTooBusy":           2,
		"k_eDisabled":          3,
		"k_eTimeout":           4,
		"k_eNoPermission":      5,
		"k_eAlreadyExonerated": 6,
	}
)

func (x CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) Enum() *CMsgClientToGCShowcaseAdminExonerateResponse_EResponse {
	p := new(CMsgClientToGCShowcaseAdminExonerateResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[17].Descriptor()
}

func (CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[17]
}

func (x CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseAdminExonerateResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseAdminExonerateResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseAdminExonerateResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{43, 0}
}

type CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse int32

const (
	CMsgClientToGCShowcaseModerationGetQueueResponse_k_eInternalError CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse = 0
	CMsgClientToGCShowcaseModerationGetQueueResponse_k_eSuccess       CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse = 1
	CMsgClientToGCShowcaseModerationGetQueueResponse_k_eTooBusy       CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse = 2
	CMsgClientToGCShowcaseModerationGetQueueResponse_k_eDisabled      CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse = 3
	CMsgClientToGCShowcaseModerationGetQueueResponse_k_eTimeout       CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse = 4
	CMsgClientToGCShowcaseModerationGetQueueResponse_k_eNoPermission  CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse = 5
)

// Enum value maps for CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse.
var (
	CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
	}
	CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
	}
)

func (x CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) Enum() *CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse {
	p := new(CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[18].Descriptor()
}

func (CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[18]
}

func (x CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{46, 0}
}

type CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse int32

const (
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eInternalError CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 0
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eSuccess       CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 1
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eTooBusy       CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 2
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eDisabled      CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 3
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eTimeout       CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 4
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eNoPermission  CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 5
	CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eGone          CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse = 6
)

// Enum value maps for CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse.
var (
	CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse_name = map[int32]string{
		0: "k_eInternalError",
		1: "k_eSuccess",
		2: "k_eTooBusy",
		3: "k_eDisabled",
		4: "k_eTimeout",
		5: "k_eNoPermission",
		6: "k_eGone",
	}
	CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse_value = map[string]int32{
		"k_eInternalError": 0,
		"k_eSuccess":       1,
		"k_eTooBusy":       2,
		"k_eDisabled":      3,
		"k_eTimeout":       4,
		"k_eNoPermission":  5,
		"k_eGone":          6,
	}
)

func (x CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) Enum() *CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse {
	p := new(CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse)
	*p = x
	return p
}

func (x CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_dota_gcmessages_client_showcase_proto_enumTypes[19].Descriptor()
}

func (CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) Type() protoreflect.EnumType {
	return &file_dota_gcmessages_client_showcase_proto_enumTypes[19]
}

func (x CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse(num)
	return nil
}

// Deprecated: Use CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse.Descriptor instead.
func (CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse) EnumDescriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{48, 0}
}

type CMsgShowcaseEconItemReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	OriginalId         *uint64 `protobuf:"varint,2,opt,name=original_id,json=originalId" json:"original_id,omitempty"`
	DefinitionIndex    *uint32 `protobuf:"varint,3,opt,name=definition_index,json=definitionIndex" json:"definition_index,omitempty"`
	EquipmentSlotIndex *int32  `protobuf:"varint,4,opt,name=equipment_slot_index,json=equipmentSlotIndex" json:"equipment_slot_index,omitempty"`
}

func (x *CMsgShowcaseEconItemReference) Reset() {
	*x = CMsgShowcaseEconItemReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseEconItemReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseEconItemReference) ProtoMessage() {}

func (x *CMsgShowcaseEconItemReference) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseEconItemReference.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseEconItemReference) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgShowcaseEconItemReference) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgShowcaseEconItemReference) GetOriginalId() uint64 {
	if x != nil && x.OriginalId != nil {
		return *x.OriginalId
	}
	return 0
}

func (x *CMsgShowcaseEconItemReference) GetDefinitionIndex() uint32 {
	if x != nil && x.DefinitionIndex != nil {
		return *x.DefinitionIndex
	}
	return 0
}

func (x *CMsgShowcaseEconItemReference) GetEquipmentSlotIndex() int32 {
	if x != nil && x.EquipmentSlotIndex != nil {
		return *x.EquipmentSlotIndex
	}
	return 0
}

type CMsgHeroPlusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags *uint32 `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
}

func (x *CMsgHeroPlusInfo) Reset() {
	*x = CMsgHeroPlusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHeroPlusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHeroPlusInfo) ProtoMessage() {}

func (x *CMsgHeroPlusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHeroPlusInfo.ProtoReflect.Descriptor instead.
func (*CMsgHeroPlusInfo) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgHeroPlusInfo) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

type CMsgShowcaseItem_Trophy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     *CMsgShowcaseItem_Trophy_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	TrophyId *uint32                       `protobuf:"varint,2,opt,name=trophy_id,json=trophyId" json:"trophy_id,omitempty"`
}

func (x *CMsgShowcaseItem_Trophy) Reset() {
	*x = CMsgShowcaseItem_Trophy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Trophy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Trophy) ProtoMessage() {}

func (x *CMsgShowcaseItem_Trophy) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Trophy.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Trophy) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgShowcaseItem_Trophy) GetData() *CMsgShowcaseItem_Trophy_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_Trophy) GetTrophyId() uint32 {
	if x != nil && x.TrophyId != nil {
		return *x.TrophyId
	}
	return 0
}

type CMsgShowcaseItem_EconItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgShowcaseItem_EconItem_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Ref  *CMsgShowcaseEconItemReference  `protobuf:"bytes,2,opt,name=ref" json:"ref,omitempty"`
}

func (x *CMsgShowcaseItem_EconItem) Reset() {
	*x = CMsgShowcaseItem_EconItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_EconItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_EconItem) ProtoMessage() {}

func (x *CMsgShowcaseItem_EconItem) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_EconItem.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_EconItem) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgShowcaseItem_EconItem) GetData() *CMsgShowcaseItem_EconItem_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_EconItem) GetRef() *CMsgShowcaseEconItemReference {
	if x != nil {
		return x.Ref
	}
	return nil
}

type CMsgShowcaseItem_Hero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data                   *CMsgShowcaseItem_Hero_Data      `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	HeroId                 *uint32                          `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	EconItemRefs           []*CMsgShowcaseEconItemReference `protobuf:"bytes,3,rep,name=econ_item_refs,json=econItemRefs" json:"econ_item_refs,omitempty"`
	Rotation               *uint32                          `protobuf:"varint,4,opt,name=rotation" json:"rotation,omitempty"`
	Flags                  *uint32                          `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
	PlusInfo               *CMsgHeroPlusInfo                `protobuf:"bytes,6,opt,name=plus_info,json=plusInfo" json:"plus_info,omitempty"`
	AnimationName          *string                          `protobuf:"bytes,7,opt,name=animation_name,json=animationName" json:"animation_name,omitempty"`
	AnimationPlaybackSpeed *uint32                          `protobuf:"varint,8,opt,name=animation_playback_speed,json=animationPlaybackSpeed" json:"animation_playback_speed,omitempty"`
	AnimationOffset        *uint32                          `protobuf:"varint,9,opt,name=animation_offset,json=animationOffset" json:"animation_offset,omitempty"`
	Zoom                   *uint32                          `protobuf:"varint,10,opt,name=zoom" json:"zoom,omitempty"`
	SlotIndex              *uint32                          `protobuf:"varint,11,opt,name=slot_index,json=slotIndex" json:"slot_index,omitempty"`
	ModelIndex             *uint32                          `protobuf:"varint,12,opt,name=model_index,json=modelIndex" json:"model_index,omitempty"`
}

func (x *CMsgShowcaseItem_Hero) Reset() {
	*x = CMsgShowcaseItem_Hero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Hero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Hero) ProtoMessage() {}

func (x *CMsgShowcaseItem_Hero) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Hero.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Hero) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgShowcaseItem_Hero) GetData() *CMsgShowcaseItem_Hero_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_Hero) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetEconItemRefs() []*CMsgShowcaseEconItemReference {
	if x != nil {
		return x.EconItemRefs
	}
	return nil
}

func (x *CMsgShowcaseItem_Hero) GetRotation() uint32 {
	if x != nil && x.Rotation != nil {
		return *x.Rotation
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetPlusInfo() *CMsgHeroPlusInfo {
	if x != nil {
		return x.PlusInfo
	}
	return nil
}

func (x *CMsgShowcaseItem_Hero) GetAnimationName() string {
	if x != nil && x.AnimationName != nil {
		return *x.AnimationName
	}
	return ""
}

func (x *CMsgShowcaseItem_Hero) GetAnimationPlaybackSpeed() uint32 {
	if x != nil && x.AnimationPlaybackSpeed != nil {
		return *x.AnimationPlaybackSpeed
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetAnimationOffset() uint32 {
	if x != nil && x.AnimationOffset != nil {
		return *x.AnimationOffset
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetZoom() uint32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetSlotIndex() uint32 {
	if x != nil && x.SlotIndex != nil {
		return *x.SlotIndex
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero) GetModelIndex() uint32 {
	if x != nil && x.ModelIndex != nil {
		return *x.ModelIndex
	}
	return 0
}

type CMsgShowcaseItem_HeroIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        *CMsgShowcaseItem_HeroIcon_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	HeroId      *uint32                         `protobuf:"varint,2,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	EconItemRef *CMsgShowcaseEconItemReference  `protobuf:"bytes,3,opt,name=econ_item_ref,json=econItemRef" json:"econ_item_ref,omitempty"`
}

func (x *CMsgShowcaseItem_HeroIcon) Reset() {
	*x = CMsgShowcaseItem_HeroIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_HeroIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_HeroIcon) ProtoMessage() {}

func (x *CMsgShowcaseItem_HeroIcon) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_HeroIcon.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_HeroIcon) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgShowcaseItem_HeroIcon) GetData() *CMsgShowcaseItem_HeroIcon_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_HeroIcon) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgShowcaseItem_HeroIcon) GetEconItemRef() *CMsgShowcaseEconItemReference {
	if x != nil {
		return x.EconItemRef
	}
	return nil
}

type CMsgShowcaseItem_PlayerMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *CMsgShowcaseItem_PlayerMatch_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	MatchId    *uint64                            `protobuf:"varint,2,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
	PlayerSlot *uint32                            `protobuf:"varint,3,opt,name=player_slot,json=playerSlot" json:"player_slot,omitempty"`
}

func (x *CMsgShowcaseItem_PlayerMatch) Reset() {
	*x = CMsgShowcaseItem_PlayerMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_PlayerMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_PlayerMatch) ProtoMessage() {}

func (x *CMsgShowcaseItem_PlayerMatch) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_PlayerMatch.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_PlayerMatch) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgShowcaseItem_PlayerMatch) GetData() *CMsgShowcaseItem_PlayerMatch_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_PlayerMatch) GetMatchId() uint64 {
	if x != nil && x.MatchId != nil {
		return *x.MatchId
	}
	return 0
}

func (x *CMsgShowcaseItem_PlayerMatch) GetPlayerSlot() uint32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return 0
}

type CMsgShowcaseItem_ChatWheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data               *CMsgShowcaseItem_ChatWheel_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	ChatWheelMessageId *uint32                          `protobuf:"varint,2,opt,name=chat_wheel_message_id,json=chatWheelMessageId" json:"chat_wheel_message_id,omitempty"`
}

func (x *CMsgShowcaseItem_ChatWheel) Reset() {
	*x = CMsgShowcaseItem_ChatWheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_ChatWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_ChatWheel) ProtoMessage() {}

func (x *CMsgShowcaseItem_ChatWheel) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_ChatWheel.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_ChatWheel) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgShowcaseItem_ChatWheel) GetData() *CMsgShowcaseItem_ChatWheel_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_ChatWheel) GetChatWheelMessageId() uint32 {
	if x != nil && x.ChatWheelMessageId != nil {
		return *x.ChatWheelMessageId
	}
	return 0
}

type CMsgShowcaseItem_Emoticon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *CMsgShowcaseItem_Emoticon_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	EmoticonId *uint32                         `protobuf:"varint,2,opt,name=emoticon_id,json=emoticonId" json:"emoticon_id,omitempty"`
}

func (x *CMsgShowcaseItem_Emoticon) Reset() {
	*x = CMsgShowcaseItem_Emoticon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Emoticon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Emoticon) ProtoMessage() {}

func (x *CMsgShowcaseItem_Emoticon) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Emoticon.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Emoticon) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgShowcaseItem_Emoticon) GetData() *CMsgShowcaseItem_Emoticon_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_Emoticon) GetEmoticonId() uint32 {
	if x != nil && x.EmoticonId != nil {
		return *x.EmoticonId
	}
	return 0
}

type CMsgShowcaseItem_SpiderGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgShowcaseItem_SpiderGraph_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgShowcaseItem_SpiderGraph) Reset() {
	*x = CMsgShowcaseItem_SpiderGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_SpiderGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_SpiderGraph) ProtoMessage() {}

func (x *CMsgShowcaseItem_SpiderGraph) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_SpiderGraph.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_SpiderGraph) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgShowcaseItem_SpiderGraph) GetData() *CMsgShowcaseItem_SpiderGraph_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgShowcaseItem_UserFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgShowcaseItem_UserFeed_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgShowcaseItem_UserFeed) Reset() {
	*x = CMsgShowcaseItem_UserFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_UserFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_UserFeed) ProtoMessage() {}

func (x *CMsgShowcaseItem_UserFeed) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_UserFeed.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_UserFeed) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgShowcaseItem_UserFeed) GetData() *CMsgShowcaseItem_UserFeed_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgShowcaseItem_Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CMsgShowcaseItem_Stat_Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	StatId *CMsgDOTAProfileCard_EStatID `protobuf:"varint,2,opt,name=stat_id,json=statId,enum=dota.CMsgDOTAProfileCard_EStatID" json:"stat_id,omitempty"`
}

func (x *CMsgShowcaseItem_Stat) Reset() {
	*x = CMsgShowcaseItem_Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Stat) ProtoMessage() {}

func (x *CMsgShowcaseItem_Stat) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Stat.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Stat) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgShowcaseItem_Stat) GetData() *CMsgShowcaseItem_Stat_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseItem_Stat) GetStatId() CMsgDOTAProfileCard_EStatID {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return CMsgDOTAProfileCard_k_eStat_Wins
}

type CMsgShowcaseBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data             *CMsgShowcaseBackground_Data   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	LoadingScreenRef *CMsgShowcaseEconItemReference `protobuf:"bytes,2,opt,name=loading_screen_ref,json=loadingScreenRef" json:"loading_screen_ref,omitempty"`
	Dim              *uint32                        `protobuf:"varint,3,opt,name=dim" json:"dim,omitempty"`
	Blur             *uint32                        `protobuf:"varint,4,opt,name=blur" json:"blur,omitempty"`
	BackgroundId     *uint32                        `protobuf:"varint,5,opt,name=background_id,json=backgroundId" json:"background_id,omitempty"`
}

func (x *CMsgShowcaseBackground) Reset() {
	*x = CMsgShowcaseBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseBackground) ProtoMessage() {}

func (x *CMsgShowcaseBackground) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseBackground.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseBackground) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgShowcaseBackground) GetData() *CMsgShowcaseBackground_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgShowcaseBackground) GetLoadingScreenRef() *CMsgShowcaseEconItemReference {
	if x != nil {
		return x.LoadingScreenRef
	}
	return nil
}

func (x *CMsgShowcaseBackground) GetDim() uint32 {
	if x != nil && x.Dim != nil {
		return *x.Dim
	}
	return 0
}

func (x *CMsgShowcaseBackground) GetBlur() uint32 {
	if x != nil && x.Blur != nil {
		return *x.Blur
	}
	return 0
}

func (x *CMsgShowcaseBackground) GetBackgroundId() uint32 {
	if x != nil && x.BackgroundId != nil {
		return *x.BackgroundId
	}
	return 0
}

type CMsgShowcaseItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//
	//	*CMsgShowcaseItemData_Trophy
	//	*CMsgShowcaseItemData_EconItemIcon
	//	*CMsgShowcaseItemData_Sticker
	//	*CMsgShowcaseItemData_HeroModel
	//	*CMsgShowcaseItemData_PlayerMatch
	//	*CMsgShowcaseItemData_ChatWheel
	//	*CMsgShowcaseItemData_Spray
	//	*CMsgShowcaseItemData_Emoticon
	//	*CMsgShowcaseItemData_Courier
	//	*CMsgShowcaseItemData_Ward
	//	*CMsgShowcaseItemData_HeroIcon
	//	*CMsgShowcaseItemData_SpiderGraph
	//	*CMsgShowcaseItemData_UserFeed
	//	*CMsgShowcaseItemData_Stat
	//	*CMsgShowcaseItemData_Roshan
	//	*CMsgShowcaseItemData_Creep
	//	*CMsgShowcaseItemData_Tower
	//	*CMsgShowcaseItemData_Effigy
	//	*CMsgShowcaseItemData_Background
	Item isCMsgShowcaseItemData_Item `protobuf_oneof:"item"`
}

func (x *CMsgShowcaseItemData) Reset() {
	*x = CMsgShowcaseItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItemData) ProtoMessage() {}

func (x *CMsgShowcaseItemData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItemData.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItemData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{13}
}

func (m *CMsgShowcaseItemData) GetItem() isCMsgShowcaseItemData_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetTrophy() *CMsgShowcaseItem_Trophy {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Trophy); ok {
		return x.Trophy
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetEconItemIcon() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_EconItemIcon); ok {
		return x.EconItemIcon
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetSticker() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Sticker); ok {
		return x.Sticker
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetHeroModel() *CMsgShowcaseItem_Hero {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_HeroModel); ok {
		return x.HeroModel
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetPlayerMatch() *CMsgShowcaseItem_PlayerMatch {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_PlayerMatch); ok {
		return x.PlayerMatch
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetChatWheel() *CMsgShowcaseItem_ChatWheel {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_ChatWheel); ok {
		return x.ChatWheel
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetSpray() *CMsgShowcaseItem_ChatWheel {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Spray); ok {
		return x.Spray
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetEmoticon() *CMsgShowcaseItem_Emoticon {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Emoticon); ok {
		return x.Emoticon
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetCourier() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Courier); ok {
		return x.Courier
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetWard() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Ward); ok {
		return x.Ward
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetHeroIcon() *CMsgShowcaseItem_HeroIcon {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_HeroIcon); ok {
		return x.HeroIcon
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetSpiderGraph() *CMsgShowcaseItem_SpiderGraph {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_SpiderGraph); ok {
		return x.SpiderGraph
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetUserFeed() *CMsgShowcaseItem_UserFeed {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_UserFeed); ok {
		return x.UserFeed
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetStat() *CMsgShowcaseItem_Stat {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Stat); ok {
		return x.Stat
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetRoshan() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Roshan); ok {
		return x.Roshan
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetCreep() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Creep); ok {
		return x.Creep
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetTower() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Tower); ok {
		return x.Tower
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetEffigy() *CMsgShowcaseItem_EconItem {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Effigy); ok {
		return x.Effigy
	}
	return nil
}

func (x *CMsgShowcaseItemData) GetBackground() *CMsgShowcaseBackground {
	if x, ok := x.GetItem().(*CMsgShowcaseItemData_Background); ok {
		return x.Background
	}
	return nil
}

type isCMsgShowcaseItemData_Item interface {
	isCMsgShowcaseItemData_Item()
}

type CMsgShowcaseItemData_Trophy struct {
	Trophy *CMsgShowcaseItem_Trophy `protobuf:"bytes,1,opt,name=trophy,oneof"`
}

type CMsgShowcaseItemData_EconItemIcon struct {
	EconItemIcon *CMsgShowcaseItem_EconItem `protobuf:"bytes,2,opt,name=econ_item_icon,json=econItemIcon,oneof"`
}

type CMsgShowcaseItemData_Sticker struct {
	Sticker *CMsgShowcaseItem_EconItem `protobuf:"bytes,3,opt,name=sticker,oneof"`
}

type CMsgShowcaseItemData_HeroModel struct {
	HeroModel *CMsgShowcaseItem_Hero `protobuf:"bytes,4,opt,name=hero_model,json=heroModel,oneof"`
}

type CMsgShowcaseItemData_PlayerMatch struct {
	PlayerMatch *CMsgShowcaseItem_PlayerMatch `protobuf:"bytes,5,opt,name=player_match,json=playerMatch,oneof"`
}

type CMsgShowcaseItemData_ChatWheel struct {
	ChatWheel *CMsgShowcaseItem_ChatWheel `protobuf:"bytes,6,opt,name=chat_wheel,json=chatWheel,oneof"`
}

type CMsgShowcaseItemData_Spray struct {
	Spray *CMsgShowcaseItem_ChatWheel `protobuf:"bytes,7,opt,name=spray,oneof"`
}

type CMsgShowcaseItemData_Emoticon struct {
	Emoticon *CMsgShowcaseItem_Emoticon `protobuf:"bytes,8,opt,name=emoticon,oneof"`
}

type CMsgShowcaseItemData_Courier struct {
	Courier *CMsgShowcaseItem_EconItem `protobuf:"bytes,10,opt,name=courier,oneof"`
}

type CMsgShowcaseItemData_Ward struct {
	Ward *CMsgShowcaseItem_EconItem `protobuf:"bytes,11,opt,name=ward,oneof"`
}

type CMsgShowcaseItemData_HeroIcon struct {
	HeroIcon *CMsgShowcaseItem_HeroIcon `protobuf:"bytes,12,opt,name=hero_icon,json=heroIcon,oneof"`
}

type CMsgShowcaseItemData_SpiderGraph struct {
	SpiderGraph *CMsgShowcaseItem_SpiderGraph `protobuf:"bytes,13,opt,name=spider_graph,json=spiderGraph,oneof"`
}

type CMsgShowcaseItemData_UserFeed struct {
	UserFeed *CMsgShowcaseItem_UserFeed `protobuf:"bytes,14,opt,name=user_feed,json=userFeed,oneof"`
}

type CMsgShowcaseItemData_Stat struct {
	Stat *CMsgShowcaseItem_Stat `protobuf:"bytes,15,opt,name=stat,oneof"`
}

type CMsgShowcaseItemData_Roshan struct {
	Roshan *CMsgShowcaseItem_EconItem `protobuf:"bytes,16,opt,name=roshan,oneof"`
}

type CMsgShowcaseItemData_Creep struct {
	Creep *CMsgShowcaseItem_EconItem `protobuf:"bytes,17,opt,name=creep,oneof"`
}

type CMsgShowcaseItemData_Tower struct {
	Tower *CMsgShowcaseItem_EconItem `protobuf:"bytes,18,opt,name=tower,oneof"`
}

type CMsgShowcaseItemData_Effigy struct {
	Effigy *CMsgShowcaseItem_EconItem `protobuf:"bytes,19,opt,name=effigy,oneof"`
}

type CMsgShowcaseItemData_Background struct {
	Background *CMsgShowcaseBackground `protobuf:"bytes,100,opt,name=background,oneof"`
}

func (*CMsgShowcaseItemData_Trophy) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_EconItemIcon) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Sticker) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_HeroModel) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_PlayerMatch) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_ChatWheel) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Spray) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Emoticon) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Courier) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Ward) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_HeroIcon) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_SpiderGraph) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_UserFeed) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Stat) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Roshan) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Creep) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Tower) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Effigy) isCMsgShowcaseItemData_Item() {}

func (*CMsgShowcaseItemData_Background) isCMsgShowcaseItemData_Item() {}

type CMsgShowcaseItemPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionX               *int32  `protobuf:"varint,1,opt,name=position_x,json=positionX" json:"position_x,omitempty"`
	PositionY               *int32  `protobuf:"varint,2,opt,name=position_y,json=positionY" json:"position_y,omitempty"`
	Scale                   *uint32 `protobuf:"varint,3,opt,name=scale" json:"scale,omitempty"`
	Width                   *uint32 `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	Height                  *uint32 `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	Rotation                *uint32 `protobuf:"varint,6,opt,name=rotation" json:"rotation,omitempty"`
	ParentId                *uint32 `protobuf:"varint,7,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	ParentAttachmentPointId *uint32 `protobuf:"varint,8,opt,name=parent_attachment_point_id,json=parentAttachmentPointId" json:"parent_attachment_point_id,omitempty"`
	AttachmentAnchorX       *uint32 `protobuf:"varint,9,opt,name=attachment_anchor_x,json=attachmentAnchorX" json:"attachment_anchor_x,omitempty"`
	AttachmentAnchorY       *uint32 `protobuf:"varint,10,opt,name=attachment_anchor_y,json=attachmentAnchorY" json:"attachment_anchor_y,omitempty"`
}

func (x *CMsgShowcaseItemPosition) Reset() {
	*x = CMsgShowcaseItemPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItemPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItemPosition) ProtoMessage() {}

func (x *CMsgShowcaseItemPosition) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItemPosition.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItemPosition) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgShowcaseItemPosition) GetPositionX() int32 {
	if x != nil && x.PositionX != nil {
		return *x.PositionX
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetPositionY() int32 {
	if x != nil && x.PositionY != nil {
		return *x.PositionY
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetScale() uint32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetRotation() uint32 {
	if x != nil && x.Rotation != nil {
		return *x.Rotation
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetParentId() uint32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetParentAttachmentPointId() uint32 {
	if x != nil && x.ParentAttachmentPointId != nil {
		return *x.ParentAttachmentPointId
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetAttachmentAnchorX() uint32 {
	if x != nil && x.AttachmentAnchorX != nil {
		return *x.AttachmentAnchorX
	}
	return 0
}

func (x *CMsgShowcaseItemPosition) GetAttachmentAnchorY() uint32 {
	if x != nil && x.AttachmentAnchorY != nil {
		return *x.AttachmentAnchorY
	}
	return 0
}

type CMsgShowcaseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowcaseItemId *uint32                   `protobuf:"varint,1,opt,name=showcase_item_id,json=showcaseItemId" json:"showcase_item_id,omitempty"`
	ItemPosition   *CMsgShowcaseItemPosition `protobuf:"bytes,2,opt,name=item_position,json=itemPosition" json:"item_position,omitempty"`
	ItemData       *CMsgShowcaseItemData     `protobuf:"bytes,3,opt,name=item_data,json=itemData" json:"item_data,omitempty"`
	State          *EShowcaseItemState       `protobuf:"varint,4,opt,name=state,enum=dota.EShowcaseItemState" json:"state,omitempty"`
	Flags          *uint32                   `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
}

func (x *CMsgShowcaseItem) Reset() {
	*x = CMsgShowcaseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem) ProtoMessage() {}

func (x *CMsgShowcaseItem) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgShowcaseItem) GetShowcaseItemId() uint32 {
	if x != nil && x.ShowcaseItemId != nil {
		return *x.ShowcaseItemId
	}
	return 0
}

func (x *CMsgShowcaseItem) GetItemPosition() *CMsgShowcaseItemPosition {
	if x != nil {
		return x.ItemPosition
	}
	return nil
}

func (x *CMsgShowcaseItem) GetItemData() *CMsgShowcaseItemData {
	if x != nil {
		return x.ItemData
	}
	return nil
}

func (x *CMsgShowcaseItem) GetState() EShowcaseItemState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return EShowcaseItemState_k_eShowcaseItemState_Ok
}

func (x *CMsgShowcaseItem) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

type CMsgShowcase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowcaseItems   []*CMsgShowcaseItem            `protobuf:"bytes,1,rep,name=showcase_items,json=showcaseItems" json:"showcase_items,omitempty"`
	Background      *CMsgShowcaseItem              `protobuf:"bytes,3,opt,name=background" json:"background,omitempty"`
	ModerationState *CMsgShowcase_EModerationState `protobuf:"varint,4,opt,name=moderation_state,json=moderationState,enum=dota.CMsgShowcase_EModerationState" json:"moderation_state,omitempty"`
}

func (x *CMsgShowcase) Reset() {
	*x = CMsgShowcase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcase) ProtoMessage() {}

func (x *CMsgShowcase) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcase.ProtoReflect.Descriptor instead.
func (*CMsgShowcase) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgShowcase) GetShowcaseItems() []*CMsgShowcaseItem {
	if x != nil {
		return x.ShowcaseItems
	}
	return nil
}

func (x *CMsgShowcase) GetBackground() *CMsgShowcaseItem {
	if x != nil {
		return x.Background
	}
	return nil
}

func (x *CMsgShowcase) GetModerationState() CMsgShowcase_EModerationState {
	if x != nil && x.ModerationState != nil {
		return *x.ModerationState
	}
	return CMsgShowcase_k_eModerationState_Ok
}

type CMsgClientToGCShowcaseGetUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    *uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ShowcaseType *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
}

func (x *CMsgClientToGCShowcaseGetUserData) Reset() {
	*x = CMsgClientToGCShowcaseGetUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseGetUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseGetUserData) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseGetUserData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseGetUserData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseGetUserData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgClientToGCShowcaseGetUserData) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseGetUserData) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

type CMsgClientToGCShowcaseGetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseGetUserDataResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseGetUserDataResponse_EResponse" json:"response,omitempty"`
	Showcase *CMsgShowcase                                        `protobuf:"bytes,2,opt,name=showcase" json:"showcase,omitempty"`
}

func (x *CMsgClientToGCShowcaseGetUserDataResponse) Reset() {
	*x = CMsgClientToGCShowcaseGetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseGetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseGetUserDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseGetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseGetUserDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseGetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgClientToGCShowcaseGetUserDataResponse) GetResponse() CMsgClientToGCShowcaseGetUserDataResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseGetUserDataResponse_k_eInternalError
}

func (x *CMsgClientToGCShowcaseGetUserDataResponse) GetShowcase() *CMsgShowcase {
	if x != nil {
		return x.Showcase
	}
	return nil
}

type CMsgClientToGCShowcaseSetUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowcaseType  *EShowcaseType `protobuf:"varint,1,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	Showcase      *CMsgShowcase  `protobuf:"bytes,2,opt,name=showcase" json:"showcase,omitempty"`
	FormatVersion *uint32        `protobuf:"varint,3,opt,name=format_version,json=formatVersion" json:"format_version,omitempty"`
}

func (x *CMsgClientToGCShowcaseSetUserData) Reset() {
	*x = CMsgClientToGCShowcaseSetUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseSetUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseSetUserData) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseSetUserData) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseSetUserData.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseSetUserData) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgClientToGCShowcaseSetUserData) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgClientToGCShowcaseSetUserData) GetShowcase() *CMsgShowcase {
	if x != nil {
		return x.Showcase
	}
	return nil
}

func (x *CMsgClientToGCShowcaseSetUserData) GetFormatVersion() uint32 {
	if x != nil && x.FormatVersion != nil {
		return *x.FormatVersion
	}
	return 0
}

type CMsgClientToGCShowcaseSetUserDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response             *CMsgClientToGCShowcaseSetUserDataResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseSetUserDataResponse_EResponse" json:"response,omitempty"`
	ValidatedShowcase    *CMsgShowcase                                        `protobuf:"bytes,2,opt,name=validated_showcase,json=validatedShowcase" json:"validated_showcase,omitempty"`
	LockedUntilTimestamp *uint32                                              `protobuf:"varint,3,opt,name=locked_until_timestamp,json=lockedUntilTimestamp" json:"locked_until_timestamp,omitempty"`
}

func (x *CMsgClientToGCShowcaseSetUserDataResponse) Reset() {
	*x = CMsgClientToGCShowcaseSetUserDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseSetUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseSetUserDataResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseSetUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseSetUserDataResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseSetUserDataResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientToGCShowcaseSetUserDataResponse) GetResponse() CMsgClientToGCShowcaseSetUserDataResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseSetUserDataResponse_k_eInternalError
}

func (x *CMsgClientToGCShowcaseSetUserDataResponse) GetValidatedShowcase() *CMsgShowcase {
	if x != nil {
		return x.ValidatedShowcase
	}
	return nil
}

func (x *CMsgClientToGCShowcaseSetUserDataResponse) GetLockedUntilTimestamp() uint32 {
	if x != nil && x.LockedUntilTimestamp != nil {
		return *x.LockedUntilTimestamp
	}
	return 0
}

type CMsgClientToGCShowcaseSubmitReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountId *uint32        `protobuf:"varint,1,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	ShowcaseType    *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	ReportComment   *string        `protobuf:"bytes,3,opt,name=report_comment,json=reportComment" json:"report_comment,omitempty"`
}

func (x *CMsgClientToGCShowcaseSubmitReport) Reset() {
	*x = CMsgClientToGCShowcaseSubmitReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseSubmitReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseSubmitReport) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseSubmitReport) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseSubmitReport.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseSubmitReport) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgClientToGCShowcaseSubmitReport) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseSubmitReport) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgClientToGCShowcaseSubmitReport) GetReportComment() string {
	if x != nil && x.ReportComment != nil {
		return *x.ReportComment
	}
	return ""
}

type CMsgClientToGCShowcaseSubmitReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseSubmitReportResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseSubmitReportResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCShowcaseSubmitReportResponse) Reset() {
	*x = CMsgClientToGCShowcaseSubmitReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseSubmitReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseSubmitReportResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseSubmitReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseSubmitReportResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseSubmitReportResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgClientToGCShowcaseSubmitReportResponse) GetResponse() CMsgClientToGCShowcaseSubmitReportResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseSubmitReportResponse_k_eInternalError
}

type CMsgShowcaseReportsRollupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RollupId       *uint32 `protobuf:"varint,1,opt,name=rollup_id,json=rollupId" json:"rollup_id,omitempty"`
	StartTimestamp *uint32 `protobuf:"varint,2,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	EndTimestamp   *uint32 `protobuf:"varint,3,opt,name=end_timestamp,json=endTimestamp" json:"end_timestamp,omitempty"`
}

func (x *CMsgShowcaseReportsRollupInfo) Reset() {
	*x = CMsgShowcaseReportsRollupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseReportsRollupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseReportsRollupInfo) ProtoMessage() {}

func (x *CMsgShowcaseReportsRollupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseReportsRollupInfo.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseReportsRollupInfo) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgShowcaseReportsRollupInfo) GetRollupId() uint32 {
	if x != nil && x.RollupId != nil {
		return *x.RollupId
	}
	return 0
}

func (x *CMsgShowcaseReportsRollupInfo) GetStartTimestamp() uint32 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *CMsgShowcaseReportsRollupInfo) GetEndTimestamp() uint32 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

type CMsgShowcaseReportsRollupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rollups []*CMsgShowcaseReportsRollupInfo `protobuf:"bytes,1,rep,name=rollups" json:"rollups,omitempty"`
}

func (x *CMsgShowcaseReportsRollupList) Reset() {
	*x = CMsgShowcaseReportsRollupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseReportsRollupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseReportsRollupList) ProtoMessage() {}

func (x *CMsgShowcaseReportsRollupList) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseReportsRollupList.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseReportsRollupList) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgShowcaseReportsRollupList) GetRollups() []*CMsgShowcaseReportsRollupInfo {
	if x != nil {
		return x.Rollups
	}
	return nil
}

type CMsgShowcaseReportsRollupEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    *uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ShowcaseType *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	ReportCount  *uint32        `protobuf:"varint,3,opt,name=report_count,json=reportCount" json:"report_count,omitempty"`
}

func (x *CMsgShowcaseReportsRollupEntry) Reset() {
	*x = CMsgShowcaseReportsRollupEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseReportsRollupEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseReportsRollupEntry) ProtoMessage() {}

func (x *CMsgShowcaseReportsRollupEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseReportsRollupEntry.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseReportsRollupEntry) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgShowcaseReportsRollupEntry) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgShowcaseReportsRollupEntry) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgShowcaseReportsRollupEntry) GetReportCount() uint32 {
	if x != nil && x.ReportCount != nil {
		return *x.ReportCount
	}
	return 0
}

type CMsgShowcaseReportsRollup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RollupInfo    *CMsgShowcaseReportsRollupInfo    `protobuf:"bytes,1,opt,name=rollup_info,json=rollupInfo" json:"rollup_info,omitempty"`
	RollupEntries []*CMsgShowcaseReportsRollupEntry `protobuf:"bytes,2,rep,name=rollup_entries,json=rollupEntries" json:"rollup_entries,omitempty"`
}

func (x *CMsgShowcaseReportsRollup) Reset() {
	*x = CMsgShowcaseReportsRollup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseReportsRollup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseReportsRollup) ProtoMessage() {}

func (x *CMsgShowcaseReportsRollup) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseReportsRollup.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseReportsRollup) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgShowcaseReportsRollup) GetRollupInfo() *CMsgShowcaseReportsRollupInfo {
	if x != nil {
		return x.RollupInfo
	}
	return nil
}

func (x *CMsgShowcaseReportsRollup) GetRollupEntries() []*CMsgShowcaseReportsRollupEntry {
	if x != nil {
		return x.RollupEntries
	}
	return nil
}

type CMsgClientToGCShowcaseAdminGetReportsRollupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupList) Reset() {
	*x = CMsgClientToGCShowcaseAdminGetReportsRollupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminGetReportsRollupList) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupList) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetReportsRollupList.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminGetReportsRollupList) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{27}
}

type CMsgClientToGCShowcaseAdminGetReportsRollupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse" json:"response,omitempty"`
	RollupList *CMsgShowcaseReportsRollupList                                     `protobuf:"bytes,2,opt,name=rollup_list,json=rollupList" json:"rollup_list,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminGetReportsRollupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetReportsRollupListResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) GetResponse() CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_k_eInternalError
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupListResponse) GetRollupList() *CMsgShowcaseReportsRollupList {
	if x != nil {
		return x.RollupList
	}
	return nil
}

type CMsgClientToGCShowcaseAdminGetReportsRollup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RollupId *uint32 `protobuf:"varint,1,opt,name=rollup_id,json=rollupId" json:"rollup_id,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollup) Reset() {
	*x = CMsgClientToGCShowcaseAdminGetReportsRollup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminGetReportsRollup) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollup) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetReportsRollup.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminGetReportsRollup) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollup) GetRollupId() uint32 {
	if x != nil && x.RollupId != nil {
		return *x.RollupId
	}
	return 0
}

type CMsgClientToGCShowcaseAdminGetReportsRollupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse" json:"response,omitempty"`
	Rollup   *CMsgShowcaseReportsRollup                                     `protobuf:"bytes,2,opt,name=rollup" json:"rollup,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminGetReportsRollupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminGetReportsRollupResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetReportsRollupResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminGetReportsRollupResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupResponse) GetResponse() CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminGetReportsRollupResponse_k_eInternalError
}

func (x *CMsgClientToGCShowcaseAdminGetReportsRollupResponse) GetRollup() *CMsgShowcaseReportsRollup {
	if x != nil {
		return x.Rollup
	}
	return nil
}

type CMsgShowcaseAuditEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowcaseType *EShowcaseType        `protobuf:"varint,1,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	AuditAction  *EShowcaseAuditAction `protobuf:"varint,2,opt,name=audit_action,json=auditAction,enum=dota.EShowcaseAuditAction" json:"audit_action,omitempty"`
	AuditData    *uint64               `protobuf:"varint,3,opt,name=audit_data,json=auditData" json:"audit_data,omitempty"`
	Timestamp    *uint32               `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (x *CMsgShowcaseAuditEntry) Reset() {
	*x = CMsgShowcaseAuditEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseAuditEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseAuditEntry) ProtoMessage() {}

func (x *CMsgShowcaseAuditEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseAuditEntry.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseAuditEntry) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgShowcaseAuditEntry) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgShowcaseAuditEntry) GetAuditAction() EShowcaseAuditAction {
	if x != nil && x.AuditAction != nil {
		return *x.AuditAction
	}
	return EShowcaseAuditAction_k_eShowcaseAuditAction_Invalid
}

func (x *CMsgShowcaseAuditEntry) GetAuditData() uint64 {
	if x != nil && x.AuditData != nil {
		return *x.AuditData
	}
	return 0
}

func (x *CMsgShowcaseAuditEntry) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type CMsgShowcaseReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReporterAccountId *uint32        `protobuf:"varint,1,opt,name=reporter_account_id,json=reporterAccountId" json:"reporter_account_id,omitempty"`
	ShowcaseType      *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	ReportTimestamp   *uint32        `protobuf:"varint,3,opt,name=report_timestamp,json=reportTimestamp" json:"report_timestamp,omitempty"`
	ReportComment     *string        `protobuf:"bytes,4,opt,name=report_comment,json=reportComment" json:"report_comment,omitempty"`
}

func (x *CMsgShowcaseReport) Reset() {
	*x = CMsgShowcaseReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseReport) ProtoMessage() {}

func (x *CMsgShowcaseReport) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseReport.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseReport) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgShowcaseReport) GetReporterAccountId() uint32 {
	if x != nil && x.ReporterAccountId != nil {
		return *x.ReporterAccountId
	}
	return 0
}

func (x *CMsgShowcaseReport) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgShowcaseReport) GetReportTimestamp() uint32 {
	if x != nil && x.ReportTimestamp != nil {
		return *x.ReportTimestamp
	}
	return 0
}

func (x *CMsgShowcaseReport) GetReportComment() string {
	if x != nil && x.ReportComment != nil {
		return *x.ReportComment
	}
	return ""
}

type CMsgShowcaseAdminUserDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockedUntilTimestamp *uint32                   `protobuf:"varint,1,opt,name=locked_until_timestamp,json=lockedUntilTimestamp" json:"locked_until_timestamp,omitempty"`
	AuditEntries         []*CMsgShowcaseAuditEntry `protobuf:"bytes,2,rep,name=audit_entries,json=auditEntries" json:"audit_entries,omitempty"`
	Reports              []*CMsgShowcaseReport     `protobuf:"bytes,3,rep,name=reports" json:"reports,omitempty"`
}

func (x *CMsgShowcaseAdminUserDetails) Reset() {
	*x = CMsgShowcaseAdminUserDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseAdminUserDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseAdminUserDetails) ProtoMessage() {}

func (x *CMsgShowcaseAdminUserDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseAdminUserDetails.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseAdminUserDetails) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgShowcaseAdminUserDetails) GetLockedUntilTimestamp() uint32 {
	if x != nil && x.LockedUntilTimestamp != nil {
		return *x.LockedUntilTimestamp
	}
	return 0
}

func (x *CMsgShowcaseAdminUserDetails) GetAuditEntries() []*CMsgShowcaseAuditEntry {
	if x != nil {
		return x.AuditEntries
	}
	return nil
}

func (x *CMsgShowcaseAdminUserDetails) GetReports() []*CMsgShowcaseReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

type CMsgClientToGCShowcaseAdminGetUserDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetails) Reset() {
	*x = CMsgClientToGCShowcaseAdminGetUserDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminGetUserDetails) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminGetUserDetails) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetUserDetails.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminGetUserDetails) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetails) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

type CMsgClientToGCShowcaseAdminGetUserDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    *CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse" json:"response,omitempty"`
	UserDetails *CMsgShowcaseAdminUserDetails                                `protobuf:"bytes,2,opt,name=user_details,json=userDetails" json:"user_details,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetailsResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminGetUserDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminGetUserDetailsResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminGetUserDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminGetUserDetailsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminGetUserDetailsResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetailsResponse) GetResponse() CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminGetUserDetailsResponse_k_eInternalError
}

func (x *CMsgClientToGCShowcaseAdminGetUserDetailsResponse) GetUserDetails() *CMsgShowcaseAdminUserDetails {
	if x != nil {
		return x.UserDetails
	}
	return nil
}

type CMsgClientToGCShowcaseAdminReset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountId *uint32        `protobuf:"varint,1,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	ShowcaseType    *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminReset) Reset() {
	*x = CMsgClientToGCShowcaseAdminReset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminReset) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminReset) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminReset.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminReset) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgClientToGCShowcaseAdminReset) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseAdminReset) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

type CMsgClientToGCShowcaseAdminResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseAdminResetResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminResetResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminResetResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminResetResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminResetResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminResetResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgClientToGCShowcaseAdminResetResponse) GetResponse() CMsgClientToGCShowcaseAdminResetResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminResetResponse_k_eInternalError
}

type CMsgClientToGCShowcaseAdminLockAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountId      *uint32 `protobuf:"varint,1,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	LockedUntilTimestamp *uint32 `protobuf:"varint,2,opt,name=locked_until_timestamp,json=lockedUntilTimestamp" json:"locked_until_timestamp,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminLockAccount) Reset() {
	*x = CMsgClientToGCShowcaseAdminLockAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminLockAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminLockAccount) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminLockAccount) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminLockAccount.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminLockAccount) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgClientToGCShowcaseAdminLockAccount) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseAdminLockAccount) GetLockedUntilTimestamp() uint32 {
	if x != nil && x.LockedUntilTimestamp != nil {
		return *x.LockedUntilTimestamp
	}
	return 0
}

type CMsgClientToGCShowcaseAdminLockAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminLockAccountResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminLockAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminLockAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminLockAccountResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminLockAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminLockAccountResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminLockAccountResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgClientToGCShowcaseAdminLockAccountResponse) GetResponse() CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminLockAccountResponse_k_eInternalError
}

type CMsgClientToGCShowcaseAdminConvict struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountId *uint32        `protobuf:"varint,1,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	ShowcaseType    *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminConvict) Reset() {
	*x = CMsgClientToGCShowcaseAdminConvict{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminConvict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminConvict) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminConvict) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminConvict.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminConvict) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgClientToGCShowcaseAdminConvict) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseAdminConvict) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

type CMsgClientToGCShowcaseAdminConvictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseAdminConvictResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminConvictResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminConvictResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminConvictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminConvictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminConvictResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminConvictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminConvictResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminConvictResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgClientToGCShowcaseAdminConvictResponse) GetResponse() CMsgClientToGCShowcaseAdminConvictResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminConvictResponse_k_eInternalError
}

type CMsgClientToGCShowcaseAdminExonerate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAccountId *uint32        `protobuf:"varint,1,opt,name=target_account_id,json=targetAccountId" json:"target_account_id,omitempty"`
	ShowcaseType    *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminExonerate) Reset() {
	*x = CMsgClientToGCShowcaseAdminExonerate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminExonerate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminExonerate) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminExonerate) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminExonerate.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminExonerate) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgClientToGCShowcaseAdminExonerate) GetTargetAccountId() uint32 {
	if x != nil && x.TargetAccountId != nil {
		return *x.TargetAccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseAdminExonerate) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

type CMsgClientToGCShowcaseAdminExonerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseAdminExonerateResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseAdminExonerateResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCShowcaseAdminExonerateResponse) Reset() {
	*x = CMsgClientToGCShowcaseAdminExonerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseAdminExonerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseAdminExonerateResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseAdminExonerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseAdminExonerateResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseAdminExonerateResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgClientToGCShowcaseAdminExonerateResponse) GetResponse() CMsgClientToGCShowcaseAdminExonerateResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseAdminExonerateResponse_k_eInternalError
}

type CMsgShowcaseModerationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId         *uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ShowcaseType      *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	ShowcaseTimestamp *uint32        `protobuf:"varint,3,opt,name=showcase_timestamp,json=showcaseTimestamp" json:"showcase_timestamp,omitempty"`
}

func (x *CMsgShowcaseModerationInfo) Reset() {
	*x = CMsgShowcaseModerationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseModerationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseModerationInfo) ProtoMessage() {}

func (x *CMsgShowcaseModerationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseModerationInfo.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseModerationInfo) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgShowcaseModerationInfo) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgShowcaseModerationInfo) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgShowcaseModerationInfo) GetShowcaseTimestamp() uint32 {
	if x != nil && x.ShowcaseTimestamp != nil {
		return *x.ShowcaseTimestamp
	}
	return 0
}

type CMsgClientToGCShowcaseModerationGetQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTimestamp *uint32 `protobuf:"varint,1,opt,name=start_timestamp,json=startTimestamp" json:"start_timestamp,omitempty"`
	ResultCount    *uint32 `protobuf:"varint,2,opt,name=result_count,json=resultCount" json:"result_count,omitempty"`
}

func (x *CMsgClientToGCShowcaseModerationGetQueue) Reset() {
	*x = CMsgClientToGCShowcaseModerationGetQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseModerationGetQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseModerationGetQueue) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseModerationGetQueue) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseModerationGetQueue.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseModerationGetQueue) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgClientToGCShowcaseModerationGetQueue) GetStartTimestamp() uint32 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *CMsgClientToGCShowcaseModerationGetQueue) GetResultCount() uint32 {
	if x != nil && x.ResultCount != nil {
		return *x.ResultCount
	}
	return 0
}

type CMsgClientToGCShowcaseModerationGetQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response  *CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse" json:"response,omitempty"`
	Showcases []*CMsgShowcaseModerationInfo                               `protobuf:"bytes,2,rep,name=showcases" json:"showcases,omitempty"`
}

func (x *CMsgClientToGCShowcaseModerationGetQueueResponse) Reset() {
	*x = CMsgClientToGCShowcaseModerationGetQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseModerationGetQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseModerationGetQueueResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseModerationGetQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseModerationGetQueueResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseModerationGetQueueResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgClientToGCShowcaseModerationGetQueueResponse) GetResponse() CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseModerationGetQueueResponse_k_eInternalError
}

func (x *CMsgClientToGCShowcaseModerationGetQueueResponse) GetShowcases() []*CMsgShowcaseModerationInfo {
	if x != nil {
		return x.Showcases
	}
	return nil
}

type CMsgClientToGCShowcaseModerationApplyModeration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId         *uint32        `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ShowcaseType      *EShowcaseType `protobuf:"varint,2,opt,name=showcase_type,json=showcaseType,enum=dota.EShowcaseType" json:"showcase_type,omitempty"`
	ShowcaseTimestamp *uint32        `protobuf:"varint,3,opt,name=showcase_timestamp,json=showcaseTimestamp" json:"showcase_timestamp,omitempty"`
	Approve           *bool          `protobuf:"varint,4,opt,name=approve" json:"approve,omitempty"`
}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) Reset() {
	*x = CMsgClientToGCShowcaseModerationApplyModeration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseModerationApplyModeration) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseModerationApplyModeration.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseModerationApplyModeration) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) GetShowcaseType() EShowcaseType {
	if x != nil && x.ShowcaseType != nil {
		return *x.ShowcaseType
	}
	return EShowcaseType_k_eShowcaseType_Invalid
}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) GetShowcaseTimestamp() uint32 {
	if x != nil && x.ShowcaseTimestamp != nil {
		return *x.ShowcaseTimestamp
	}
	return 0
}

func (x *CMsgClientToGCShowcaseModerationApplyModeration) GetApprove() bool {
	if x != nil && x.Approve != nil {
		return *x.Approve
	}
	return false
}

type CMsgClientToGCShowcaseModerationApplyModerationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse `protobuf:"varint,1,opt,name=response,enum=dota.CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse" json:"response,omitempty"`
}

func (x *CMsgClientToGCShowcaseModerationApplyModerationResponse) Reset() {
	*x = CMsgClientToGCShowcaseModerationApplyModerationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientToGCShowcaseModerationApplyModerationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientToGCShowcaseModerationApplyModerationResponse) ProtoMessage() {}

func (x *CMsgClientToGCShowcaseModerationApplyModerationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientToGCShowcaseModerationApplyModerationResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientToGCShowcaseModerationApplyModerationResponse) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgClientToGCShowcaseModerationApplyModerationResponse) GetResponse() CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return CMsgClientToGCShowcaseModerationApplyModerationResponse_k_eInternalError
}

type CMsgShowcaseItem_Trophy_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrophyScore *uint32 `protobuf:"varint,1,opt,name=trophy_score,json=trophyScore" json:"trophy_score,omitempty"`
}

func (x *CMsgShowcaseItem_Trophy_Data) Reset() {
	*x = CMsgShowcaseItem_Trophy_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Trophy_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Trophy_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_Trophy_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Trophy_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Trophy_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgShowcaseItem_Trophy_Data) GetTrophyScore() uint32 {
	if x != nil && x.TrophyScore != nil {
		return *x.TrophyScore
	}
	return 0
}

type CMsgShowcaseItem_EconItem_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EconItem *CSOEconItem `protobuf:"bytes,1,opt,name=econ_item,json=econItem" json:"econ_item,omitempty"`
}

func (x *CMsgShowcaseItem_EconItem_Data) Reset() {
	*x = CMsgShowcaseItem_EconItem_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_EconItem_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_EconItem_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_EconItem_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_EconItem_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_EconItem_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgShowcaseItem_EconItem_Data) GetEconItem() *CSOEconItem {
	if x != nil {
		return x.EconItem
	}
	return nil
}

type CMsgShowcaseItem_Hero_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EconItems    []*CSOEconItem `protobuf:"bytes,1,rep,name=econ_items,json=econItems" json:"econ_items,omitempty"`
	ActualHeroId *uint32        `protobuf:"varint,2,opt,name=actual_hero_id,json=actualHeroId" json:"actual_hero_id,omitempty"`
	PlusHeroXp   *uint32        `protobuf:"varint,3,opt,name=plus_hero_xp,json=plusHeroXp" json:"plus_hero_xp,omitempty"`
}

func (x *CMsgShowcaseItem_Hero_Data) Reset() {
	*x = CMsgShowcaseItem_Hero_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Hero_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Hero_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_Hero_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Hero_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Hero_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CMsgShowcaseItem_Hero_Data) GetEconItems() []*CSOEconItem {
	if x != nil {
		return x.EconItems
	}
	return nil
}

func (x *CMsgShowcaseItem_Hero_Data) GetActualHeroId() uint32 {
	if x != nil && x.ActualHeroId != nil {
		return *x.ActualHeroId
	}
	return 0
}

func (x *CMsgShowcaseItem_Hero_Data) GetPlusHeroXp() uint32 {
	if x != nil && x.PlusHeroXp != nil {
		return *x.PlusHeroXp
	}
	return 0
}

type CMsgShowcaseItem_HeroIcon_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EconItem *CSOEconItem `protobuf:"bytes,1,opt,name=econ_item,json=econItem" json:"econ_item,omitempty"`
}

func (x *CMsgShowcaseItem_HeroIcon_Data) Reset() {
	*x = CMsgShowcaseItem_HeroIcon_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_HeroIcon_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_HeroIcon_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_HeroIcon_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_HeroIcon_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_HeroIcon_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CMsgShowcaseItem_HeroIcon_Data) GetEconItem() *CSOEconItem {
	if x != nil {
		return x.EconItem
	}
	return nil
}

type CMsgShowcaseItem_PlayerMatch_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId    *uint32                                      `protobuf:"varint,1,opt,name=hero_id,json=heroId" json:"hero_id,omitempty"`
	Timestamp *uint32                                      `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Duration  *uint32                                      `protobuf:"varint,3,opt,name=duration" json:"duration,omitempty"`
	GameMode  *DOTA_GameMode                               `protobuf:"varint,4,opt,name=game_mode,json=gameMode,enum=dota.DOTA_GameMode" json:"game_mode,omitempty"`
	Outcome   *CMsgShowcaseItem_PlayerMatch_EPlayerOutcome `protobuf:"varint,5,opt,name=outcome,enum=dota.CMsgShowcaseItem_PlayerMatch_EPlayerOutcome" json:"outcome,omitempty"`
	Kills     *uint32                                      `protobuf:"varint,6,opt,name=kills" json:"kills,omitempty"`
	Deaths    *uint32                                      `protobuf:"varint,7,opt,name=deaths" json:"deaths,omitempty"`
	Assists   *uint32                                      `protobuf:"varint,8,opt,name=assists" json:"assists,omitempty"`
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) Reset() {
	*x = CMsgShowcaseItem_PlayerMatch_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_PlayerMatch_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_PlayerMatch_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_PlayerMatch_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_PlayerMatch_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetHeroId() uint32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetDuration() uint32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetGameMode() DOTA_GameMode {
	if x != nil && x.GameMode != nil {
		return *x.GameMode
	}
	return DOTA_GameMode_DOTA_GAMEMODE_NONE
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetOutcome() CMsgShowcaseItem_PlayerMatch_EPlayerOutcome {
	if x != nil && x.Outcome != nil {
		return *x.Outcome
	}
	return CMsgShowcaseItem_PlayerMatch_k_eInvalid
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetKills() uint32 {
	if x != nil && x.Kills != nil {
		return *x.Kills
	}
	return 0
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetDeaths() uint32 {
	if x != nil && x.Deaths != nil {
		return *x.Deaths
	}
	return 0
}

func (x *CMsgShowcaseItem_PlayerMatch_Data) GetAssists() uint32 {
	if x != nil && x.Assists != nil {
		return *x.Assists
	}
	return 0
}

type CMsgShowcaseItem_ChatWheel_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgShowcaseItem_ChatWheel_Data) Reset() {
	*x = CMsgShowcaseItem_ChatWheel_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_ChatWheel_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_ChatWheel_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_ChatWheel_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_ChatWheel_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_ChatWheel_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{7, 0}
}

type CMsgShowcaseItem_Emoticon_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgShowcaseItem_Emoticon_Data) Reset() {
	*x = CMsgShowcaseItem_Emoticon_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Emoticon_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Emoticon_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_Emoticon_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Emoticon_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Emoticon_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{8, 0}
}

type CMsgShowcaseItem_SpiderGraph_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgShowcaseItem_SpiderGraph_Data) Reset() {
	*x = CMsgShowcaseItem_SpiderGraph_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_SpiderGraph_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_SpiderGraph_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_SpiderGraph_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_SpiderGraph_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_SpiderGraph_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{9, 0}
}

type CMsgShowcaseItem_UserFeed_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgShowcaseItem_UserFeed_Data) Reset() {
	*x = CMsgShowcaseItem_UserFeed_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_UserFeed_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_UserFeed_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_UserFeed_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_UserFeed_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_UserFeed_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{10, 0}
}

type CMsgShowcaseItem_Stat_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatScore *uint32 `protobuf:"varint,1,opt,name=stat_score,json=statScore" json:"stat_score,omitempty"`
}

func (x *CMsgShowcaseItem_Stat_Data) Reset() {
	*x = CMsgShowcaseItem_Stat_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseItem_Stat_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseItem_Stat_Data) ProtoMessage() {}

func (x *CMsgShowcaseItem_Stat_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseItem_Stat_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseItem_Stat_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CMsgShowcaseItem_Stat_Data) GetStatScore() uint32 {
	if x != nil && x.StatScore != nil {
		return *x.StatScore
	}
	return 0
}

type CMsgShowcaseBackground_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadingScreen *CSOEconItem `protobuf:"bytes,1,opt,name=loading_screen,json=loadingScreen" json:"loading_screen,omitempty"`
}

func (x *CMsgShowcaseBackground_Data) Reset() {
	*x = CMsgShowcaseBackground_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgShowcaseBackground_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowcaseBackground_Data) ProtoMessage() {}

func (x *CMsgShowcaseBackground_Data) ProtoReflect() protoreflect.Message {
	mi := &file_dota_gcmessages_client_showcase_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowcaseBackground_Data.ProtoReflect.Descriptor instead.
func (*CMsgShowcaseBackground_Data) Descriptor() ([]byte, []int) {
	return file_dota_gcmessages_client_showcase_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CMsgShowcaseBackground_Data) GetLoadingScreen() *CSOEconItem {
	if x != nil {
		return x.LoadingScreen
	}
	return nil
}

var File_dota_gcmessages_client_showcase_proto protoreflect.FileDescriptor

var file_dota_gcmessages_client_showcase_proto_rawDesc = []byte{
	0x0a, 0x25, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a, 0x13, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x64, 0x6f, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x6f, 0x74,
	0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64, 0x6f, 0x74, 0x61, 0x5f,
	0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x77, 0x65, 0x62, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x63, 0x73, 0x64, 0x6b, 0x5f, 0x67,
	0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x67, 0x63, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x64,
	0x6f, 0x74, 0x61, 0x5f, 0x67, 0x63, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76, 0x61, 0x6c,
	0x76, 0x65, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x30, 0x0a, 0x14, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12,
	0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x28, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x6c,
	0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x99, 0x01, 0x0a,
	0x17, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x54,
	0x72, 0x6f, 0x70, 0x68, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x49, 0x64, 0x1a, 0x29, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x35, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x03, 0x72, 0x65, 0x66, 0x1a, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x65, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0xfb, 0x04, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f,
	0x48, 0x65, 0x72, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x65, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x65, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x66, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x70, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x16, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x80, 0x01, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x53, 0x4f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x6c, 0x75, 0x73, 0x5f, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x58, 0x70, 0x22, 0xef, 0x01,
	0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x63, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x0d, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x65, 0x63, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x66, 0x1a, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x4f, 0x45, 0x63, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x65, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0x87, 0x04, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x1a, 0xa0, 0x02, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x44, 0x4f, 0x54, 0x41, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x65, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x22, 0x4b, 0x0a, 0x0e,
	0x45, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x6b, 0x5f, 0x65, 0x57, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x5f,
	0x65, 0x4c, 0x6f, 0x73, 0x73, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x5f, 0x65, 0x4e, 0x6f,
	0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x10, 0x03, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x43,
	0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x43,
	0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x77, 0x68, 0x65, 0x65,
	0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x63, 0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7e,
	0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x5f, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6d, 0x6f, 0x74,
	0x69, 0x63, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x63,
	0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x5f, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x3b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x5f, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xb0, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x12, 0x34, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x44,
	0x4f, 0x54, 0x41, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x45,
	0x53, 0x74, 0x61, 0x74, 0x49, 0x44, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x1a, 0x25,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x10, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6c, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x49, 0x64, 0x1a, 0x40, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a,
	0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x53, 0x4f,
	0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22, 0xb8, 0x09, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x37, 0x0a, 0x06, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x63, 0x6f,
	0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x48, 0x65, 0x72, 0x6f,
	0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x47, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x77,
	0x68, 0x65, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x5f, 0x43, 0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x70, 0x72,
	0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x43, 0x68, 0x61, 0x74, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x73, 0x70,
	0x72, 0x61, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x6d,
	0x6f, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x12,
	0x35, 0x0a, 0x04, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x04, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x49, 0x63, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65,
	0x72, 0x6f, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x5f, 0x53, 0x70, 0x69, 0x64, 0x65, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12,
	0x3e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x6f, 0x73, 0x68, 0x61, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x73, 0x68, 0x61, 0x6e, 0x12, 0x37, 0x0a,
	0x05, 0x63, 0x72, 0x65, 0x65, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52,
	0x05, 0x63, 0x72, 0x65, 0x65, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x45, 0x63, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x06, 0x65, 0x66, 0x66, 0x69, 0x67, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0a,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0xf2, 0x02, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x78, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x58, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x59, 0x22, 0x80, 0x02, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xac, 0x02, 0x0a, 0x0c, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x73,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x4e, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x2e, 0x45, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x55, 0x0a, 0x10, 0x45, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x6b, 0x5f, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x6b, 0x10,
	0x00, 0x12, 0x26, 0x0a, 0x22, 0x6b, 0x5f, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x10, 0x01, 0x22, 0x7c, 0x0a, 0x21, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x22, 0x7a, 0x0a, 0x09,
	0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04,
	0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x10, 0x05, 0x22, 0xb4, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38,
	0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xc2, 0x03, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x53, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xc4, 0x01,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x45, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11,
	0x6b, 0x5f, 0x65, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x6b, 0x5f, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x6f, 0x4c,
	0x6f, 0x77, 0x10, 0x08, 0x22, 0xb1, 0x01, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x80, 0x02, 0x0a, 0x2a, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x7a, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0x05, 0x22, 0x8a, 0x01, 0x0a, 0x1d,
	0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5e, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x6c, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1e, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0e, 0x72,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f,
	0x6c, 0x6c, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x6f, 0x6c, 0x6c, 0x75,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x2f, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x37,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b,
	0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x77, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42,
	0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x22, 0x4a, 0x0a, 0x2b, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x6c, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72,
	0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x49, 0x64, 0x22, 0xda, 0x02, 0x0a, 0x33, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x43, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f,
	0x6c, 0x6c, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x75,
	0x70, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x6c, 0x75, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x06, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x41, 0x0a, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x4a, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xd2, 0x02, 0x0a, 0x31, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x77,
	0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x22, 0x88, 0x01, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54,
	0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65,
	0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x22, 0x8a,
	0x01, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x85, 0x02, 0x0a, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x05, 0x22, 0x8a, 0x01, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x69, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x97, 0x02, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x76, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3a, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b,
	0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b,
	0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b,
	0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10,
	0x05, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x69, 0x63, 0x74, 0x65, 0x64, 0x10, 0x06, 0x22, 0x8c, 0x01, 0x0a, 0x24, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x78, 0x6f, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x2c, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x78, 0x6f, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45,
	0x78, 0x6f, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x09, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54,
	0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65,
	0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x18,
	0x0a, 0x14, 0x6b, 0x5f, 0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x6f, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x10, 0x06, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x76, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47,
	0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc9, 0x02, 0x0a, 0x30, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x09, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12, 0x13,
	0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x05, 0x22, 0xd3, 0x01, 0x0a, 0x2f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x37, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x47, 0x43, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x45,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x5f, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x6f, 0x6f, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x6b, 0x5f, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x0e, 0x0a, 0x0a, 0x6b, 0x5f, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x10, 0x04, 0x12,
	0x13, 0x0a, 0x0f, 0x6b, 0x5f, 0x65, 0x4e, 0x6f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x5f, 0x65, 0x47, 0x6f, 0x6e, 0x65, 0x10,
	0x06, 0x2a, 0x8b, 0x02, 0x0a, 0x15, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x48,
	0x65, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x1c, 0x6b,
	0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x6c,
	0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x27, 0x0a,
	0x23, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x48, 0x65, 0x72, 0x6f,
	0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x50, 0x6f,
	0x73, 0x54, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61,
	0x67, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x04, 0x12, 0x29, 0x0a, 0x25,
	0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x50,
	0x6c, 0x75, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x50, 0x6f, 0x73,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x10, 0x08, 0x12, 0x26, 0x0a, 0x22, 0x6b, 0x5f, 0x65, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x6c, 0x75, 0x73, 0x46, 0x6c,
	0x61, 0x67, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x6c, 0x69, 0x63, 0x73, 0x10, 0x10, 0x2a,
	0xb6, 0x01, 0x0a, 0x0d, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x6b,
	0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d,
	0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e,
	0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x03,
	0x12, 0x26, 0x0a, 0x22, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x2a, 0xf7, 0x01, 0x0a, 0x12, 0x45, 0x53, 0x68,
	0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x17, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x6b, 0x10, 0x00, 0x12, 0x2b, 0x0a, 0x27,
	0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x6c, 0x79, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x03, 0x12, 0x20,
	0x0a, 0x1c, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x04,
	0x12, 0x20, 0x0a, 0x1c, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x10, 0x05, 0x2a, 0x9b, 0x03, 0x0a, 0x14, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x1e, 0x6b,
	0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00, 0x12,
	0x2a, 0x0a, 0x26, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x6b,
	0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x10, 0x02, 0x12, 0x35, 0x0a, 0x31, 0x6b, 0x5f,
	0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10,
	0x03, 0x12, 0x32, 0x0a, 0x2e, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x45, 0x78, 0x6f, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x31, 0x0a, 0x2d, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x69, 0x63, 0x74, 0x65, 0x64, 0x10, 0x05, 0x12, 0x32, 0x0a, 0x2e, 0x6b, 0x5f, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x06, 0x12, 0x32, 0x0a, 0x2e,
	0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x07,
	0x2a, 0x5b, 0x0a, 0x11, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x18, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x46, 0x6c, 0x69, 0x70, 0x48,
	0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x10, 0x01, 0x2a, 0x9f, 0x02,
	0x0a, 0x16, 0x45, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46,
	0x6c, 0x61, 0x67, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x21, 0x0a, 0x1d, 0x6b, 0x5f, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f,
	0x48, 0x65, 0x72, 0x6f, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x6b,
	0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c,
	0x61, 0x67, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x65, 0x64, 0x65,
	0x73, 0x74, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x2e, 0x0a, 0x2a, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x48, 0x65,
	0x72, 0x6f, 0x5f, 0x55, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x6f, 0x75, 0x74, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x48, 0x65,
	0x72, 0x6f, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x48, 0x65, 0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x10,
	0x04, 0x12, 0x2d, 0x0a, 0x29, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x5f, 0x48, 0x65,
	0x72, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x08,
	0x12, 0x2d, 0x0a, 0x29, 0x6b, 0x5f, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x5f, 0x48, 0x65, 0x72, 0x6f, 0x5f, 0x48, 0x65, 0x72,
	0x6f, 0x43, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x10, 0x10, 0x42,
	0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f,
	0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x2f, 0x6d, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x64, 0x6f, 0x74,
	0x61, 0x3b, 0x64, 0x6f, 0x74, 0x61,
}

var (
	file_dota_gcmessages_client_showcase_proto_rawDescOnce sync.Once
	file_dota_gcmessages_client_showcase_proto_rawDescData = file_dota_gcmessages_client_showcase_proto_rawDesc
)

func file_dota_gcmessages_client_showcase_proto_rawDescGZIP() []byte {
	file_dota_gcmessages_client_showcase_proto_rawDescOnce.Do(func() {
		file_dota_gcmessages_client_showcase_proto_rawDescData = protoimpl.X.CompressGZIP(file_dota_gcmessages_client_showcase_proto_rawDescData)
	})
	return file_dota_gcmessages_client_showcase_proto_rawDescData
}

var file_dota_gcmessages_client_showcase_proto_enumTypes = make([]protoimpl.EnumInfo, 20)
var file_dota_gcmessages_client_showcase_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_dota_gcmessages_client_showcase_proto_goTypes = []interface{}{
	(EShowcaseHeroPlusFlag)(0),                                             // 0: dota.EShowcaseHeroPlusFlag
	(EShowcaseType)(0),                                                     // 1: dota.EShowcaseType
	(EShowcaseItemState)(0),                                                // 2: dota.EShowcaseItemState
	(EShowcaseAuditAction)(0),                                              // 3: dota.EShowcaseAuditAction
	(EShowcaseItemFlag)(0),                                                 // 4: dota.EShowcaseItemFlag
	(EShowcaseItemFlag_Hero)(0),                                            // 5: dota.EShowcaseItemFlag_Hero
	(CMsgShowcaseItem_PlayerMatch_EPlayerOutcome)(0),                       // 6: dota.CMsgShowcaseItem_PlayerMatch.EPlayerOutcome
	(CMsgShowcase_EModerationState)(0),                                     // 7: dota.CMsgShowcase.EModerationState
	(CMsgClientToGCShowcaseGetUserDataResponse_EResponse)(0),               // 8: dota.CMsgClientToGCShowcaseGetUserDataResponse.EResponse
	(CMsgClientToGCShowcaseSetUserDataResponse_EResponse)(0),               // 9: dota.CMsgClientToGCShowcaseSetUserDataResponse.EResponse
	(CMsgClientToGCShowcaseSubmitReportResponse_EResponse)(0),              // 10: dota.CMsgClientToGCShowcaseSubmitReportResponse.EResponse
	(CMsgClientToGCShowcaseAdminGetReportsRollupListResponse_EResponse)(0), // 11: dota.CMsgClientToGCShowcaseAdminGetReportsRollupListResponse.EResponse
	(CMsgClientToGCShowcaseAdminGetReportsRollupResponse_EResponse)(0),     // 12: dota.CMsgClientToGCShowcaseAdminGetReportsRollupResponse.EResponse
	(CMsgClientToGCShowcaseAdminGetUserDetailsResponse_EResponse)(0),       // 13: dota.CMsgClientToGCShowcaseAdminGetUserDetailsResponse.EResponse
	(CMsgClientToGCShowcaseAdminResetResponse_EResponse)(0),                // 14: dota.CMsgClientToGCShowcaseAdminResetResponse.EResponse
	(CMsgClientToGCShowcaseAdminLockAccountResponse_EResponse)(0),          // 15: dota.CMsgClientToGCShowcaseAdminLockAccountResponse.EResponse
	(CMsgClientToGCShowcaseAdminConvictResponse_EResponse)(0),              // 16: dota.CMsgClientToGCShowcaseAdminConvictResponse.EResponse
	(CMsgClientToGCShowcaseAdminExonerateResponse_EResponse)(0),            // 17: dota.CMsgClientToGCShowcaseAdminExonerateResponse.EResponse
	(CMsgClientToGCShowcaseModerationGetQueueResponse_EResponse)(0),        // 18: dota.CMsgClientToGCShowcaseModerationGetQueueResponse.EResponse
	(CMsgClientToGCShowcaseModerationApplyModerationResponse_EResponse)(0), // 19: dota.CMsgClientToGCShowcaseModerationApplyModerationResponse.EResponse
	(*CMsgShowcaseEconItemReference)(nil),                                  // 20: dota.CMsgShowcaseEconItemReference
	(*CMsgHeroPlusInfo)(nil),                                               // 21: dota.CMsgHeroPlusInfo
	(*CMsgShowcaseItem_Trophy)(nil),                                        // 22: dota.CMsgShowcaseItem_Trophy
	(*CMsgShowcaseItem_EconItem)(nil),                                      // 23: dota.CMsgShowcaseItem_EconItem
	(*CMsgShowcaseItem_Hero)(nil),                                          // 24: dota.CMsgShowcaseItem_Hero
	(*CMsgShowcaseItem_HeroIcon)(nil),                                      // 25: dota.CMsgShowcaseItem_HeroIcon
	(*CMsgShowcaseItem_PlayerMatch)(nil),                                   // 26: dota.CMsgShowcaseItem_PlayerMatch
	(*CMsgShowcaseItem_ChatWheel)(nil),                                     // 27: dota.CMsgShowcaseItem_ChatWheel
	(*CMsgShowcaseItem_Emoticon)(nil),                                      // 28: dota.CMsgShowcaseItem_Emoticon
	(*CMsgShowcaseItem_SpiderGraph)(nil),                                   // 29: dota.CMsgShowcaseItem_SpiderGraph
	(*CMsgShowcaseItem_UserFeed)(nil),                                      // 30: dota.CMsgShowcaseItem_UserFeed
	(*CMsgShowcaseItem_Stat)(nil),                                          // 31: dota.CMsgShowcaseItem_Stat
	(*CMsgShowcaseBackground)(nil),                                         // 32: dota.CMsgShowcaseBackground
	(*CMsgShowcaseItemData)(nil),                                           // 33: dota.CMsgShowcaseItemData
	(*CMsgShowcaseItemPosition)(nil),                                       // 34: dota.CMsgShowcaseItemPosition
	(*CMsgShowcaseItem)(nil),                                               // 35: dota.CMsgShowcaseItem
	(*CMsgShowcase)(nil),                                                   // 36: dota.CMsgShowcase
	(*CMsgClientToGCShowcaseGetUserData)(nil),                              // 37: dota.CMsgClientToGCShowcaseGetUserData
	(*CMsgClientToGCShowcaseGetUserDataResponse)(nil),                      // 38: dota.CMsgClientToGCShowcaseGetUserDataResponse
	(*CMsgClientToGCShowcaseSetUserData)(nil),                              // 39: dota.CMsgClientToGCShowcaseSetUserData
	(*CMsgClientToGCShowcaseSetUserDataResponse)(nil),                      // 40: dota.CMsgClientToGCShowcaseSetUserDataResponse
	(*CMsgClientToGCShowcaseSubmitReport)(nil),                             // 41: dota.CMsgClientToGCShowcaseSubmitReport
	(*CMsgClientToGCShowcaseSubmitReportResponse)(nil),                     // 42: dota.CMsgClientToGCShowcaseSubmitReportResponse
	(*CMsgShowcaseReportsRollupInfo)(nil),                                  // 43: dota.CMsgShowcaseReportsRollupInfo
	(*CMsgShowcaseReportsRollupList)(nil),                                  // 44: dota.CMsgShowcaseReportsRollupList
	(*CMsgShowcaseReportsRollupEntry)(nil),                                 // 45: dota.CMsgShowcaseReportsRollupEntry
	(*CMsgShowcaseReportsRollup)(nil),                                      // 46: dota.CMsgShowcaseReportsRollup
	(*CMsgClientToGCShowcaseAdminGetReportsRollupList)(nil),                // 47: dota.CMsgClientToGCShowcaseAdminGetReportsRollupList
	(*CMsgClientToGCShowcaseAdminGetReportsRollupListResponse)(nil),        // 48: dota.CMsgClientToGCShowcaseAdminGetReportsRollupListResponse
	(*CMsgClientToGCShowcaseAdminGetReportsRollup)(nil),                    // 49: dota.CMsgClientToGCShowcaseAdminGetReportsRollup
	(*CMsgClientToGCShowcaseAdminGetReportsRollupResponse)(nil),            // 50: dota.CMsgClientToGCShowcaseAdminGetReportsRollupResponse
	(*CMsgShowcaseAuditEntry)(nil),                                         // 51: dota.CMsgShowcaseAuditEntry
	(*CMsgShowcaseReport)(nil),                                             // 52: dota.CMsgShowcaseReport
	(*CMsgShowcaseAdminUserDetails)(nil),                                   // 53: dota.CMsgShowcaseAdminUserDetails
	(*CMsgClientToGCShowcaseAdminGetUserDetails)(nil),                      // 54: dota.CMsgClientToGCShowcaseAdminGetUserDetails
	(*CMsgClientToGCShowcaseAdminGetUserDetailsResponse)(nil),              // 55: dota.CMsgClientToGCShowcaseAdminGetUserDetailsResponse
	(*CMsgClientToGCShowcaseAdminReset)(nil),                               // 56: dota.CMsgClientToGCShowcaseAdminReset
	(*CMsgClientToGCShowcaseAdminResetResponse)(nil),                       // 57: dota.CMsgClientToGCShowcaseAdminResetResponse
	(*CMsgClientToGCShowcaseAdminLockAccount)(nil),                         // 58: dota.CMsgClientToGCShowcaseAdminLockAccount
	(*CMsgClientToGCShowcaseAdminLockAccountResponse)(nil),                 // 59: dota.CMsgClientToGCShowcaseAdminLockAccountResponse
	(*CMsgClientToGCShowcaseAdminConvict)(nil),                             // 60: dota.CMsgClientToGCShowcaseAdminConvict
	(*CMsgClientToGCShowcaseAdminConvictResponse)(nil),                     // 61: dota.CMsgClientToGCShowcaseAdminConvictResponse
	(*CMsgClientToGCShowcaseAdminExonerate)(nil),                           // 62: dota.CMsgClientToGCShowcaseAdminExonerate
	(*CMsgClientToGCShowcaseAdminExonerateResponse)(nil),                   // 63: dota.CMsgClientToGCShowcaseAdminExonerateResponse
	(*CMsgShowcaseModerationInfo)(nil),                                     // 64: dota.CMsgShowcaseModerationInfo
	(*CMsgClientToGCShowcaseModerationGetQueue)(nil),                       // 65: dota.CMsgClientToGCShowcaseModerationGetQueue
	(*CMsgClientToGCShowcaseModerationGetQueueResponse)(nil),               // 66: dota.CMsgClientToGCShowcaseModerationGetQueueResponse
	(*CMsgClientToGCShowcaseModerationApplyModeration)(nil),                // 67: dota.CMsgClientToGCShowcaseModerationApplyModeration
	(*CMsgClientToGCShowcaseModerationApplyModerationResponse)(nil),        // 68: dota.CMsgClientToGCShowcaseModerationApplyModerationResponse
	(*CMsgShowcaseItem_Trophy_Data)(nil),                                   // 69: dota.CMsgShowcaseItem_Trophy.Data
	(*CMsgShowcaseItem_EconItem_Data)(nil),                                 // 70: dota.CMsgShowcaseItem_EconItem.Data
	(*CMsgShowcaseItem_Hero_Data)(nil),                                     // 71: dota.CMsgShowcaseItem_Hero.Data
	(*CMsgShowcaseItem_HeroIcon_Data)(nil),                                 // 72: dota.CMsgShowcaseItem_HeroIcon.Data
	(*CMsgShowcaseItem_PlayerMatch_Data)(nil),                              // 73: dota.CMsgShowcaseItem_PlayerMatch.Data
	(*CMsgShowcaseItem_ChatWheel_Data)(nil),                                // 74: dota.CMsgShowcaseItem_ChatWheel.Data
	(*CMsgShowcaseItem_Emoticon_Data)(nil),                                 // 75: dota.CMsgShowcaseItem_Emoticon.Data
	(*CMsgShowcaseItem_SpiderGraph_Data)(nil),                              // 76: dota.CMsgShowcaseItem_SpiderGraph.Data
	(*CMsgShowcaseItem_UserFeed_Data)(nil),                                 // 77: dota.CMsgShowcaseItem_UserFeed.Data
	(*CMsgShowcaseItem_Stat_Data)(nil),                                     // 78: dota.CMsgShowcaseItem_Stat.Data
	(*CMsgShowcaseBackground_Data)(nil),                                    // 79: dota.CMsgShowcaseBackground.Data
	(CMsgDOTAProfileCard_EStatID)(0),                                       // 80: dota.CMsgDOTAProfileCard.EStatID
	(*CSOEconItem)(nil),                                                    // 81: dota.CSOEconItem
	(DOTA_GameMode)(0),                                                     // 82: dota.DOTA_GameMode
}
var file_dota_gcmessages_client_showcase_proto_depIdxs = []int32{
	69, // 0: dota.CMsgShowcaseItem_Trophy.data:type_name -> dota.CMsgShowcaseItem_Trophy.Data
	70, // 1: dota.CMsgShowcaseItem_EconItem.data:type_name -> dota.CMsgShowcaseItem_EconItem.Data
	20, // 2: dota.CMsgShowcaseItem_EconItem.ref:type_name -> dota.CMsgShowcaseEconItemReference
	71, // 3: dota.CMsgShowcaseItem_Hero.data:type_name -> dota.CMsgShowcaseItem_Hero.Data
	20, // 4: dota.CMsgShowcaseItem_Hero.econ_item_refs:type_name -> dota.CMsgShowcaseEconItemReference
	21, // 5: dota.CMsgShowcaseItem_Hero.plus_info:type_name -> dota.CMsgHeroPlusInfo
	72, // 6: dota.CMsgShowcaseItem_HeroIcon.data:type_name -> dota.CMsgShowcaseItem_HeroIcon.Data
	20, // 7: dota.CMsgShowcaseItem_HeroIcon.econ_item_ref:type_name -> dota.CMsgShowcaseEconItemReference
	73, // 8: dota.CMsgShowcaseItem_PlayerMatch.data:type_name -> dota.CMsgShowcaseItem_PlayerMatch.Data
	74, // 9: dota.CMsgShowcaseItem_ChatWheel.data:type_name -> dota.CMsgShowcaseItem_ChatWheel.Data
	75, // 10: dota.CMsgShowcaseItem_Emoticon.data:type_name -> dota.CMsgShowcaseItem_Emoticon.Data
	76, // 11: dota.CMsgShowcaseItem_SpiderGraph.data:type_name -> dota.CMsgShowcaseItem_SpiderGraph.Data
	77, // 12: dota.CMsgShowcaseItem_UserFeed.data:type_name -> dota.CMsgShowcaseItem_UserFeed.Data
	78, // 13: dota.CMsgShowcaseItem_Stat.data:type_name -> dota.CMsgShowcaseItem_Stat.Data
	80, // 14: dota.CMsgShowcaseItem_Stat.stat_id:type_name -> dota.CMsgDOTAProfileCard.EStatID
	79, // 15: dota.CMsgShowcaseBackground.data:type_name -> dota.CMsgShowcaseBackground.Data
	20, // 16: dota.CMsgShowcaseBackground.loading_screen_ref:type_name -> dota.CMsgShowcaseEconItemReference
	22, // 17: dota.CMsgShowcaseItemData.trophy:type_name -> dota.CMsgShowcaseItem_Trophy
	23, // 18: dota.CMsgShowcaseItemData.econ_item_icon:type_name -> dota.CMsgShowcaseItem_EconItem
	23, // 19: dota.CMsgShowcaseItemData.sticker:type_name -> dota.CMsgShowcaseItem_EconItem
	24, // 20: dota.CMsgShowcaseItemData.hero_model:type_name -> dota.CMsgShowcaseItem_Hero
	26, // 21: dota.CMsgShowcaseItemData.player_match:type_name -> dota.CMsgShowcaseItem_PlayerMatch
	27, // 22: dota.CMsgShowcaseItemData.chat_wheel:type_name -> dota.CMsgShowcaseItem_ChatWheel
	27, // 23: dota.CMsgShowcaseItemData.spray:type_name -> dota.CMsgShowcaseItem_ChatWheel
	28, // 24: dota.CMsgShowcaseItemData.emoticon:type_name -> dota.CMsgShowcaseItem_Emoticon
	23, // 25: dota.CMsgShowcaseItemData.courier:type_name -> dota.CMsgShowcaseItem_EconItem
	23, // 26: dota.CMsgShowcaseItemData.ward:type_name -> dota.CMsgShowcaseItem_EconItem
	25, // 27: dota.CMsgShowcaseItemData.hero_icon:type_name -> dota.CMsgShowcaseItem_HeroIcon
	29, // 28: dota.CMsgShowcaseItemData.spider_graph:type_name -> dota.CMsgShowcaseItem_SpiderGraph
	30, // 29: dota.CMsgShowcaseItemData.user_feed:type_name -> dota.CMsgShowcaseItem_UserFeed
	31, // 30: dota.CMsgShowcaseItemData.stat:type_name -> dota.CMsgShowcaseItem_Stat
	23, // 31: dota.CMsgShowcaseItemData.roshan:type_name -> dota.CMsgShowcaseItem_EconItem
	23, // 32: dota.CMsgShowcaseItemData.creep:type_name -> dota.CMsgShowcaseItem_EconItem
	23, // 33: dota.CMsgShowcaseItemData.tower:type_name -> dota.CMsgShowcaseItem_EconItem
	23, // 34: dota.CMsgShowcaseItemData.effigy:type_name -> dota.CMsgShowcaseItem_EconItem
	32, // 35: dota.CMsgShowcaseItemData.background:type_name -> dota.CMsgShowcaseBackground
	34, // 36: dota.CMsgShowcaseItem.item_position:type_name -> dota.CMsgShowcaseItemPosition
	33, // 37: dota.CMsgShowcaseItem.item_data:type_name -> dota.CMsgShowcaseItemData
	2,  // 38: dota.CMsgShowcaseItem.state:type_name -> dota.EShowcaseItemState
	35, // 39: dota.CMsgShowcase.showcase_items:type_name -> dota.CMsgShowcaseItem
	35, // 40: dota.CMsgShowcase.background:type_name -> dota.CMsgShowcaseItem
	7,  // 41: dota.CMsgShowcase.moderation_state:type_name -> dota.CMsgShowcase.EModerationState
	1,  // 42: dota.CMsgClientToGCShowcaseGetUserData.showcase_type:type_name -> dota.EShowcaseType
	8,  // 43: dota.CMsgClientToGCShowcaseGetUserDataResponse.response:type_name -> dota.CMsgClientToGCShowcaseGetUserDataResponse.EResponse
	36, // 44: dota.CMsgClientToGCShowcaseGetUserDataResponse.showcase:type_name -> dota.CMsgShowcase
	1,  // 45: dota.CMsgClientToGCShowcaseSetUserData.showcase_type:type_name -> dota.EShowcaseType
	36, // 46: dota.CMsgClientToGCShowcaseSetUserData.showcase:type_name -> dota.CMsgShowcase
	9,  // 47: dota.CMsgClientToGCShowcaseSetUserDataResponse.response:type_name -> dota.CMsgClientToGCShowcaseSetUserDataResponse.EResponse
	36, // 48: dota.CMsgClientToGCShowcaseSetUserDataResponse.validated_showcase:type_name -> dota.CMsgShowcase
	1,  // 49: dota.CMsgClientToGCShowcaseSubmitReport.showcase_type:type_name -> dota.EShowcaseType
	10, // 50: dota.CMsgClientToGCShowcaseSubmitReportResponse.response:type_name -> dota.CMsgClientToGCShowcaseSubmitReportResponse.EResponse
	43, // 51: dota.CMsgShowcaseReportsRollupList.rollups:type_name -> dota.CMsgShowcaseReportsRollupInfo
	1,  // 52: dota.CMsgShowcaseReportsRollupEntry.showcase_type:type_name -> dota.EShowcaseType
	43, // 53: dota.CMsgShowcaseReportsRollup.rollup_info:type_name -> dota.CMsgShowcaseReportsRollupInfo
	45, // 54: dota.CMsgShowcaseReportsRollup.rollup_entries:type_name -> dota.CMsgShowcaseReportsRollupEntry
	11, // 55: dota.CMsgClientToGCShowcaseAdminGetReportsRollupListResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminGetReportsRollupListResponse.EResponse
	44, // 56: dota.CMsgClientToGCShowcaseAdminGetReportsRollupListResponse.rollup_list:type_name -> dota.CMsgShowcaseReportsRollupList
	12, // 57: dota.CMsgClientToGCShowcaseAdminGetReportsRollupResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminGetReportsRollupResponse.EResponse
	46, // 58: dota.CMsgClientToGCShowcaseAdminGetReportsRollupResponse.rollup:type_name -> dota.CMsgShowcaseReportsRollup
	1,  // 59: dota.CMsgShowcaseAuditEntry.showcase_type:type_name -> dota.EShowcaseType
	3,  // 60: dota.CMsgShowcaseAuditEntry.audit_action:type_name -> dota.EShowcaseAuditAction
	1,  // 61: dota.CMsgShowcaseReport.showcase_type:type_name -> dota.EShowcaseType
	51, // 62: dota.CMsgShowcaseAdminUserDetails.audit_entries:type_name -> dota.CMsgShowcaseAuditEntry
	52, // 63: dota.CMsgShowcaseAdminUserDetails.reports:type_name -> dota.CMsgShowcaseReport
	13, // 64: dota.CMsgClientToGCShowcaseAdminGetUserDetailsResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminGetUserDetailsResponse.EResponse
	53, // 65: dota.CMsgClientToGCShowcaseAdminGetUserDetailsResponse.user_details:type_name -> dota.CMsgShowcaseAdminUserDetails
	1,  // 66: dota.CMsgClientToGCShowcaseAdminReset.showcase_type:type_name -> dota.EShowcaseType
	14, // 67: dota.CMsgClientToGCShowcaseAdminResetResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminResetResponse.EResponse
	15, // 68: dota.CMsgClientToGCShowcaseAdminLockAccountResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminLockAccountResponse.EResponse
	1,  // 69: dota.CMsgClientToGCShowcaseAdminConvict.showcase_type:type_name -> dota.EShowcaseType
	16, // 70: dota.CMsgClientToGCShowcaseAdminConvictResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminConvictResponse.EResponse
	1,  // 71: dota.CMsgClientToGCShowcaseAdminExonerate.showcase_type:type_name -> dota.EShowcaseType
	17, // 72: dota.CMsgClientToGCShowcaseAdminExonerateResponse.response:type_name -> dota.CMsgClientToGCShowcaseAdminExonerateResponse.EResponse
	1,  // 73: dota.CMsgShowcaseModerationInfo.showcase_type:type_name -> dota.EShowcaseType
	18, // 74: dota.CMsgClientToGCShowcaseModerationGetQueueResponse.response:type_name -> dota.CMsgClientToGCShowcaseModerationGetQueueResponse.EResponse
	64, // 75: dota.CMsgClientToGCShowcaseModerationGetQueueResponse.showcases:type_name -> dota.CMsgShowcaseModerationInfo
	1,  // 76: dota.CMsgClientToGCShowcaseModerationApplyModeration.showcase_type:type_name -> dota.EShowcaseType
	19, // 77: dota.CMsgClientToGCShowcaseModerationApplyModerationResponse.response:type_name -> dota.CMsgClientToGCShowcaseModerationApplyModerationResponse.EResponse
	81, // 78: dota.CMsgShowcaseItem_EconItem.Data.econ_item:type_name -> dota.CSOEconItem
	81, // 79: dota.CMsgShowcaseItem_Hero.Data.econ_items:type_name -> dota.CSOEconItem
	81, // 80: dota.CMsgShowcaseItem_HeroIcon.Data.econ_item:type_name -> dota.CSOEconItem
	82, // 81: dota.CMsgShowcaseItem_PlayerMatch.Data.game_mode:type_name -> dota.DOTA_GameMode
	6,  // 82: dota.CMsgShowcaseItem_PlayerMatch.Data.outcome:type_name -> dota.CMsgShowcaseItem_PlayerMatch.EPlayerOutcome
	81, // 83: dota.CMsgShowcaseBackground.Data.loading_screen:type_name -> dota.CSOEconItem
	84, // [84:84] is the sub-list for method output_type
	84, // [84:84] is the sub-list for method input_type
	84, // [84:84] is the sub-list for extension type_name
	84, // [84:84] is the sub-list for extension extendee
	0,  // [0:84] is the sub-list for field type_name
}

func init() { file_dota_gcmessages_client_showcase_proto_init() }
func file_dota_gcmessages_client_showcase_proto_init() {
	if File_dota_gcmessages_client_showcase_proto != nil {
		return
	}
	file_steammessages_proto_init()
	file_dota_shared_enums_proto_init()
	file_dota_gcmessages_common_proto_init()
	file_dota_gcmessages_webapi_proto_init()
	file_gcsdk_gcmessages_proto_init()
	file_base_gcmessages_proto_init()
	file_econ_gcmessages_proto_init()
	file_dota_gcmessages_client_proto_init()
	file_valveextensions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dota_gcmessages_client_showcase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseEconItemReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHeroPlusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Trophy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_EconItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Hero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_HeroIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_PlayerMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_ChatWheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Emoticon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_SpiderGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_UserFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItemPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseGetUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseGetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseSetUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseSetUserDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseSubmitReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseSubmitReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseReportsRollupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseReportsRollupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseReportsRollupEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseReportsRollup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminGetReportsRollupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminGetReportsRollupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminGetReportsRollup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminGetReportsRollupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseAuditEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseAdminUserDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminGetUserDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminGetUserDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminReset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminLockAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminLockAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminConvict); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminConvictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminExonerate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseAdminExonerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseModerationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseModerationGetQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseModerationGetQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseModerationApplyModeration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientToGCShowcaseModerationApplyModerationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Trophy_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_EconItem_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Hero_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_HeroIcon_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_PlayerMatch_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_ChatWheel_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Emoticon_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_SpiderGraph_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_UserFeed_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseItem_Stat_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dota_gcmessages_client_showcase_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgShowcaseBackground_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dota_gcmessages_client_showcase_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*CMsgShowcaseItemData_Trophy)(nil),
		(*CMsgShowcaseItemData_EconItemIcon)(nil),
		(*CMsgShowcaseItemData_Sticker)(nil),
		(*CMsgShowcaseItemData_HeroModel)(nil),
		(*CMsgShowcaseItemData_PlayerMatch)(nil),
		(*CMsgShowcaseItemData_ChatWheel)(nil),
		(*CMsgShowcaseItemData_Spray)(nil),
		(*CMsgShowcaseItemData_Emoticon)(nil),
		(*CMsgShowcaseItemData_Courier)(nil),
		(*CMsgShowcaseItemData_Ward)(nil),
		(*CMsgShowcaseItemData_HeroIcon)(nil),
		(*CMsgShowcaseItemData_SpiderGraph)(nil),
		(*CMsgShowcaseItemData_UserFeed)(nil),
		(*CMsgShowcaseItemData_Stat)(nil),
		(*CMsgShowcaseItemData_Roshan)(nil),
		(*CMsgShowcaseItemData_Creep)(nil),
		(*CMsgShowcaseItemData_Tower)(nil),
		(*CMsgShowcaseItemData_Effigy)(nil),
		(*CMsgShowcaseItemData_Background)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dota_gcmessages_client_showcase_proto_rawDesc,
			NumEnums:      20,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dota_gcmessages_client_showcase_proto_goTypes,
		DependencyIndexes: file_dota_gcmessages_client_showcase_proto_depIdxs,
		EnumInfos:         file_dota_gcmessages_client_showcase_proto_enumTypes,
		MessageInfos:      file_dota_gcmessages_client_showcase_proto_msgTypes,
	}.Build()
	File_dota_gcmessages_client_showcase_proto = out.File
	file_dota_gcmessages_client_showcase_proto_rawDesc = nil
	file_dota_gcmessages_client_showcase_proto_goTypes = nil
	file_dota_gcmessages_client_showcase_proto_depIdxs = nil
}

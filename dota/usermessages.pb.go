// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: usermessages.proto

package dota

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EBaseUserMessages int32

const (
	EBaseUserMessages_UM_AchievementEvent        EBaseUserMessages = 101
	EBaseUserMessages_UM_CloseCaption            EBaseUserMessages = 102
	EBaseUserMessages_UM_CloseCaptionDirect      EBaseUserMessages = 103
	EBaseUserMessages_UM_CurrentTimescale        EBaseUserMessages = 104
	EBaseUserMessages_UM_DesiredTimescale        EBaseUserMessages = 105
	EBaseUserMessages_UM_Fade                    EBaseUserMessages = 106
	EBaseUserMessages_UM_GameTitle               EBaseUserMessages = 107
	EBaseUserMessages_UM_HintText                EBaseUserMessages = 109
	EBaseUserMessages_UM_HudMsg                  EBaseUserMessages = 110
	EBaseUserMessages_UM_HudText                 EBaseUserMessages = 111
	EBaseUserMessages_UM_KeyHintText             EBaseUserMessages = 112
	EBaseUserMessages_UM_ColoredText             EBaseUserMessages = 113
	EBaseUserMessages_UM_RequestState            EBaseUserMessages = 114
	EBaseUserMessages_UM_ResetHUD                EBaseUserMessages = 115
	EBaseUserMessages_UM_Rumble                  EBaseUserMessages = 116
	EBaseUserMessages_UM_SayText                 EBaseUserMessages = 117
	EBaseUserMessages_UM_SayText2                EBaseUserMessages = 118
	EBaseUserMessages_UM_SayTextChannel          EBaseUserMessages = 119
	EBaseUserMessages_UM_Shake                   EBaseUserMessages = 120
	EBaseUserMessages_UM_ShakeDir                EBaseUserMessages = 121
	EBaseUserMessages_UM_TextMsg                 EBaseUserMessages = 124
	EBaseUserMessages_UM_ScreenTilt              EBaseUserMessages = 125
	EBaseUserMessages_UM_Train                   EBaseUserMessages = 126
	EBaseUserMessages_UM_VGUIMenu                EBaseUserMessages = 127
	EBaseUserMessages_UM_VoiceMask               EBaseUserMessages = 128
	EBaseUserMessages_UM_VoiceSubtitle           EBaseUserMessages = 129
	EBaseUserMessages_UM_SendAudio               EBaseUserMessages = 130
	EBaseUserMessages_UM_ItemPickup              EBaseUserMessages = 131
	EBaseUserMessages_UM_AmmoDenied              EBaseUserMessages = 132
	EBaseUserMessages_UM_CrosshairAngle          EBaseUserMessages = 133
	EBaseUserMessages_UM_ShowMenu                EBaseUserMessages = 134
	EBaseUserMessages_UM_CreditsMsg              EBaseUserMessages = 135
	EBaseUserMessages_UM_CloseCaptionPlaceholder EBaseUserMessages = 142
	EBaseUserMessages_UM_CameraTransition        EBaseUserMessages = 143
	EBaseUserMessages_UM_AudioParameter          EBaseUserMessages = 144
	EBaseUserMessages_UM_ParticleManager         EBaseUserMessages = 145
	EBaseUserMessages_UM_HudError                EBaseUserMessages = 146
	EBaseUserMessages_UM_CustomGameEvent         EBaseUserMessages = 148
	EBaseUserMessages_UM_AnimGraphUpdate         EBaseUserMessages = 149
	EBaseUserMessages_UM_HapticsManagerPulse     EBaseUserMessages = 150
	EBaseUserMessages_UM_HapticsManagerEffect    EBaseUserMessages = 151
	EBaseUserMessages_UM_MAX_BASE                EBaseUserMessages = 200
)

// Enum value maps for EBaseUserMessages.
var (
	EBaseUserMessages_name = map[int32]string{
		101: "UM_AchievementEvent",
		102: "UM_CloseCaption",
		103: "UM_CloseCaptionDirect",
		104: "UM_CurrentTimescale",
		105: "UM_DesiredTimescale",
		106: "UM_Fade",
		107: "UM_GameTitle",
		109: "UM_HintText",
		110: "UM_HudMsg",
		111: "UM_HudText",
		112: "UM_KeyHintText",
		113: "UM_ColoredText",
		114: "UM_RequestState",
		115: "UM_ResetHUD",
		116: "UM_Rumble",
		117: "UM_SayText",
		118: "UM_SayText2",
		119: "UM_SayTextChannel",
		120: "UM_Shake",
		121: "UM_ShakeDir",
		124: "UM_TextMsg",
		125: "UM_ScreenTilt",
		126: "UM_Train",
		127: "UM_VGUIMenu",
		128: "UM_VoiceMask",
		129: "UM_VoiceSubtitle",
		130: "UM_SendAudio",
		131: "UM_ItemPickup",
		132: "UM_AmmoDenied",
		133: "UM_CrosshairAngle",
		134: "UM_ShowMenu",
		135: "UM_CreditsMsg",
		142: "UM_CloseCaptionPlaceholder",
		143: "UM_CameraTransition",
		144: "UM_AudioParameter",
		145: "UM_ParticleManager",
		146: "UM_HudError",
		148: "UM_CustomGameEvent",
		149: "UM_AnimGraphUpdate",
		150: "UM_HapticsManagerPulse",
		151: "UM_HapticsManagerEffect",
		200: "UM_MAX_BASE",
	}
	EBaseUserMessages_value = map[string]int32{
		"UM_AchievementEvent":        101,
		"UM_CloseCaption":            102,
		"UM_CloseCaptionDirect":      103,
		"UM_CurrentTimescale":        104,
		"UM_DesiredTimescale":        105,
		"UM_Fade":                    106,
		"UM_GameTitle":               107,
		"UM_HintText":                109,
		"UM_HudMsg":                  110,
		"UM_HudText":                 111,
		"UM_KeyHintText":             112,
		"UM_ColoredText":             113,
		"UM_RequestState":            114,
		"UM_ResetHUD":                115,
		"UM_Rumble":                  116,
		"UM_SayText":                 117,
		"UM_SayText2":                118,
		"UM_SayTextChannel":          119,
		"UM_Shake":                   120,
		"UM_ShakeDir":                121,
		"UM_TextMsg":                 124,
		"UM_ScreenTilt":              125,
		"UM_Train":                   126,
		"UM_VGUIMenu":                127,
		"UM_VoiceMask":               128,
		"UM_VoiceSubtitle":           129,
		"UM_SendAudio":               130,
		"UM_ItemPickup":              131,
		"UM_AmmoDenied":              132,
		"UM_CrosshairAngle":          133,
		"UM_ShowMenu":                134,
		"UM_CreditsMsg":              135,
		"UM_CloseCaptionPlaceholder": 142,
		"UM_CameraTransition":        143,
		"UM_AudioParameter":          144,
		"UM_ParticleManager":         145,
		"UM_HudError":                146,
		"UM_CustomGameEvent":         148,
		"UM_AnimGraphUpdate":         149,
		"UM_HapticsManagerPulse":     150,
		"UM_HapticsManagerEffect":    151,
		"UM_MAX_BASE":                200,
	}
)

func (x EBaseUserMessages) Enum() *EBaseUserMessages {
	p := new(EBaseUserMessages)
	*p = x
	return p
}

func (x EBaseUserMessages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBaseUserMessages) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[0].Descriptor()
}

func (EBaseUserMessages) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[0]
}

func (x EBaseUserMessages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBaseUserMessages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBaseUserMessages(num)
	return nil
}

// Deprecated: Use EBaseUserMessages.Descriptor instead.
func (EBaseUserMessages) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{0}
}

type EBaseEntityMessages int32

const (
	EBaseEntityMessages_EM_PlayJingle      EBaseEntityMessages = 136
	EBaseEntityMessages_EM_ScreenOverlay   EBaseEntityMessages = 137
	EBaseEntityMessages_EM_RemoveAllDecals EBaseEntityMessages = 138
	EBaseEntityMessages_EM_PropagateForce  EBaseEntityMessages = 139
	EBaseEntityMessages_EM_DoSpark         EBaseEntityMessages = 140
	EBaseEntityMessages_EM_FixAngle        EBaseEntityMessages = 141
)

// Enum value maps for EBaseEntityMessages.
var (
	EBaseEntityMessages_name = map[int32]string{
		136: "EM_PlayJingle",
		137: "EM_ScreenOverlay",
		138: "EM_RemoveAllDecals",
		139: "EM_PropagateForce",
		140: "EM_DoSpark",
		141: "EM_FixAngle",
	}
	EBaseEntityMessages_value = map[string]int32{
		"EM_PlayJingle":      136,
		"EM_ScreenOverlay":   137,
		"EM_RemoveAllDecals": 138,
		"EM_PropagateForce":  139,
		"EM_DoSpark":         140,
		"EM_FixAngle":        141,
	}
)

func (x EBaseEntityMessages) Enum() *EBaseEntityMessages {
	p := new(EBaseEntityMessages)
	*p = x
	return p
}

func (x EBaseEntityMessages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBaseEntityMessages) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[1].Descriptor()
}

func (EBaseEntityMessages) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[1]
}

func (x EBaseEntityMessages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBaseEntityMessages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBaseEntityMessages(num)
	return nil
}

// Deprecated: Use EBaseEntityMessages.Descriptor instead.
func (EBaseEntityMessages) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{1}
}

type ERollType int32

const (
	ERollType_ROLL_NONE           ERollType = -1
	ERollType_ROLL_STATS          ERollType = 0
	ERollType_ROLL_CREDITS        ERollType = 1
	ERollType_ROLL_LATE_JOIN_LOGO ERollType = 2
	ERollType_ROLL_OUTTRO         ERollType = 3
)

// Enum value maps for ERollType.
var (
	ERollType_name = map[int32]string{
		-1: "ROLL_NONE",
		0:  "ROLL_STATS",
		1:  "ROLL_CREDITS",
		2:  "ROLL_LATE_JOIN_LOGO",
		3:  "ROLL_OUTTRO",
	}
	ERollType_value = map[string]int32{
		"ROLL_NONE":           -1,
		"ROLL_STATS":          0,
		"ROLL_CREDITS":        1,
		"ROLL_LATE_JOIN_LOGO": 2,
		"ROLL_OUTTRO":         3,
	}
)

func (x ERollType) Enum() *ERollType {
	p := new(ERollType)
	*p = x
	return p
}

func (x ERollType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERollType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[2].Descriptor()
}

func (ERollType) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[2]
}

func (x ERollType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERollType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERollType(num)
	return nil
}

// Deprecated: Use ERollType.Descriptor instead.
func (ERollType) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{2}
}

type PARTICLE_MESSAGE int32

const (
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_CREATE                          PARTICLE_MESSAGE = 0
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE                          PARTICLE_MESSAGE = 1
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD                  PARTICLE_MESSAGE = 2
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION              PARTICLE_MESSAGE = 3
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK                 PARTICLE_MESSAGE = 4
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT                      PARTICLE_MESSAGE = 5
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET                   PARTICLE_MESSAGE = 6
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_DESTROY                         PARTICLE_MESSAGE = 7
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING               PARTICLE_MESSAGE = 8
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_RELEASE                         PARTICLE_MESSAGE = 9
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_LATENCY                         PARTICLE_MESSAGE = 10
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW                     PARTICLE_MESSAGE = 11
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_FROZEN                          PARTICLE_MESSAGE = 12
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT PARTICLE_MESSAGE = 13
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION          PARTICLE_MESSAGE = 14
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES              PARTICLE_MESSAGE = 15
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_TEXT                        PARTICLE_MESSAGE = 16
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW            PARTICLE_MESSAGE = 17
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL         PARTICLE_MESSAGE = 18
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT      PARTICLE_MESSAGE = 19
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE           PARTICLE_MESSAGE = 20
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG   PARTICLE_MESSAGE = 21
	PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT PARTICLE_MESSAGE = 22
)

// Enum value maps for PARTICLE_MESSAGE.
var (
	PARTICLE_MESSAGE_name = map[int32]string{
		0:  "GAME_PARTICLE_MANAGER_EVENT_CREATE",
		1:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE",
		2:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD",
		3:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION",
		4:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK",
		5:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT",
		6:  "GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET",
		7:  "GAME_PARTICLE_MANAGER_EVENT_DESTROY",
		8:  "GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING",
		9:  "GAME_PARTICLE_MANAGER_EVENT_RELEASE",
		10: "GAME_PARTICLE_MANAGER_EVENT_LATENCY",
		11: "GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW",
		12: "GAME_PARTICLE_MANAGER_EVENT_FROZEN",
		13: "GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT",
		14: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION",
		15: "GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES",
		16: "GAME_PARTICLE_MANAGER_EVENT_SET_TEXT",
		17: "GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW",
		18: "GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL",
		19: "GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT",
		20: "GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE",
		21: "GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG",
		22: "GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT",
	}
	PARTICLE_MESSAGE_value = map[string]int32{
		"GAME_PARTICLE_MANAGER_EVENT_CREATE":                          0,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE":                          1,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD":                  2,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION":              3,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK":                 4,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT":                      5,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET":                   6,
		"GAME_PARTICLE_MANAGER_EVENT_DESTROY":                         7,
		"GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING":               8,
		"GAME_PARTICLE_MANAGER_EVENT_RELEASE":                         9,
		"GAME_PARTICLE_MANAGER_EVENT_LATENCY":                         10,
		"GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW":                     11,
		"GAME_PARTICLE_MANAGER_EVENT_FROZEN":                          12,
		"GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT": 13,
		"GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION":          14,
		"GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES":              15,
		"GAME_PARTICLE_MANAGER_EVENT_SET_TEXT":                        16,
		"GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW":            17,
		"GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL":         18,
		"GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT":      19,
		"GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE":           20,
		"GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG":   21,
		"GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT": 22,
	}
)

func (x PARTICLE_MESSAGE) Enum() *PARTICLE_MESSAGE {
	p := new(PARTICLE_MESSAGE)
	*p = x
	return p
}

func (x PARTICLE_MESSAGE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PARTICLE_MESSAGE) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[3].Descriptor()
}

func (PARTICLE_MESSAGE) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[3]
}

func (x PARTICLE_MESSAGE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PARTICLE_MESSAGE) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PARTICLE_MESSAGE(num)
	return nil
}

// Deprecated: Use PARTICLE_MESSAGE.Descriptor instead.
func (PARTICLE_MESSAGE) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{3}
}

type EHapticPulseType int32

const (
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_LIGHT  EHapticPulseType = 0
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_MEDIUM EHapticPulseType = 1
	EHapticPulseType_VR_HAND_HAPTIC_PULSE_STRONG EHapticPulseType = 2
)

// Enum value maps for EHapticPulseType.
var (
	EHapticPulseType_name = map[int32]string{
		0: "VR_HAND_HAPTIC_PULSE_LIGHT",
		1: "VR_HAND_HAPTIC_PULSE_MEDIUM",
		2: "VR_HAND_HAPTIC_PULSE_STRONG",
	}
	EHapticPulseType_value = map[string]int32{
		"VR_HAND_HAPTIC_PULSE_LIGHT":  0,
		"VR_HAND_HAPTIC_PULSE_MEDIUM": 1,
		"VR_HAND_HAPTIC_PULSE_STRONG": 2,
	}
)

func (x EHapticPulseType) Enum() *EHapticPulseType {
	p := new(EHapticPulseType)
	*p = x
	return p
}

func (x EHapticPulseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EHapticPulseType) Descriptor() protoreflect.EnumDescriptor {
	return file_usermessages_proto_enumTypes[4].Descriptor()
}

func (EHapticPulseType) Type() protoreflect.EnumType {
	return &file_usermessages_proto_enumTypes[4]
}

func (x EHapticPulseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EHapticPulseType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EHapticPulseType(num)
	return nil
}

// Deprecated: Use EHapticPulseType.Descriptor instead.
func (EHapticPulseType) EnumDescriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{4}
}

type CUserMessageAchievementEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Achievement *uint32 `protobuf:"varint,1,opt,name=achievement" json:"achievement,omitempty"`
}

func (x *CUserMessageAchievementEvent) Reset() {
	*x = CUserMessageAchievementEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageAchievementEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageAchievementEvent) ProtoMessage() {}

func (x *CUserMessageAchievementEvent) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageAchievementEvent.ProtoReflect.Descriptor instead.
func (*CUserMessageAchievementEvent) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{0}
}

func (x *CUserMessageAchievementEvent) GetAchievement() uint32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

type CUserMessageCloseCaption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash       *uint32  `protobuf:"fixed32,1,opt,name=hash" json:"hash,omitempty"`
	Duration   *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer *bool    `protobuf:"varint,3,opt,name=from_player,json=fromPlayer" json:"from_player,omitempty"`
	EntIndex   *int32   `protobuf:"varint,4,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
}

func (x *CUserMessageCloseCaption) Reset() {
	*x = CUserMessageCloseCaption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCloseCaption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCloseCaption) ProtoMessage() {}

func (x *CUserMessageCloseCaption) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCloseCaption.ProtoReflect.Descriptor instead.
func (*CUserMessageCloseCaption) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{1}
}

func (x *CUserMessageCloseCaption) GetHash() uint32 {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return 0
}

func (x *CUserMessageCloseCaption) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageCloseCaption) GetFromPlayer() bool {
	if x != nil && x.FromPlayer != nil {
		return *x.FromPlayer
	}
	return false
}

func (x *CUserMessageCloseCaption) GetEntIndex() int32 {
	if x != nil && x.EntIndex != nil {
		return *x.EntIndex
	}
	return 0
}

type CUserMessageCloseCaptionDirect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash       *uint32  `protobuf:"fixed32,1,opt,name=hash" json:"hash,omitempty"`
	Duration   *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer *bool    `protobuf:"varint,3,opt,name=from_player,json=fromPlayer" json:"from_player,omitempty"`
	EntIndex   *int32   `protobuf:"varint,4,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
}

func (x *CUserMessageCloseCaptionDirect) Reset() {
	*x = CUserMessageCloseCaptionDirect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCloseCaptionDirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCloseCaptionDirect) ProtoMessage() {}

func (x *CUserMessageCloseCaptionDirect) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCloseCaptionDirect.ProtoReflect.Descriptor instead.
func (*CUserMessageCloseCaptionDirect) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{2}
}

func (x *CUserMessageCloseCaptionDirect) GetHash() uint32 {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return 0
}

func (x *CUserMessageCloseCaptionDirect) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageCloseCaptionDirect) GetFromPlayer() bool {
	if x != nil && x.FromPlayer != nil {
		return *x.FromPlayer
	}
	return false
}

func (x *CUserMessageCloseCaptionDirect) GetEntIndex() int32 {
	if x != nil && x.EntIndex != nil {
		return *x.EntIndex
	}
	return 0
}

type CUserMessageCloseCaptionPlaceholder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	String_    *string  `protobuf:"bytes,1,opt,name=string" json:"string,omitempty"`
	Duration   *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	FromPlayer *bool    `protobuf:"varint,3,opt,name=from_player,json=fromPlayer" json:"from_player,omitempty"`
	EntIndex   *int32   `protobuf:"varint,4,opt,name=ent_index,json=entIndex" json:"ent_index,omitempty"`
}

func (x *CUserMessageCloseCaptionPlaceholder) Reset() {
	*x = CUserMessageCloseCaptionPlaceholder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCloseCaptionPlaceholder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCloseCaptionPlaceholder) ProtoMessage() {}

func (x *CUserMessageCloseCaptionPlaceholder) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCloseCaptionPlaceholder.ProtoReflect.Descriptor instead.
func (*CUserMessageCloseCaptionPlaceholder) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{3}
}

func (x *CUserMessageCloseCaptionPlaceholder) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *CUserMessageCloseCaptionPlaceholder) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageCloseCaptionPlaceholder) GetFromPlayer() bool {
	if x != nil && x.FromPlayer != nil {
		return *x.FromPlayer
	}
	return false
}

func (x *CUserMessageCloseCaptionPlaceholder) GetEntIndex() int32 {
	if x != nil && x.EntIndex != nil {
		return *x.EntIndex
	}
	return 0
}

type CUserMessageCurrentTimescale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *float32 `protobuf:"fixed32,1,opt,name=current" json:"current,omitempty"`
}

func (x *CUserMessageCurrentTimescale) Reset() {
	*x = CUserMessageCurrentTimescale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCurrentTimescale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCurrentTimescale) ProtoMessage() {}

func (x *CUserMessageCurrentTimescale) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCurrentTimescale.ProtoReflect.Descriptor instead.
func (*CUserMessageCurrentTimescale) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{4}
}

func (x *CUserMessageCurrentTimescale) GetCurrent() float32 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

type CUserMessageDesiredTimescale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desired              *float32 `protobuf:"fixed32,1,opt,name=desired" json:"desired,omitempty"`
	Acceleration         *float32 `protobuf:"fixed32,2,opt,name=acceleration" json:"acceleration,omitempty"`
	Minblendrate         *float32 `protobuf:"fixed32,3,opt,name=minblendrate" json:"minblendrate,omitempty"`
	Blenddeltamultiplier *float32 `protobuf:"fixed32,4,opt,name=blenddeltamultiplier" json:"blenddeltamultiplier,omitempty"`
}

func (x *CUserMessageDesiredTimescale) Reset() {
	*x = CUserMessageDesiredTimescale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageDesiredTimescale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageDesiredTimescale) ProtoMessage() {}

func (x *CUserMessageDesiredTimescale) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageDesiredTimescale.ProtoReflect.Descriptor instead.
func (*CUserMessageDesiredTimescale) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{5}
}

func (x *CUserMessageDesiredTimescale) GetDesired() float32 {
	if x != nil && x.Desired != nil {
		return *x.Desired
	}
	return 0
}

func (x *CUserMessageDesiredTimescale) GetAcceleration() float32 {
	if x != nil && x.Acceleration != nil {
		return *x.Acceleration
	}
	return 0
}

func (x *CUserMessageDesiredTimescale) GetMinblendrate() float32 {
	if x != nil && x.Minblendrate != nil {
		return *x.Minblendrate
	}
	return 0
}

func (x *CUserMessageDesiredTimescale) GetBlenddeltamultiplier() float32 {
	if x != nil && x.Blenddeltamultiplier != nil {
		return *x.Blenddeltamultiplier
	}
	return 0
}

type CUserMessageFade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration *uint32 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	HoldTime *uint32 `protobuf:"varint,2,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	Flags    *uint32 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Color    *uint32 `protobuf:"fixed32,4,opt,name=color" json:"color,omitempty"`
}

func (x *CUserMessageFade) Reset() {
	*x = CUserMessageFade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageFade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageFade) ProtoMessage() {}

func (x *CUserMessageFade) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageFade.ProtoReflect.Descriptor instead.
func (*CUserMessageFade) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{6}
}

func (x *CUserMessageFade) GetDuration() uint32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageFade) GetHoldTime() uint32 {
	if x != nil && x.HoldTime != nil {
		return *x.HoldTime
	}
	return 0
}

func (x *CUserMessageFade) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CUserMessageFade) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type CUserMessageShake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command   *uint32  `protobuf:"varint,1,opt,name=command" json:"command,omitempty"`
	Amplitude *float32 `protobuf:"fixed32,2,opt,name=amplitude" json:"amplitude,omitempty"`
	Frequency *float32 `protobuf:"fixed32,3,opt,name=frequency" json:"frequency,omitempty"`
	Duration  *float32 `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
}

func (x *CUserMessageShake) Reset() {
	*x = CUserMessageShake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageShake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageShake) ProtoMessage() {}

func (x *CUserMessageShake) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageShake.ProtoReflect.Descriptor instead.
func (*CUserMessageShake) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{7}
}

func (x *CUserMessageShake) GetCommand() uint32 {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return 0
}

func (x *CUserMessageShake) GetAmplitude() float32 {
	if x != nil && x.Amplitude != nil {
		return *x.Amplitude
	}
	return 0
}

func (x *CUserMessageShake) GetFrequency() float32 {
	if x != nil && x.Frequency != nil {
		return *x.Frequency
	}
	return 0
}

func (x *CUserMessageShake) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

type CUserMessageShakeDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shake     *CUserMessageShake `protobuf:"bytes,1,opt,name=shake" json:"shake,omitempty"`
	Direction *CMsgVector        `protobuf:"bytes,2,opt,name=direction" json:"direction,omitempty"`
}

func (x *CUserMessageShakeDir) Reset() {
	*x = CUserMessageShakeDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageShakeDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageShakeDir) ProtoMessage() {}

func (x *CUserMessageShakeDir) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageShakeDir.ProtoReflect.Descriptor instead.
func (*CUserMessageShakeDir) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{8}
}

func (x *CUserMessageShakeDir) GetShake() *CUserMessageShake {
	if x != nil {
		return x.Shake
	}
	return nil
}

func (x *CUserMessageShakeDir) GetDirection() *CMsgVector {
	if x != nil {
		return x.Direction
	}
	return nil
}

type CUserMessageScreenTilt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command   *uint32     `protobuf:"varint,1,opt,name=command" json:"command,omitempty"`
	EaseInOut *bool       `protobuf:"varint,2,opt,name=ease_in_out,json=easeInOut" json:"ease_in_out,omitempty"`
	Angle     *CMsgVector `protobuf:"bytes,3,opt,name=angle" json:"angle,omitempty"`
	Duration  *float32    `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
	Time      *float32    `protobuf:"fixed32,5,opt,name=time" json:"time,omitempty"`
}

func (x *CUserMessageScreenTilt) Reset() {
	*x = CUserMessageScreenTilt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageScreenTilt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageScreenTilt) ProtoMessage() {}

func (x *CUserMessageScreenTilt) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageScreenTilt.ProtoReflect.Descriptor instead.
func (*CUserMessageScreenTilt) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{9}
}

func (x *CUserMessageScreenTilt) GetCommand() uint32 {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return 0
}

func (x *CUserMessageScreenTilt) GetEaseInOut() bool {
	if x != nil && x.EaseInOut != nil {
		return *x.EaseInOut
	}
	return false
}

func (x *CUserMessageScreenTilt) GetAngle() *CMsgVector {
	if x != nil {
		return x.Angle
	}
	return nil
}

func (x *CUserMessageScreenTilt) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageScreenTilt) GetTime() float32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type CUserMessageSayText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Playerindex *uint32 `protobuf:"varint,1,opt,name=playerindex" json:"playerindex,omitempty"`
	Text        *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Chat        *bool   `protobuf:"varint,3,opt,name=chat" json:"chat,omitempty"`
}

func (x *CUserMessageSayText) Reset() {
	*x = CUserMessageSayText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageSayText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageSayText) ProtoMessage() {}

func (x *CUserMessageSayText) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageSayText.ProtoReflect.Descriptor instead.
func (*CUserMessageSayText) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{10}
}

func (x *CUserMessageSayText) GetPlayerindex() uint32 {
	if x != nil && x.Playerindex != nil {
		return *x.Playerindex
	}
	return 0
}

func (x *CUserMessageSayText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *CUserMessageSayText) GetChat() bool {
	if x != nil && x.Chat != nil {
		return *x.Chat
	}
	return false
}

type CUserMessageSayText2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entityindex *uint32 `protobuf:"varint,1,opt,name=entityindex" json:"entityindex,omitempty"`
	Chat        *bool   `protobuf:"varint,2,opt,name=chat" json:"chat,omitempty"`
	Messagename *string `protobuf:"bytes,3,opt,name=messagename" json:"messagename,omitempty"`
	Param1      *string `protobuf:"bytes,4,opt,name=param1" json:"param1,omitempty"`
	Param2      *string `protobuf:"bytes,5,opt,name=param2" json:"param2,omitempty"`
	Param3      *string `protobuf:"bytes,6,opt,name=param3" json:"param3,omitempty"`
	Param4      *string `protobuf:"bytes,7,opt,name=param4" json:"param4,omitempty"`
}

func (x *CUserMessageSayText2) Reset() {
	*x = CUserMessageSayText2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageSayText2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageSayText2) ProtoMessage() {}

func (x *CUserMessageSayText2) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageSayText2.ProtoReflect.Descriptor instead.
func (*CUserMessageSayText2) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{11}
}

func (x *CUserMessageSayText2) GetEntityindex() uint32 {
	if x != nil && x.Entityindex != nil {
		return *x.Entityindex
	}
	return 0
}

func (x *CUserMessageSayText2) GetChat() bool {
	if x != nil && x.Chat != nil {
		return *x.Chat
	}
	return false
}

func (x *CUserMessageSayText2) GetMessagename() string {
	if x != nil && x.Messagename != nil {
		return *x.Messagename
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam1() string {
	if x != nil && x.Param1 != nil {
		return *x.Param1
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam2() string {
	if x != nil && x.Param2 != nil {
		return *x.Param2
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam3() string {
	if x != nil && x.Param3 != nil {
		return *x.Param3
	}
	return ""
}

func (x *CUserMessageSayText2) GetParam4() string {
	if x != nil && x.Param4 != nil {
		return *x.Param4
	}
	return ""
}

type CUserMessageHudMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel     *uint32  `protobuf:"varint,1,opt,name=channel" json:"channel,omitempty"`
	X           *float32 `protobuf:"fixed32,2,opt,name=x" json:"x,omitempty"`
	Y           *float32 `protobuf:"fixed32,3,opt,name=y" json:"y,omitempty"`
	Color1      *uint32  `protobuf:"fixed32,4,opt,name=color1" json:"color1,omitempty"`
	Color2      *uint32  `protobuf:"fixed32,5,opt,name=color2" json:"color2,omitempty"`
	Effect      *uint32  `protobuf:"varint,6,opt,name=effect" json:"effect,omitempty"`
	FadeInTime  *float32 `protobuf:"fixed32,7,opt,name=fade_in_time,json=fadeInTime" json:"fade_in_time,omitempty"`
	FadeOutTime *float32 `protobuf:"fixed32,8,opt,name=fade_out_time,json=fadeOutTime" json:"fade_out_time,omitempty"`
	HoldTime    *float32 `protobuf:"fixed32,9,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	FxTime      *float32 `protobuf:"fixed32,10,opt,name=fx_time,json=fxTime" json:"fx_time,omitempty"`
	Message     *string  `protobuf:"bytes,11,opt,name=message" json:"message,omitempty"`
}

func (x *CUserMessageHudMsg) Reset() {
	*x = CUserMessageHudMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageHudMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageHudMsg) ProtoMessage() {}

func (x *CUserMessageHudMsg) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageHudMsg.ProtoReflect.Descriptor instead.
func (*CUserMessageHudMsg) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{12}
}

func (x *CUserMessageHudMsg) GetChannel() uint32 {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return 0
}

func (x *CUserMessageHudMsg) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CUserMessageHudMsg) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CUserMessageHudMsg) GetColor1() uint32 {
	if x != nil && x.Color1 != nil {
		return *x.Color1
	}
	return 0
}

func (x *CUserMessageHudMsg) GetColor2() uint32 {
	if x != nil && x.Color2 != nil {
		return *x.Color2
	}
	return 0
}

func (x *CUserMessageHudMsg) GetEffect() uint32 {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return 0
}

func (x *CUserMessageHudMsg) GetFadeInTime() float32 {
	if x != nil && x.FadeInTime != nil {
		return *x.FadeInTime
	}
	return 0
}

func (x *CUserMessageHudMsg) GetFadeOutTime() float32 {
	if x != nil && x.FadeOutTime != nil {
		return *x.FadeOutTime
	}
	return 0
}

func (x *CUserMessageHudMsg) GetHoldTime() float32 {
	if x != nil && x.HoldTime != nil {
		return *x.HoldTime
	}
	return 0
}

func (x *CUserMessageHudMsg) GetFxTime() float32 {
	if x != nil && x.FxTime != nil {
		return *x.FxTime
	}
	return 0
}

func (x *CUserMessageHudMsg) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CUserMessageHudText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *CUserMessageHudText) Reset() {
	*x = CUserMessageHudText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageHudText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageHudText) ProtoMessage() {}

func (x *CUserMessageHudText) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageHudText.ProtoReflect.Descriptor instead.
func (*CUserMessageHudText) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{13}
}

func (x *CUserMessageHudText) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CUserMessageTextMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dest  *uint32  `protobuf:"varint,1,opt,name=dest" json:"dest,omitempty"`
	Param []string `protobuf:"bytes,2,rep,name=param" json:"param,omitempty"`
}

func (x *CUserMessageTextMsg) Reset() {
	*x = CUserMessageTextMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageTextMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageTextMsg) ProtoMessage() {}

func (x *CUserMessageTextMsg) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageTextMsg.ProtoReflect.Descriptor instead.
func (*CUserMessageTextMsg) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{14}
}

func (x *CUserMessageTextMsg) GetDest() uint32 {
	if x != nil && x.Dest != nil {
		return *x.Dest
	}
	return 0
}

func (x *CUserMessageTextMsg) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

type CUserMessageGameTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserMessageGameTitle) Reset() {
	*x = CUserMessageGameTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageGameTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageGameTitle) ProtoMessage() {}

func (x *CUserMessageGameTitle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageGameTitle.ProtoReflect.Descriptor instead.
func (*CUserMessageGameTitle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{15}
}

type CUserMessageResetHUD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserMessageResetHUD) Reset() {
	*x = CUserMessageResetHUD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageResetHUD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageResetHUD) ProtoMessage() {}

func (x *CUserMessageResetHUD) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageResetHUD.ProtoReflect.Descriptor instead.
func (*CUserMessageResetHUD) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{16}
}

type CUserMessageSendAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soundname *string `protobuf:"bytes,1,opt,name=soundname" json:"soundname,omitempty"`
	Stop      *bool   `protobuf:"varint,2,opt,name=stop" json:"stop,omitempty"`
}

func (x *CUserMessageSendAudio) Reset() {
	*x = CUserMessageSendAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageSendAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageSendAudio) ProtoMessage() {}

func (x *CUserMessageSendAudio) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageSendAudio.ProtoReflect.Descriptor instead.
func (*CUserMessageSendAudio) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{17}
}

func (x *CUserMessageSendAudio) GetSoundname() string {
	if x != nil && x.Soundname != nil {
		return *x.Soundname
	}
	return ""
}

func (x *CUserMessageSendAudio) GetStop() bool {
	if x != nil && x.Stop != nil {
		return *x.Stop
	}
	return false
}

type CUserMessageAudioParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParameterType *uint32  `protobuf:"varint,1,opt,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	NameHashCode  *uint32  `protobuf:"varint,2,opt,name=name_hash_code,json=nameHashCode" json:"name_hash_code,omitempty"`
	Value         *float32 `protobuf:"fixed32,3,opt,name=value" json:"value,omitempty"`
	IntValue      *uint32  `protobuf:"varint,4,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
}

func (x *CUserMessageAudioParameter) Reset() {
	*x = CUserMessageAudioParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageAudioParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageAudioParameter) ProtoMessage() {}

func (x *CUserMessageAudioParameter) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageAudioParameter.ProtoReflect.Descriptor instead.
func (*CUserMessageAudioParameter) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{18}
}

func (x *CUserMessageAudioParameter) GetParameterType() uint32 {
	if x != nil && x.ParameterType != nil {
		return *x.ParameterType
	}
	return 0
}

func (x *CUserMessageAudioParameter) GetNameHashCode() uint32 {
	if x != nil && x.NameHashCode != nil {
		return *x.NameHashCode
	}
	return 0
}

func (x *CUserMessageAudioParameter) GetValue() float32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *CUserMessageAudioParameter) GetIntValue() uint32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

type CUserMessageVoiceMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GamerulesMasks []uint32 `protobuf:"varint,1,rep,name=gamerules_masks,json=gamerulesMasks" json:"gamerules_masks,omitempty"`
	BanMasks       []uint32 `protobuf:"varint,2,rep,name=ban_masks,json=banMasks" json:"ban_masks,omitempty"`
	ModEnable      *bool    `protobuf:"varint,3,opt,name=mod_enable,json=modEnable" json:"mod_enable,omitempty"`
}

func (x *CUserMessageVoiceMask) Reset() {
	*x = CUserMessageVoiceMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageVoiceMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageVoiceMask) ProtoMessage() {}

func (x *CUserMessageVoiceMask) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageVoiceMask.ProtoReflect.Descriptor instead.
func (*CUserMessageVoiceMask) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{19}
}

func (x *CUserMessageVoiceMask) GetGamerulesMasks() []uint32 {
	if x != nil {
		return x.GamerulesMasks
	}
	return nil
}

func (x *CUserMessageVoiceMask) GetBanMasks() []uint32 {
	if x != nil {
		return x.BanMasks
	}
	return nil
}

func (x *CUserMessageVoiceMask) GetModEnable() bool {
	if x != nil && x.ModEnable != nil {
		return *x.ModEnable
	}
	return false
}

type CUserMessageRequestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserMessageRequestState) Reset() {
	*x = CUserMessageRequestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageRequestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageRequestState) ProtoMessage() {}

func (x *CUserMessageRequestState) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageRequestState.ProtoReflect.Descriptor instead.
func (*CUserMessageRequestState) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{20}
}

type CUserMessageHintText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (x *CUserMessageHintText) Reset() {
	*x = CUserMessageHintText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageHintText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageHintText) ProtoMessage() {}

func (x *CUserMessageHintText) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageHintText.ProtoReflect.Descriptor instead.
func (*CUserMessageHintText) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{21}
}

func (x *CUserMessageHintText) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CUserMessageKeyHintText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []string `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
}

func (x *CUserMessageKeyHintText) Reset() {
	*x = CUserMessageKeyHintText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageKeyHintText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageKeyHintText) ProtoMessage() {}

func (x *CUserMessageKeyHintText) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageKeyHintText.ProtoReflect.Descriptor instead.
func (*CUserMessageKeyHintText) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{22}
}

func (x *CUserMessageKeyHintText) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type CUserMessageVoiceSubtitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *int32 `protobuf:"varint,1,opt,name=player" json:"player,omitempty"`
	Menu   *int32 `protobuf:"varint,2,opt,name=menu" json:"menu,omitempty"`
	Item   *int32 `protobuf:"varint,3,opt,name=item" json:"item,omitempty"`
}

func (x *CUserMessageVoiceSubtitle) Reset() {
	*x = CUserMessageVoiceSubtitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageVoiceSubtitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageVoiceSubtitle) ProtoMessage() {}

func (x *CUserMessageVoiceSubtitle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageVoiceSubtitle.ProtoReflect.Descriptor instead.
func (*CUserMessageVoiceSubtitle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{23}
}

func (x *CUserMessageVoiceSubtitle) GetPlayer() int32 {
	if x != nil && x.Player != nil {
		return *x.Player
	}
	return 0
}

func (x *CUserMessageVoiceSubtitle) GetMenu() int32 {
	if x != nil && x.Menu != nil {
		return *x.Menu
	}
	return 0
}

func (x *CUserMessageVoiceSubtitle) GetItem() int32 {
	if x != nil && x.Item != nil {
		return *x.Item
	}
	return 0
}

type CUserMessageVGUIMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Show *bool                        `protobuf:"varint,2,opt,name=show" json:"show,omitempty"`
	Keys []*CUserMessageVGUIMenu_Keys `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
}

func (x *CUserMessageVGUIMenu) Reset() {
	*x = CUserMessageVGUIMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageVGUIMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageVGUIMenu) ProtoMessage() {}

func (x *CUserMessageVGUIMenu) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageVGUIMenu.ProtoReflect.Descriptor instead.
func (*CUserMessageVGUIMenu) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{24}
}

func (x *CUserMessageVGUIMenu) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CUserMessageVGUIMenu) GetShow() bool {
	if x != nil && x.Show != nil {
		return *x.Show
	}
	return false
}

func (x *CUserMessageVGUIMenu) GetKeys() []*CUserMessageVGUIMenu_Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CUserMessageRumble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Data  *int32 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Flags *int32 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
}

func (x *CUserMessageRumble) Reset() {
	*x = CUserMessageRumble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageRumble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageRumble) ProtoMessage() {}

func (x *CUserMessageRumble) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageRumble.ProtoReflect.Descriptor instead.
func (*CUserMessageRumble) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{25}
}

func (x *CUserMessageRumble) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *CUserMessageRumble) GetData() int32 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

func (x *CUserMessageRumble) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

type CUserMessageTrain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *uint32 `protobuf:"varint,1,opt,name=position" json:"position,omitempty"`
}

func (x *CUserMessageTrain) Reset() {
	*x = CUserMessageTrain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageTrain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageTrain) ProtoMessage() {}

func (x *CUserMessageTrain) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageTrain.ProtoReflect.Descriptor instead.
func (*CUserMessageTrain) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{26}
}

func (x *CUserMessageTrain) GetPosition() uint32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type CUserMessageSayTextChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player  *int32  `protobuf:"varint,1,opt,name=player" json:"player,omitempty"`
	Channel *int32  `protobuf:"varint,2,opt,name=channel" json:"channel,omitempty"`
	Text    *string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
}

func (x *CUserMessageSayTextChannel) Reset() {
	*x = CUserMessageSayTextChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageSayTextChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageSayTextChannel) ProtoMessage() {}

func (x *CUserMessageSayTextChannel) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageSayTextChannel.ProtoReflect.Descriptor instead.
func (*CUserMessageSayTextChannel) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{27}
}

func (x *CUserMessageSayTextChannel) GetPlayer() int32 {
	if x != nil && x.Player != nil {
		return *x.Player
	}
	return 0
}

func (x *CUserMessageSayTextChannel) GetChannel() int32 {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return 0
}

func (x *CUserMessageSayTextChannel) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CUserMessageColoredText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color           *uint32 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
	Text            *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Reset_          *bool   `protobuf:"varint,3,opt,name=reset" json:"reset,omitempty"`
	ContextPlayerId *int32  `protobuf:"varint,4,opt,name=context_player_id,json=contextPlayerId" json:"context_player_id,omitempty"`
	ContextValue    *int32  `protobuf:"varint,5,opt,name=context_value,json=contextValue" json:"context_value,omitempty"`
	ContextTeamId   *int32  `protobuf:"varint,6,opt,name=context_team_id,json=contextTeamId" json:"context_team_id,omitempty"`
}

func (x *CUserMessageColoredText) Reset() {
	*x = CUserMessageColoredText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageColoredText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageColoredText) ProtoMessage() {}

func (x *CUserMessageColoredText) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageColoredText.ProtoReflect.Descriptor instead.
func (*CUserMessageColoredText) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{28}
}

func (x *CUserMessageColoredText) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *CUserMessageColoredText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *CUserMessageColoredText) GetReset_() bool {
	if x != nil && x.Reset_ != nil {
		return *x.Reset_
	}
	return false
}

func (x *CUserMessageColoredText) GetContextPlayerId() int32 {
	if x != nil && x.ContextPlayerId != nil {
		return *x.ContextPlayerId
	}
	return 0
}

func (x *CUserMessageColoredText) GetContextValue() int32 {
	if x != nil && x.ContextValue != nil {
		return *x.ContextValue
	}
	return 0
}

func (x *CUserMessageColoredText) GetContextTeamId() int32 {
	if x != nil && x.ContextTeamId != nil {
		return *x.ContextTeamId
	}
	return 0
}

type CUserMessageItemPickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Itemname *string `protobuf:"bytes,1,opt,name=itemname" json:"itemname,omitempty"`
}

func (x *CUserMessageItemPickup) Reset() {
	*x = CUserMessageItemPickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageItemPickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageItemPickup) ProtoMessage() {}

func (x *CUserMessageItemPickup) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageItemPickup.ProtoReflect.Descriptor instead.
func (*CUserMessageItemPickup) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{29}
}

func (x *CUserMessageItemPickup) GetItemname() string {
	if x != nil && x.Itemname != nil {
		return *x.Itemname
	}
	return ""
}

type CUserMessageAmmoDenied struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmmoId *uint32 `protobuf:"varint,1,opt,name=ammo_id,json=ammoId" json:"ammo_id,omitempty"`
}

func (x *CUserMessageAmmoDenied) Reset() {
	*x = CUserMessageAmmoDenied{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageAmmoDenied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageAmmoDenied) ProtoMessage() {}

func (x *CUserMessageAmmoDenied) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageAmmoDenied.ProtoReflect.Descriptor instead.
func (*CUserMessageAmmoDenied) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{30}
}

func (x *CUserMessageAmmoDenied) GetAmmoId() uint32 {
	if x != nil && x.AmmoId != nil {
		return *x.AmmoId
	}
	return 0
}

type CUserMessageCrosshairAngle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angcrosshair *CMsgQAngle `protobuf:"bytes,1,opt,name=angcrosshair" json:"angcrosshair,omitempty"`
}

func (x *CUserMessageCrosshairAngle) Reset() {
	*x = CUserMessageCrosshairAngle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCrosshairAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCrosshairAngle) ProtoMessage() {}

func (x *CUserMessageCrosshairAngle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCrosshairAngle.ProtoReflect.Descriptor instead.
func (*CUserMessageCrosshairAngle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{31}
}

func (x *CUserMessageCrosshairAngle) GetAngcrosshair() *CMsgQAngle {
	if x != nil {
		return x.Angcrosshair
	}
	return nil
}

type CUserMessageShowMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validslots  *uint32 `protobuf:"varint,1,opt,name=validslots" json:"validslots,omitempty"`
	Displaytime *uint32 `protobuf:"varint,2,opt,name=displaytime" json:"displaytime,omitempty"`
	Needmore    *bool   `protobuf:"varint,3,opt,name=needmore" json:"needmore,omitempty"`
	Menustring  *string `protobuf:"bytes,4,opt,name=menustring" json:"menustring,omitempty"`
}

func (x *CUserMessageShowMenu) Reset() {
	*x = CUserMessageShowMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageShowMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageShowMenu) ProtoMessage() {}

func (x *CUserMessageShowMenu) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageShowMenu.ProtoReflect.Descriptor instead.
func (*CUserMessageShowMenu) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{32}
}

func (x *CUserMessageShowMenu) GetValidslots() uint32 {
	if x != nil && x.Validslots != nil {
		return *x.Validslots
	}
	return 0
}

func (x *CUserMessageShowMenu) GetDisplaytime() uint32 {
	if x != nil && x.Displaytime != nil {
		return *x.Displaytime
	}
	return 0
}

func (x *CUserMessageShowMenu) GetNeedmore() bool {
	if x != nil && x.Needmore != nil {
		return *x.Needmore
	}
	return false
}

func (x *CUserMessageShowMenu) GetMenustring() string {
	if x != nil && x.Menustring != nil {
		return *x.Menustring
	}
	return ""
}

type CUserMessageCreditsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rolltype   *ERollType `protobuf:"varint,1,opt,name=rolltype,enum=dota.ERollType,def=-1" json:"rolltype,omitempty"`
	LogoLength *float32   `protobuf:"fixed32,2,opt,name=logo_length,json=logoLength" json:"logo_length,omitempty"`
}

// Default values for CUserMessageCreditsMsg fields.
const (
	Default_CUserMessageCreditsMsg_Rolltype = ERollType_ROLL_NONE
)

func (x *CUserMessageCreditsMsg) Reset() {
	*x = CUserMessageCreditsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCreditsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCreditsMsg) ProtoMessage() {}

func (x *CUserMessageCreditsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCreditsMsg.ProtoReflect.Descriptor instead.
func (*CUserMessageCreditsMsg) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{33}
}

func (x *CUserMessageCreditsMsg) GetRolltype() ERollType {
	if x != nil && x.Rolltype != nil {
		return *x.Rolltype
	}
	return Default_CUserMessageCreditsMsg_Rolltype
}

func (x *CUserMessageCreditsMsg) GetLogoLength() float32 {
	if x != nil && x.LogoLength != nil {
		return *x.LogoLength
	}
	return 0
}

type CEntityMessagePlayJingle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityMsg *CEntityMsg `protobuf:"bytes,1,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessagePlayJingle) Reset() {
	*x = CEntityMessagePlayJingle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessagePlayJingle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessagePlayJingle) ProtoMessage() {}

func (x *CEntityMessagePlayJingle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessagePlayJingle.ProtoReflect.Descriptor instead.
func (*CEntityMessagePlayJingle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{34}
}

func (x *CEntityMessagePlayJingle) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageScreenOverlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartEffect *bool       `protobuf:"varint,1,opt,name=start_effect,json=startEffect" json:"start_effect,omitempty"`
	EntityMsg   *CEntityMsg `protobuf:"bytes,2,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageScreenOverlay) Reset() {
	*x = CEntityMessageScreenOverlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageScreenOverlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageScreenOverlay) ProtoMessage() {}

func (x *CEntityMessageScreenOverlay) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageScreenOverlay.ProtoReflect.Descriptor instead.
func (*CEntityMessageScreenOverlay) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{35}
}

func (x *CEntityMessageScreenOverlay) GetStartEffect() bool {
	if x != nil && x.StartEffect != nil {
		return *x.StartEffect
	}
	return false
}

func (x *CEntityMessageScreenOverlay) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageRemoveAllDecals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoveDecals *bool       `protobuf:"varint,1,opt,name=remove_decals,json=removeDecals" json:"remove_decals,omitempty"`
	EntityMsg    *CEntityMsg `protobuf:"bytes,2,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageRemoveAllDecals) Reset() {
	*x = CEntityMessageRemoveAllDecals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageRemoveAllDecals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageRemoveAllDecals) ProtoMessage() {}

func (x *CEntityMessageRemoveAllDecals) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageRemoveAllDecals.ProtoReflect.Descriptor instead.
func (*CEntityMessageRemoveAllDecals) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{36}
}

func (x *CEntityMessageRemoveAllDecals) GetRemoveDecals() bool {
	if x != nil && x.RemoveDecals != nil {
		return *x.RemoveDecals
	}
	return false
}

func (x *CEntityMessageRemoveAllDecals) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessagePropagateForce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Impulse   *CMsgVector `protobuf:"bytes,1,opt,name=impulse" json:"impulse,omitempty"`
	EntityMsg *CEntityMsg `protobuf:"bytes,2,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessagePropagateForce) Reset() {
	*x = CEntityMessagePropagateForce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessagePropagateForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessagePropagateForce) ProtoMessage() {}

func (x *CEntityMessagePropagateForce) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessagePropagateForce.ProtoReflect.Descriptor instead.
func (*CEntityMessagePropagateForce) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{37}
}

func (x *CEntityMessagePropagateForce) GetImpulse() *CMsgVector {
	if x != nil {
		return x.Impulse
	}
	return nil
}

func (x *CEntityMessagePropagateForce) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageDoSpark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin      *CMsgVector `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Entityindex *uint32     `protobuf:"varint,2,opt,name=entityindex" json:"entityindex,omitempty"`
	Radius      *float32    `protobuf:"fixed32,3,opt,name=radius" json:"radius,omitempty"`
	Color       *uint32     `protobuf:"fixed32,4,opt,name=color" json:"color,omitempty"`
	Beams       *uint32     `protobuf:"varint,5,opt,name=beams" json:"beams,omitempty"`
	Thick       *float32    `protobuf:"fixed32,6,opt,name=thick" json:"thick,omitempty"`
	Duration    *float32    `protobuf:"fixed32,7,opt,name=duration" json:"duration,omitempty"`
	EntityMsg   *CEntityMsg `protobuf:"bytes,8,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageDoSpark) Reset() {
	*x = CEntityMessageDoSpark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageDoSpark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageDoSpark) ProtoMessage() {}

func (x *CEntityMessageDoSpark) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageDoSpark.ProtoReflect.Descriptor instead.
func (*CEntityMessageDoSpark) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{38}
}

func (x *CEntityMessageDoSpark) GetOrigin() *CMsgVector {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *CEntityMessageDoSpark) GetEntityindex() uint32 {
	if x != nil && x.Entityindex != nil {
		return *x.Entityindex
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetRadius() float32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetBeams() uint32 {
	if x != nil && x.Beams != nil {
		return *x.Beams
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetThick() float32 {
	if x != nil && x.Thick != nil {
		return *x.Thick
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CEntityMessageDoSpark) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CEntityMessageFixAngle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relative  *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle     *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	EntityMsg *CEntityMsg `protobuf:"bytes,3,opt,name=entity_msg,json=entityMsg" json:"entity_msg,omitempty"`
}

func (x *CEntityMessageFixAngle) Reset() {
	*x = CEntityMessageFixAngle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEntityMessageFixAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMessageFixAngle) ProtoMessage() {}

func (x *CEntityMessageFixAngle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMessageFixAngle.ProtoReflect.Descriptor instead.
func (*CEntityMessageFixAngle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{39}
}

func (x *CEntityMessageFixAngle) GetRelative() bool {
	if x != nil && x.Relative != nil {
		return *x.Relative
	}
	return false
}

func (x *CEntityMessageFixAngle) GetAngle() *CMsgQAngle {
	if x != nil {
		return x.Angle
	}
	return nil
}

func (x *CEntityMessageFixAngle) GetEntityMsg() *CEntityMsg {
	if x != nil {
		return x.EntityMsg
	}
	return nil
}

type CUserMessageCameraTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameraType       *uint32                                             `protobuf:"varint,1,opt,name=camera_type,json=cameraType" json:"camera_type,omitempty"`
	Duration         *float32                                            `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	ParamsDataDriven *CUserMessageCameraTransition_Transition_DataDriven `protobuf:"bytes,3,opt,name=params_data_driven,json=paramsDataDriven" json:"params_data_driven,omitempty"`
}

func (x *CUserMessageCameraTransition) Reset() {
	*x = CUserMessageCameraTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCameraTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCameraTransition) ProtoMessage() {}

func (x *CUserMessageCameraTransition) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCameraTransition.ProtoReflect.Descriptor instead.
func (*CUserMessageCameraTransition) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{40}
}

func (x *CUserMessageCameraTransition) GetCameraType() uint32 {
	if x != nil && x.CameraType != nil {
		return *x.CameraType
	}
	return 0
}

func (x *CUserMessageCameraTransition) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CUserMessageCameraTransition) GetParamsDataDriven() *CUserMessageCameraTransition_Transition_DataDriven {
	if x != nil {
		return x.ParamsDataDriven
	}
	return nil
}

type CUserMsg_ParticleManager struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Type                         *PARTICLE_MESSAGE                                      `protobuf:"varint,1,req,name=type,enum=dota.PARTICLE_MESSAGE,def=0" json:"type,omitempty"`
	Index                        *uint32                                                `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	ReleaseParticleIndex         *CUserMsg_ParticleManager_ReleaseParticleIndex         `protobuf:"bytes,3,opt,name=release_particle_index,json=releaseParticleIndex" json:"release_particle_index,omitempty"`
	CreateParticle               *CUserMsg_ParticleManager_CreateParticle               `protobuf:"bytes,4,opt,name=create_particle,json=createParticle" json:"create_particle,omitempty"`
	DestroyParticle              *CUserMsg_ParticleManager_DestroyParticle              `protobuf:"bytes,5,opt,name=destroy_particle,json=destroyParticle" json:"destroy_particle,omitempty"`
	DestroyParticleInvolving     *CUserMsg_ParticleManager_DestroyParticleInvolving     `protobuf:"bytes,6,opt,name=destroy_particle_involving,json=destroyParticleInvolving" json:"destroy_particle_involving,omitempty"`
	UpdateParticle               *CUserMsg_ParticleManager_UpdateParticle               `protobuf:"bytes,7,opt,name=update_particle,json=updateParticle" json:"update_particle,omitempty"`
	UpdateParticleFwd            *CUserMsg_ParticleManager_UpdateParticleFwd            `protobuf:"bytes,8,opt,name=update_particle_fwd,json=updateParticleFwd" json:"update_particle_fwd,omitempty"`
	UpdateParticleOrient         *CUserMsg_ParticleManager_UpdateParticleOrient         `protobuf:"bytes,9,opt,name=update_particle_orient,json=updateParticleOrient" json:"update_particle_orient,omitempty"`
	UpdateParticleFallback       *CUserMsg_ParticleManager_UpdateParticleFallback       `protobuf:"bytes,10,opt,name=update_particle_fallback,json=updateParticleFallback" json:"update_particle_fallback,omitempty"`
	UpdateParticleOffset         *CUserMsg_ParticleManager_UpdateParticleOffset         `protobuf:"bytes,11,opt,name=update_particle_offset,json=updateParticleOffset" json:"update_particle_offset,omitempty"`
	UpdateParticleEnt            *CUserMsg_ParticleManager_UpdateParticleEnt            `protobuf:"bytes,12,opt,name=update_particle_ent,json=updateParticleEnt" json:"update_particle_ent,omitempty"`
	UpdateParticleShouldDraw     *CUserMsg_ParticleManager_UpdateParticleShouldDraw     `protobuf:"bytes,14,opt,name=update_particle_should_draw,json=updateParticleShouldDraw" json:"update_particle_should_draw,omitempty"`
	UpdateParticleSetFrozen      *CUserMsg_ParticleManager_UpdateParticleSetFrozen      `protobuf:"bytes,15,opt,name=update_particle_set_frozen,json=updateParticleSetFrozen" json:"update_particle_set_frozen,omitempty"`
	ChangeControlPointAttachment *CUserMsg_ParticleManager_ChangeControlPointAttachment `protobuf:"bytes,16,opt,name=change_control_point_attachment,json=changeControlPointAttachment" json:"change_control_point_attachment,omitempty"`
	UpdateEntityPosition         *CUserMsg_ParticleManager_UpdateEntityPosition         `protobuf:"bytes,17,opt,name=update_entity_position,json=updateEntityPosition" json:"update_entity_position,omitempty"`
	SetParticleFowProperties     *CUserMsg_ParticleManager_SetParticleFoWProperties     `protobuf:"bytes,18,opt,name=set_particle_fow_properties,json=setParticleFowProperties" json:"set_particle_fow_properties,omitempty"`
	SetParticleText              *CUserMsg_ParticleManager_SetParticleText              `protobuf:"bytes,19,opt,name=set_particle_text,json=setParticleText" json:"set_particle_text,omitempty"`
	SetParticleShouldCheckFow    *CUserMsg_ParticleManager_SetParticleShouldCheckFoW    `protobuf:"bytes,20,opt,name=set_particle_should_check_fow,json=setParticleShouldCheckFow" json:"set_particle_should_check_fow,omitempty"`
	SetControlPointModel         *CUserMsg_ParticleManager_SetControlPointModel         `protobuf:"bytes,21,opt,name=set_control_point_model,json=setControlPointModel" json:"set_control_point_model,omitempty"`
	SetControlPointSnapshot      *CUserMsg_ParticleManager_SetControlPointSnapshot      `protobuf:"bytes,22,opt,name=set_control_point_snapshot,json=setControlPointSnapshot" json:"set_control_point_snapshot,omitempty"`
	SetTextureAttribute          *CUserMsg_ParticleManager_SetTextureAttribute          `protobuf:"bytes,23,opt,name=set_texture_attribute,json=setTextureAttribute" json:"set_texture_attribute,omitempty"`
	SetSceneObjectGenericFlag    *CUserMsg_ParticleManager_SetSceneObjectGenericFlag    `protobuf:"bytes,24,opt,name=set_scene_object_generic_flag,json=setSceneObjectGenericFlag" json:"set_scene_object_generic_flag,omitempty"`
	SetSceneObjectTintAndDesat   *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat   `protobuf:"bytes,25,opt,name=set_scene_object_tint_and_desat,json=setSceneObjectTintAndDesat" json:"set_scene_object_tint_and_desat,omitempty"`
}

// Default values for CUserMsg_ParticleManager fields.
const (
	Default_CUserMsg_ParticleManager_Type = PARTICLE_MESSAGE_GAME_PARTICLE_MANAGER_EVENT_CREATE
)

func (x *CUserMsg_ParticleManager) Reset() {
	*x = CUserMsg_ParticleManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager) ProtoMessage() {}

func (x *CUserMsg_ParticleManager) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41}
}

var extRange_CUserMsg_ParticleManager = []protoiface.ExtensionRangeV1{
	{Start: 100, End: 201},
}

// Deprecated: Use CUserMsg_ParticleManager.ProtoReflect.Descriptor.ExtensionRanges instead.
func (*CUserMsg_ParticleManager) ExtensionRangeArray() []protoiface.ExtensionRangeV1 {
	return extRange_CUserMsg_ParticleManager
}

func (x *CUserMsg_ParticleManager) GetType() PARTICLE_MESSAGE {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CUserMsg_ParticleManager_Type
}

func (x *CUserMsg_ParticleManager) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *CUserMsg_ParticleManager) GetReleaseParticleIndex() *CUserMsg_ParticleManager_ReleaseParticleIndex {
	if x != nil {
		return x.ReleaseParticleIndex
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetCreateParticle() *CUserMsg_ParticleManager_CreateParticle {
	if x != nil {
		return x.CreateParticle
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetDestroyParticle() *CUserMsg_ParticleManager_DestroyParticle {
	if x != nil {
		return x.DestroyParticle
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetDestroyParticleInvolving() *CUserMsg_ParticleManager_DestroyParticleInvolving {
	if x != nil {
		return x.DestroyParticleInvolving
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticle() *CUserMsg_ParticleManager_UpdateParticle {
	if x != nil {
		return x.UpdateParticle
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleFwd() *CUserMsg_ParticleManager_UpdateParticleFwd {
	if x != nil {
		return x.UpdateParticleFwd
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleOrient() *CUserMsg_ParticleManager_UpdateParticleOrient {
	if x != nil {
		return x.UpdateParticleOrient
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleFallback() *CUserMsg_ParticleManager_UpdateParticleFallback {
	if x != nil {
		return x.UpdateParticleFallback
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleOffset() *CUserMsg_ParticleManager_UpdateParticleOffset {
	if x != nil {
		return x.UpdateParticleOffset
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleEnt() *CUserMsg_ParticleManager_UpdateParticleEnt {
	if x != nil {
		return x.UpdateParticleEnt
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleShouldDraw() *CUserMsg_ParticleManager_UpdateParticleShouldDraw {
	if x != nil {
		return x.UpdateParticleShouldDraw
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateParticleSetFrozen() *CUserMsg_ParticleManager_UpdateParticleSetFrozen {
	if x != nil {
		return x.UpdateParticleSetFrozen
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetChangeControlPointAttachment() *CUserMsg_ParticleManager_ChangeControlPointAttachment {
	if x != nil {
		return x.ChangeControlPointAttachment
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetUpdateEntityPosition() *CUserMsg_ParticleManager_UpdateEntityPosition {
	if x != nil {
		return x.UpdateEntityPosition
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetParticleFowProperties() *CUserMsg_ParticleManager_SetParticleFoWProperties {
	if x != nil {
		return x.SetParticleFowProperties
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetParticleText() *CUserMsg_ParticleManager_SetParticleText {
	if x != nil {
		return x.SetParticleText
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetParticleShouldCheckFow() *CUserMsg_ParticleManager_SetParticleShouldCheckFoW {
	if x != nil {
		return x.SetParticleShouldCheckFow
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetControlPointModel() *CUserMsg_ParticleManager_SetControlPointModel {
	if x != nil {
		return x.SetControlPointModel
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetControlPointSnapshot() *CUserMsg_ParticleManager_SetControlPointSnapshot {
	if x != nil {
		return x.SetControlPointSnapshot
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetTextureAttribute() *CUserMsg_ParticleManager_SetTextureAttribute {
	if x != nil {
		return x.SetTextureAttribute
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetSceneObjectGenericFlag() *CUserMsg_ParticleManager_SetSceneObjectGenericFlag {
	if x != nil {
		return x.SetSceneObjectGenericFlag
	}
	return nil
}

func (x *CUserMsg_ParticleManager) GetSetSceneObjectTintAndDesat() *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat {
	if x != nil {
		return x.SetSceneObjectTintAndDesat
	}
	return nil
}

type CUserMsg_HudError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId *int32 `protobuf:"varint,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (x *CUserMsg_HudError) Reset() {
	*x = CUserMsg_HudError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_HudError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_HudError) ProtoMessage() {}

func (x *CUserMsg_HudError) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_HudError.ProtoReflect.Descriptor instead.
func (*CUserMsg_HudError) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{42}
}

func (x *CUserMsg_HudError) GetOrderId() int32 {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return 0
}

type CUserMsg_CustomGameEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName *string `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Data      []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *CUserMsg_CustomGameEvent) Reset() {
	*x = CUserMsg_CustomGameEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_CustomGameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_CustomGameEvent) ProtoMessage() {}

func (x *CUserMsg_CustomGameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_CustomGameEvent.ProtoReflect.Descriptor instead.
func (*CUserMsg_CustomGameEvent) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{43}
}

func (x *CUserMsg_CustomGameEvent) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

func (x *CUserMsg_CustomGameEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CUserMessageHapticsManagerPulse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandId          *int32   `protobuf:"varint,1,opt,name=hand_id,json=handId" json:"hand_id,omitempty"`
	EffectAmplitude *float32 `protobuf:"fixed32,2,opt,name=effect_amplitude,json=effectAmplitude" json:"effect_amplitude,omitempty"`
	EffectFrequency *float32 `protobuf:"fixed32,3,opt,name=effect_frequency,json=effectFrequency" json:"effect_frequency,omitempty"`
	EffectDuration  *float32 `protobuf:"fixed32,4,opt,name=effect_duration,json=effectDuration" json:"effect_duration,omitempty"`
}

func (x *CUserMessageHapticsManagerPulse) Reset() {
	*x = CUserMessageHapticsManagerPulse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageHapticsManagerPulse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageHapticsManagerPulse) ProtoMessage() {}

func (x *CUserMessageHapticsManagerPulse) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageHapticsManagerPulse.ProtoReflect.Descriptor instead.
func (*CUserMessageHapticsManagerPulse) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{44}
}

func (x *CUserMessageHapticsManagerPulse) GetHandId() int32 {
	if x != nil && x.HandId != nil {
		return *x.HandId
	}
	return 0
}

func (x *CUserMessageHapticsManagerPulse) GetEffectAmplitude() float32 {
	if x != nil && x.EffectAmplitude != nil {
		return *x.EffectAmplitude
	}
	return 0
}

func (x *CUserMessageHapticsManagerPulse) GetEffectFrequency() float32 {
	if x != nil && x.EffectFrequency != nil {
		return *x.EffectFrequency
	}
	return 0
}

func (x *CUserMessageHapticsManagerPulse) GetEffectDuration() float32 {
	if x != nil && x.EffectDuration != nil {
		return *x.EffectDuration
	}
	return 0
}

type CUserMessageHapticsManagerEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandId             *int32   `protobuf:"varint,1,opt,name=hand_id,json=handId" json:"hand_id,omitempty"`
	EffectNameHashCode *uint32  `protobuf:"varint,2,opt,name=effect_name_hash_code,json=effectNameHashCode" json:"effect_name_hash_code,omitempty"`
	EffectScale        *float32 `protobuf:"fixed32,3,opt,name=effect_scale,json=effectScale" json:"effect_scale,omitempty"`
}

func (x *CUserMessageHapticsManagerEffect) Reset() {
	*x = CUserMessageHapticsManagerEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageHapticsManagerEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageHapticsManagerEffect) ProtoMessage() {}

func (x *CUserMessageHapticsManagerEffect) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageHapticsManagerEffect.ProtoReflect.Descriptor instead.
func (*CUserMessageHapticsManagerEffect) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{45}
}

func (x *CUserMessageHapticsManagerEffect) GetHandId() int32 {
	if x != nil && x.HandId != nil {
		return *x.HandId
	}
	return 0
}

func (x *CUserMessageHapticsManagerEffect) GetEffectNameHashCode() uint32 {
	if x != nil && x.EffectNameHashCode != nil {
		return *x.EffectNameHashCode
	}
	return 0
}

func (x *CUserMessageHapticsManagerEffect) GetEffectScale() float32 {
	if x != nil && x.EffectScale != nil {
		return *x.EffectScale
	}
	return 0
}

type CUserMessageAnimStateGraphState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityIndex *int32 `protobuf:"varint,1,opt,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *CUserMessageAnimStateGraphState) Reset() {
	*x = CUserMessageAnimStateGraphState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageAnimStateGraphState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageAnimStateGraphState) ProtoMessage() {}

func (x *CUserMessageAnimStateGraphState) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageAnimStateGraphState.ProtoReflect.Descriptor instead.
func (*CUserMessageAnimStateGraphState) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{46}
}

func (x *CUserMessageAnimStateGraphState) GetEntityIndex() int32 {
	if x != nil && x.EntityIndex != nil {
		return *x.EntityIndex
	}
	return 0
}

func (x *CUserMessageAnimStateGraphState) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CUserMessageVGUIMenu_Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CUserMessageVGUIMenu_Keys) Reset() {
	*x = CUserMessageVGUIMenu_Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageVGUIMenu_Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageVGUIMenu_Keys) ProtoMessage() {}

func (x *CUserMessageVGUIMenu_Keys) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageVGUIMenu_Keys.ProtoReflect.Descriptor instead.
func (*CUserMessageVGUIMenu_Keys) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{24, 0}
}

func (x *CUserMessageVGUIMenu_Keys) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CUserMessageVGUIMenu_Keys) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CUserMessageCameraTransition_Transition_DataDriven struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename       *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	AttachEntIndex *int32  `protobuf:"varint,2,opt,name=attach_ent_index,json=attachEntIndex" json:"attach_ent_index,omitempty"`
}

func (x *CUserMessageCameraTransition_Transition_DataDriven) Reset() {
	*x = CUserMessageCameraTransition_Transition_DataDriven{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMessageCameraTransition_Transition_DataDriven) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMessageCameraTransition_Transition_DataDriven) ProtoMessage() {}

func (x *CUserMessageCameraTransition_Transition_DataDriven) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMessageCameraTransition_Transition_DataDriven.ProtoReflect.Descriptor instead.
func (*CUserMessageCameraTransition_Transition_DataDriven) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{40, 0}
}

func (x *CUserMessageCameraTransition_Transition_DataDriven) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CUserMessageCameraTransition_Transition_DataDriven) GetAttachEntIndex() int32 {
	if x != nil && x.AttachEntIndex != nil {
		return *x.AttachEntIndex
	}
	return 0
}

type CUserMsg_ParticleManager_ReleaseParticleIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserMsg_ParticleManager_ReleaseParticleIndex) Reset() {
	*x = CUserMsg_ParticleManager_ReleaseParticleIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_ReleaseParticleIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_ReleaseParticleIndex) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_ReleaseParticleIndex) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_ReleaseParticleIndex.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_ReleaseParticleIndex) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 0}
}

type CUserMsg_ParticleManager_CreateParticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticleNameIndex        *uint64 `protobuf:"fixed64,1,opt,name=particle_name_index,json=particleNameIndex" json:"particle_name_index,omitempty"`
	AttachType               *int32  `protobuf:"varint,2,opt,name=attach_type,json=attachType" json:"attach_type,omitempty"`
	EntityHandle             *int32  `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	EntityHandleForModifiers *int32  `protobuf:"varint,4,opt,name=entity_handle_for_modifiers,json=entityHandleForModifiers" json:"entity_handle_for_modifiers,omitempty"`
	ApplyVoiceBanRules       *bool   `protobuf:"varint,5,opt,name=apply_voice_ban_rules,json=applyVoiceBanRules" json:"apply_voice_ban_rules,omitempty"`
	TeamBehavior             *int32  `protobuf:"varint,6,opt,name=team_behavior,json=teamBehavior" json:"team_behavior,omitempty"`
}

func (x *CUserMsg_ParticleManager_CreateParticle) Reset() {
	*x = CUserMsg_ParticleManager_CreateParticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_CreateParticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_CreateParticle) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_CreateParticle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_CreateParticle.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_CreateParticle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 1}
}

func (x *CUserMsg_ParticleManager_CreateParticle) GetParticleNameIndex() uint64 {
	if x != nil && x.ParticleNameIndex != nil {
		return *x.ParticleNameIndex
	}
	return 0
}

func (x *CUserMsg_ParticleManager_CreateParticle) GetAttachType() int32 {
	if x != nil && x.AttachType != nil {
		return *x.AttachType
	}
	return 0
}

func (x *CUserMsg_ParticleManager_CreateParticle) GetEntityHandle() int32 {
	if x != nil && x.EntityHandle != nil {
		return *x.EntityHandle
	}
	return 0
}

func (x *CUserMsg_ParticleManager_CreateParticle) GetEntityHandleForModifiers() int32 {
	if x != nil && x.EntityHandleForModifiers != nil {
		return *x.EntityHandleForModifiers
	}
	return 0
}

func (x *CUserMsg_ParticleManager_CreateParticle) GetApplyVoiceBanRules() bool {
	if x != nil && x.ApplyVoiceBanRules != nil {
		return *x.ApplyVoiceBanRules
	}
	return false
}

func (x *CUserMsg_ParticleManager_CreateParticle) GetTeamBehavior() int32 {
	if x != nil && x.TeamBehavior != nil {
		return *x.TeamBehavior
	}
	return 0
}

type CUserMsg_ParticleManager_DestroyParticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestroyImmediately *bool `protobuf:"varint,1,opt,name=destroy_immediately,json=destroyImmediately" json:"destroy_immediately,omitempty"`
}

func (x *CUserMsg_ParticleManager_DestroyParticle) Reset() {
	*x = CUserMsg_ParticleManager_DestroyParticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_DestroyParticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_DestroyParticle) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_DestroyParticle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_DestroyParticle.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_DestroyParticle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 2}
}

func (x *CUserMsg_ParticleManager_DestroyParticle) GetDestroyImmediately() bool {
	if x != nil && x.DestroyImmediately != nil {
		return *x.DestroyImmediately
	}
	return false
}

type CUserMsg_ParticleManager_DestroyParticleInvolving struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestroyImmediately *bool  `protobuf:"varint,1,opt,name=destroy_immediately,json=destroyImmediately" json:"destroy_immediately,omitempty"`
	EntityHandle       *int32 `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
}

func (x *CUserMsg_ParticleManager_DestroyParticleInvolving) Reset() {
	*x = CUserMsg_ParticleManager_DestroyParticleInvolving{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_DestroyParticleInvolving) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_DestroyParticleInvolving) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_DestroyParticleInvolving) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_DestroyParticleInvolving.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_DestroyParticleInvolving) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 3}
}

func (x *CUserMsg_ParticleManager_DestroyParticleInvolving) GetDestroyImmediately() bool {
	if x != nil && x.DestroyImmediately != nil {
		return *x.DestroyImmediately
	}
	return false
}

func (x *CUserMsg_ParticleManager_DestroyParticleInvolving) GetEntityHandle() int32 {
	if x != nil && x.EntityHandle != nil {
		return *x.EntityHandle
	}
	return 0
}

type CUserMsg_ParticleManager_UpdateParticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Position     *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticle) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticle) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticle) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticle.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticle) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 4}
}

func (x *CUserMsg_ParticleManager_UpdateParticle) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticle) GetPosition() *CMsgVector {
	if x != nil {
		return x.Position
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleFwd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Forward      *CMsgVector `protobuf:"bytes,2,opt,name=forward" json:"forward,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleFwd) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleFwd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleFwd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleFwd) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleFwd) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleFwd.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleFwd) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 5}
}

func (x *CUserMsg_ParticleManager_UpdateParticleFwd) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleFwd) GetForward() *CMsgVector {
	if x != nil {
		return x.Forward
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleOrient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Forward      *CMsgVector `protobuf:"bytes,2,opt,name=forward" json:"forward,omitempty"`
	// Deprecated: Do not use.
	Right *CMsgVector `protobuf:"bytes,3,opt,name=right" json:"right,omitempty"`
	Up    *CMsgVector `protobuf:"bytes,4,opt,name=up" json:"up,omitempty"`
	Left  *CMsgVector `protobuf:"bytes,5,opt,name=left" json:"left,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleOrient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleOrient) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleOrient.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleOrient) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 6}
}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) GetForward() *CMsgVector {
	if x != nil {
		return x.Forward
	}
	return nil
}

// Deprecated: Do not use.
func (x *CUserMsg_ParticleManager_UpdateParticleOrient) GetRight() *CMsgVector {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) GetUp() *CMsgVector {
	if x != nil {
		return x.Up
	}
	return nil
}

func (x *CUserMsg_ParticleManager_UpdateParticleOrient) GetLeft() *CMsgVector {
	if x != nil {
		return x.Left
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleFallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	Position     *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleFallback) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleFallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleFallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleFallback) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleFallback) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleFallback.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleFallback) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 7}
}

func (x *CUserMsg_ParticleManager_UpdateParticleFallback) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleFallback) GetPosition() *CMsgVector {
	if x != nil {
		return x.Position
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	OriginOffset *CMsgVector `protobuf:"bytes,2,opt,name=origin_offset,json=originOffset" json:"origin_offset,omitempty"`
	AngleOffset  *CMsgQAngle `protobuf:"bytes,3,opt,name=angle_offset,json=angleOffset" json:"angle_offset,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleOffset) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleOffset) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleOffset) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleOffset.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleOffset) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 8}
}

func (x *CUserMsg_ParticleManager_UpdateParticleOffset) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleOffset) GetOriginOffset() *CMsgVector {
	if x != nil {
		return x.OriginOffset
	}
	return nil
}

func (x *CUserMsg_ParticleManager_UpdateParticleOffset) GetAngleOffset() *CMsgQAngle {
	if x != nil {
		return x.AngleOffset
	}
	return nil
}

type CUserMsg_ParticleManager_UpdateParticleEnt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	EntityHandle     *int32      `protobuf:"varint,2,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	AttachType       *int32      `protobuf:"varint,3,opt,name=attach_type,json=attachType" json:"attach_type,omitempty"`
	Attachment       *int32      `protobuf:"varint,4,opt,name=attachment" json:"attachment,omitempty"`
	FallbackPosition *CMsgVector `protobuf:"bytes,5,opt,name=fallback_position,json=fallbackPosition" json:"fallback_position,omitempty"`
	IncludeWearables *bool       `protobuf:"varint,6,opt,name=include_wearables,json=includeWearables" json:"include_wearables,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleEnt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleEnt) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleEnt.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleEnt) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 9}
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) GetEntityHandle() int32 {
	if x != nil && x.EntityHandle != nil {
		return *x.EntityHandle
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) GetAttachType() int32 {
	if x != nil && x.AttachType != nil {
		return *x.AttachType
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) GetAttachment() int32 {
	if x != nil && x.Attachment != nil {
		return *x.Attachment
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) GetFallbackPosition() *CMsgVector {
	if x != nil {
		return x.FallbackPosition
	}
	return nil
}

func (x *CUserMsg_ParticleManager_UpdateParticleEnt) GetIncludeWearables() bool {
	if x != nil && x.IncludeWearables != nil {
		return *x.IncludeWearables
	}
	return false
}

type CUserMsg_ParticleManager_UpdateParticleSetFrozen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetFrozen *bool `protobuf:"varint,1,opt,name=set_frozen,json=setFrozen" json:"set_frozen,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleSetFrozen) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleSetFrozen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleSetFrozen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleSetFrozen) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleSetFrozen) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleSetFrozen.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleSetFrozen) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 10}
}

func (x *CUserMsg_ParticleManager_UpdateParticleSetFrozen) GetSetFrozen() bool {
	if x != nil && x.SetFrozen != nil {
		return *x.SetFrozen
	}
	return false
}

type CUserMsg_ParticleManager_UpdateParticleShouldDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShouldDraw *bool `protobuf:"varint,1,opt,name=should_draw,json=shouldDraw" json:"should_draw,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateParticleShouldDraw) Reset() {
	*x = CUserMsg_ParticleManager_UpdateParticleShouldDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateParticleShouldDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateParticleShouldDraw) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateParticleShouldDraw) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateParticleShouldDraw.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateParticleShouldDraw) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 11}
}

func (x *CUserMsg_ParticleManager_UpdateParticleShouldDraw) GetShouldDraw() bool {
	if x != nil && x.ShouldDraw != nil {
		return *x.ShouldDraw
	}
	return false
}

type CUserMsg_ParticleManager_ChangeControlPointAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachmentOld *int32 `protobuf:"varint,1,opt,name=attachment_old,json=attachmentOld" json:"attachment_old,omitempty"`
	AttachmentNew *int32 `protobuf:"varint,2,opt,name=attachment_new,json=attachmentNew" json:"attachment_new,omitempty"`
	EntityHandle  *int32 `protobuf:"varint,3,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
}

func (x *CUserMsg_ParticleManager_ChangeControlPointAttachment) Reset() {
	*x = CUserMsg_ParticleManager_ChangeControlPointAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_ChangeControlPointAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_ChangeControlPointAttachment) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_ChangeControlPointAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_ChangeControlPointAttachment.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_ChangeControlPointAttachment) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 12}
}

func (x *CUserMsg_ParticleManager_ChangeControlPointAttachment) GetAttachmentOld() int32 {
	if x != nil && x.AttachmentOld != nil {
		return *x.AttachmentOld
	}
	return 0
}

func (x *CUserMsg_ParticleManager_ChangeControlPointAttachment) GetAttachmentNew() int32 {
	if x != nil && x.AttachmentNew != nil {
		return *x.AttachmentNew
	}
	return 0
}

func (x *CUserMsg_ParticleManager_ChangeControlPointAttachment) GetEntityHandle() int32 {
	if x != nil && x.EntityHandle != nil {
		return *x.EntityHandle
	}
	return 0
}

type CUserMsg_ParticleManager_UpdateEntityPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityHandle *int32      `protobuf:"varint,1,opt,name=entity_handle,json=entityHandle" json:"entity_handle,omitempty"`
	Position     *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
}

func (x *CUserMsg_ParticleManager_UpdateEntityPosition) Reset() {
	*x = CUserMsg_ParticleManager_UpdateEntityPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_UpdateEntityPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_UpdateEntityPosition) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_UpdateEntityPosition) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_UpdateEntityPosition.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_UpdateEntityPosition) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 13}
}

func (x *CUserMsg_ParticleManager_UpdateEntityPosition) GetEntityHandle() int32 {
	if x != nil && x.EntityHandle != nil {
		return *x.EntityHandle
	}
	return 0
}

func (x *CUserMsg_ParticleManager_UpdateEntityPosition) GetPosition() *CMsgVector {
	if x != nil {
		return x.Position
	}
	return nil
}

type CUserMsg_ParticleManager_SetParticleFoWProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FowControlPoint  *int32   `protobuf:"varint,1,opt,name=fow_control_point,json=fowControlPoint" json:"fow_control_point,omitempty"`
	FowControlPoint2 *int32   `protobuf:"varint,2,opt,name=fow_control_point2,json=fowControlPoint2" json:"fow_control_point2,omitempty"`
	FowRadius        *float32 `protobuf:"fixed32,3,opt,name=fow_radius,json=fowRadius" json:"fow_radius,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetParticleFoWProperties) Reset() {
	*x = CUserMsg_ParticleManager_SetParticleFoWProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetParticleFoWProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetParticleFoWProperties) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetParticleFoWProperties) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetParticleFoWProperties.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetParticleFoWProperties) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 14}
}

func (x *CUserMsg_ParticleManager_SetParticleFoWProperties) GetFowControlPoint() int32 {
	if x != nil && x.FowControlPoint != nil {
		return *x.FowControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_SetParticleFoWProperties) GetFowControlPoint2() int32 {
	if x != nil && x.FowControlPoint2 != nil {
		return *x.FowControlPoint2
	}
	return 0
}

func (x *CUserMsg_ParticleManager_SetParticleFoWProperties) GetFowRadius() float32 {
	if x != nil && x.FowRadius != nil {
		return *x.FowRadius
	}
	return 0
}

type CUserMsg_ParticleManager_SetParticleShouldCheckFoW struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckFow *bool `protobuf:"varint,1,opt,name=check_fow,json=checkFow" json:"check_fow,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetParticleShouldCheckFoW) Reset() {
	*x = CUserMsg_ParticleManager_SetParticleShouldCheckFoW{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetParticleShouldCheckFoW) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetParticleShouldCheckFoW) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetParticleShouldCheckFoW) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetParticleShouldCheckFoW.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetParticleShouldCheckFoW) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 15}
}

func (x *CUserMsg_ParticleManager_SetParticleShouldCheckFoW) GetCheckFow() bool {
	if x != nil && x.CheckFow != nil {
		return *x.CheckFow
	}
	return false
}

type CUserMsg_ParticleManager_SetControlPointModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32  `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	ModelName    *string `protobuf:"bytes,2,opt,name=model_name,json=modelName" json:"model_name,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetControlPointModel) Reset() {
	*x = CUserMsg_ParticleManager_SetControlPointModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetControlPointModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetControlPointModel) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetControlPointModel) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetControlPointModel.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetControlPointModel) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 16}
}

func (x *CUserMsg_ParticleManager_SetControlPointModel) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_SetControlPointModel) GetModelName() string {
	if x != nil && x.ModelName != nil {
		return *x.ModelName
	}
	return ""
}

type CUserMsg_ParticleManager_SetControlPointSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlPoint *int32  `protobuf:"varint,1,opt,name=control_point,json=controlPoint" json:"control_point,omitempty"`
	SnapshotName *string `protobuf:"bytes,2,opt,name=snapshot_name,json=snapshotName" json:"snapshot_name,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetControlPointSnapshot) Reset() {
	*x = CUserMsg_ParticleManager_SetControlPointSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetControlPointSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetControlPointSnapshot) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetControlPointSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetControlPointSnapshot.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetControlPointSnapshot) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 17}
}

func (x *CUserMsg_ParticleManager_SetControlPointSnapshot) GetControlPoint() int32 {
	if x != nil && x.ControlPoint != nil {
		return *x.ControlPoint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_SetControlPointSnapshot) GetSnapshotName() string {
	if x != nil && x.SnapshotName != nil {
		return *x.SnapshotName
	}
	return ""
}

type CUserMsg_ParticleManager_SetParticleText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetParticleText) Reset() {
	*x = CUserMsg_ParticleManager_SetParticleText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetParticleText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetParticleText) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetParticleText) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetParticleText.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetParticleText) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 18}
}

func (x *CUserMsg_ParticleManager_SetParticleText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CUserMsg_ParticleManager_SetTextureAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName *string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
	TextureName   *string `protobuf:"bytes,2,opt,name=texture_name,json=textureName" json:"texture_name,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetTextureAttribute) Reset() {
	*x = CUserMsg_ParticleManager_SetTextureAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetTextureAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetTextureAttribute) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetTextureAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetTextureAttribute.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetTextureAttribute) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 19}
}

func (x *CUserMsg_ParticleManager_SetTextureAttribute) GetAttributeName() string {
	if x != nil && x.AttributeName != nil {
		return *x.AttributeName
	}
	return ""
}

func (x *CUserMsg_ParticleManager_SetTextureAttribute) GetTextureName() string {
	if x != nil && x.TextureName != nil {
		return *x.TextureName
	}
	return ""
}

type CUserMsg_ParticleManager_SetSceneObjectGenericFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlagValue *bool `protobuf:"varint,1,opt,name=flag_value,json=flagValue" json:"flag_value,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetSceneObjectGenericFlag) Reset() {
	*x = CUserMsg_ParticleManager_SetSceneObjectGenericFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetSceneObjectGenericFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetSceneObjectGenericFlag) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetSceneObjectGenericFlag) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetSceneObjectGenericFlag.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetSceneObjectGenericFlag) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 20}
}

func (x *CUserMsg_ParticleManager_SetSceneObjectGenericFlag) GetFlagValue() bool {
	if x != nil && x.FlagValue != nil {
		return *x.FlagValue
	}
	return false
}

type CUserMsg_ParticleManager_SetSceneObjectTintAndDesat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tint  *uint32  `protobuf:"fixed32,1,opt,name=tint" json:"tint,omitempty"`
	Desat *float32 `protobuf:"fixed32,2,opt,name=desat" json:"desat,omitempty"`
}

func (x *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) Reset() {
	*x = CUserMsg_ParticleManager_SetSceneObjectTintAndDesat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_usermessages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) ProtoMessage() {}

func (x *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) ProtoReflect() protoreflect.Message {
	mi := &file_usermessages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserMsg_ParticleManager_SetSceneObjectTintAndDesat.ProtoReflect.Descriptor instead.
func (*CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) Descriptor() ([]byte, []int) {
	return file_usermessages_proto_rawDescGZIP(), []int{41, 21}
}

func (x *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) GetTint() uint32 {
	if x != nil && x.Tint != nil {
		return *x.Tint
	}
	return 0
}

func (x *CUserMsg_ParticleManager_SetSceneObjectTintAndDesat) GetDesat() float32 {
	if x != nil && x.Desat != nil {
		return *x.Desat
	}
	return 0
}

var File_usermessages_proto protoreflect.FileDescriptor

var file_usermessages_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x64, 0x6f, 0x74, 0x61, 0x1a, 0x16, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x40, 0x0a, 0x1c, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x8e, 0x01, 0x0a, 0x1e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x97, 0x01, 0x0a, 0x23, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x38, 0x0a, 0x1c, 0x43, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x1c, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x62, 0x6c,
	0x65, 0x6e, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x6c, 0x65, 0x6e, 0x64,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x22, 0x77, 0x0a, 0x10, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x61, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x14,
	0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x6b,
	0x65, 0x44, 0x69, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x05, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x5f, 0x0a, 0x13, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x22, 0xce, 0x01, 0x0a, 0x14, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x34, 0x22, 0xa8, 0x02, 0x0a, 0x12, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x75, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66,
	0x61, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x61, 0x64,
	0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x66, 0x61, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x78,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a,
	0x13, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x75, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f,
	0x0a, 0x13, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22,
	0x17, 0x0a, 0x15, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x48, 0x55, 0x44,
	0x22, 0x49, 0x0a, 0x15, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x22, 0x9c, 0x01, 0x0a, 0x1a,
	0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7c, 0x0a, 0x15, 0x43, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x69, 0x6e, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x5b, 0x0a,
	0x19, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x47, 0x55, 0x49, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x33, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x56, 0x47, 0x55,
	0x49, 0x4d, 0x65, 0x6e, 0x75, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x1a, 0x30, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x75, 0x6d, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x1a, 0x43, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xd2, 0x01,
	0x0a, 0x17, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x22, 0x34, 0x0a, 0x16, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x16, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6d, 0x6f, 0x44, 0x65, 0x6e, 0x69,
	0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6d, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6d, 0x6f, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1a, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x68, 0x61, 0x69, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x6e, 0x67,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x68, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x51, 0x41, 0x6e, 0x67, 0x6c,
	0x65, 0x52, 0x0c, 0x61, 0x6e, 0x67, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x68, 0x61, 0x69, 0x72, 0x22,
	0x94, 0x01, 0x0a, 0x14, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x68, 0x6f, 0x77, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65,
	0x65, 0x64, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x65,
	0x65, 0x64, 0x6d, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x71, 0x0a, 0x16, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x4d, 0x73, 0x67,
	0x12, 0x36, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x09, 0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6c,
	0x6f, 0x67, 0x6f, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x4b, 0x0a, 0x18, 0x43, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x4a,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61,
	0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x71, 0x0a, 0x1b, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4f, 0x76,
	0x65, 0x72, 0x6c, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x75, 0x0a, 0x1d, 0x43, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x12,
	0x2f, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67,
	0x22, 0x7b, 0x0a, 0x1c, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d,
	0x73, 0x67, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x8a, 0x02,
	0x0a, 0x15, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x6f, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x62, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x69, 0x63, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x43,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x78,
	0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x51, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x52,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x22, 0xa2, 0x02, 0x0a, 0x1c, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x52, 0x10,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e,
	0x1a, 0x5d, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0xbf, 0x27, 0x0a, 0x18, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x3a, 0x22, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c,
	0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x69, 0x0a, 0x16, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x56, 0x0a,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x0f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x75, 0x0a, 0x1a, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x18, 0x64,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x6c, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x56, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x60, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x66, 0x77, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x77, 0x64, 0x52, 0x11,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x77,
	0x64, 0x12, 0x69, 0x0a, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x18,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x69, 0x0a,
	0x16, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x60, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x12, 0x76, 0x0a, 0x1b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44, 0x72,
	0x61, 0x77, 0x12, 0x73, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x17,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x1c,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x69, 0x0a, 0x16,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64,
	0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x6f, 0x57, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x18, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x46, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x5a, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x7a, 0x0a, 0x1d, 0x73,
	0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x75,
	0x6c, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x66, 0x6f, 0x77, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x57, 0x52, 0x19, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x77, 0x12, 0x6a, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e,
	0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x14, 0x73,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x73, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x17, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x66, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x13, 0x73, 0x65, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x12, 0x7a, 0x0a, 0x1d, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x19, 0x73, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x7e, 0x0a, 0x1f,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x74, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x61, 0x74, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x61, 0x74,
	0x52, 0x1a, 0x73, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x61, 0x74, 0x1a, 0x16, 0x0a, 0x14,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x1a, 0x9d, 0x02, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x3d, 0x0a,
	0x1b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x46, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x15,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x1a, 0x42, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x49, 0x6d, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x1a, 0x70, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x6c,
	0x76, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f,
	0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x63, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x64, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x46, 0x77, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74,
	0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x1a, 0xdb, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x2a, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x75,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x02, 0x75, 0x70, 0x12, 0x24, 0x0a,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x6c,
	0x65, 0x66, 0x74, 0x1a, 0x6b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0xa7, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f,
	0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x51, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x0b, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x8a, 0x02, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x11, 0x66,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x77, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x57, 0x65,
	0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65,
	0x6e, 0x1a, 0x3b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x1a, 0x91,
	0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x1a, 0x69, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x93, 0x01,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x6f, 0x57,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f,
	0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x6f, 0x77, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x66, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x77, 0x5f, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x6f, 0x77, 0x52, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x1a, 0x38, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x57,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x66, 0x6f, 0x77, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x77, 0x1a, 0x5a, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x63, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x25,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x5f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3a, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x46, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x04,
	0x74, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x64, 0x65, 0x73, 0x61, 0x74, 0x2a, 0x05, 0x08, 0x64, 0x10, 0xca,
	0x01, 0x22, 0x2e, 0x0a, 0x11, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x48, 0x75,
	0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4d, 0x0a, 0x18, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x5f, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xb9, 0x01, 0x0a, 0x1f, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41,
	0x6d, 0x70, 0x6c, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a,
	0x20, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x70,
	0x74, 0x69, 0x63, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x22, 0x58, 0x0a, 0x1f, 0x43, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x6e, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0xf3, 0x06, 0x0a, 0x11, 0x45,
	0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x4d, 0x5f, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4d, 0x5f,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x66, 0x12, 0x19,
	0x0a, 0x15, 0x55, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x67, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4d, 0x5f,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x10, 0x68, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4d, 0x5f, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x10, 0x69, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4d, 0x5f, 0x46, 0x61, 0x64, 0x65, 0x10, 0x6a, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4d, 0x5f, 0x47,
	0x61, 0x6d, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x10, 0x6b, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d,
	0x5f, 0x48, 0x69, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x10, 0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x55,
	0x4d, 0x5f, 0x48, 0x75, 0x64, 0x4d, 0x73, 0x67, 0x10, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4d,
	0x5f, 0x48, 0x75, 0x64, 0x54, 0x65, 0x78, 0x74, 0x10, 0x6f, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4d,
	0x5f, 0x4b, 0x65, 0x79, 0x48, 0x69, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x10, 0x70, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x4d, 0x5f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x10, 0x71, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x48, 0x55, 0x44, 0x10, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4d, 0x5f, 0x52,
	0x75, 0x6d, 0x62, 0x6c, 0x65, 0x10, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4d, 0x5f, 0x53, 0x61,
	0x79, 0x54, 0x65, 0x78, 0x74, 0x10, 0x75, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x53, 0x61,
	0x79, 0x54, 0x65, 0x78, 0x74, 0x32, 0x10, 0x76, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4d, 0x5f, 0x53,
	0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x10, 0x77, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x4d, 0x5f, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x10, 0x78, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4d, 0x5f, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x72, 0x10, 0x79, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x4d, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x73, 0x67, 0x10, 0x7c, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4d, 0x5f, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6c, 0x74, 0x10,
	0x7d, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x4d, 0x5f, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x10, 0x7e, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x56, 0x47, 0x55, 0x49, 0x4d, 0x65, 0x6e, 0x75, 0x10, 0x7f,
	0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4d, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x10, 0x80, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x55, 0x4d, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x10, 0x81, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4d,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x82, 0x01, 0x12, 0x12, 0x0a,
	0x0d, 0x55, 0x4d, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x10, 0x83,
	0x01, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x4d, 0x5f, 0x41, 0x6d, 0x6d, 0x6f, 0x44, 0x65, 0x6e, 0x69,
	0x65, 0x64, 0x10, 0x84, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x4d, 0x5f, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x68, 0x61, 0x69, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x85, 0x01, 0x12, 0x10, 0x0a,
	0x0b, 0x55, 0x4d, 0x5f, 0x53, 0x68, 0x6f, 0x77, 0x4d, 0x65, 0x6e, 0x75, 0x10, 0x86, 0x01, 0x12,
	0x12, 0x0a, 0x0d, 0x55, 0x4d, 0x5f, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x4d, 0x73, 0x67,
	0x10, 0x87, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x55, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x10, 0x8e, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x4d, 0x5f, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x8f, 0x01, 0x12, 0x16,
	0x0a, 0x11, 0x55, 0x4d, 0x5f, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x10, 0x90, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4d, 0x5f, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x91, 0x01, 0x12,
	0x10, 0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x48, 0x75, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x92,
	0x01, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4d, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x94, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4d,
	0x5f, 0x41, 0x6e, 0x69, 0x6d, 0x47, 0x72, 0x61, 0x70, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x10, 0x95, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x4d, 0x5f, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63,
	0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x10, 0x96, 0x01,
	0x12, 0x1c, 0x0a, 0x17, 0x55, 0x4d, 0x5f, 0x48, 0x61, 0x70, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x10, 0x97, 0x01, 0x12, 0x10,
	0x0a, 0x0b, 0x55, 0x4d, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0xc8, 0x01,
	0x2a, 0x94, 0x01, 0x0a, 0x13, 0x45, 0x42, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x0d, 0x45, 0x4d, 0x5f, 0x50,
	0x6c, 0x61, 0x79, 0x4a, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x88, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x45, 0x4d, 0x5f, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x10, 0x89, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x4d, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x41, 0x6c, 0x6c, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x10, 0x8a, 0x01, 0x12, 0x16, 0x0a, 0x11,
	0x45, 0x4d, 0x5f, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x10, 0x8b, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x4d, 0x5f, 0x44, 0x6f, 0x53, 0x70, 0x61,
	0x72, 0x6b, 0x10, 0x8c, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x4d, 0x5f, 0x46, 0x69, 0x78, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x10, 0x8d, 0x01, 0x2a, 0x6f, 0x0a, 0x09, 0x65, 0x52, 0x6f, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x09, 0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x53, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x53, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x4c, 0x4c, 0x5f,
	0x4f, 0x55, 0x54, 0x54, 0x52, 0x4f, 0x10, 0x03, 0x2a, 0x8e, 0x09, 0x0a, 0x10, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x12, 0x26, 0x0a,
	0x22, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41,
	0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x2e, 0x0a,
	0x2a, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x32, 0x0a,
	0x2e, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x2f, 0x0a, 0x2b, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b,
	0x10, 0x04, 0x12, 0x2a, 0x0a, 0x26, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x2d,
	0x0a, 0x29, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f,
	0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x10, 0x06, 0x12, 0x27, 0x0a,
	0x23, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x53,
	0x54, 0x52, 0x4f, 0x59, 0x10, 0x07, 0x12, 0x31, 0x0a, 0x2d, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x5f, 0x49, 0x4e,
	0x56, 0x4f, 0x4c, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x27, 0x0a, 0x23, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45,
	0x10, 0x09, 0x12, 0x27, 0x0a, 0x23, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x0a, 0x12, 0x2b, 0x0a, 0x27, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e,
	0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x48, 0x4f, 0x55, 0x4c,
	0x44, 0x5f, 0x44, 0x52, 0x41, 0x57, 0x10, 0x0b, 0x12, 0x26, 0x0a, 0x22, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x0c,
	0x12, 0x3f, 0x0a, 0x3b, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c,
	0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x0d, 0x12, 0x36, 0x0a, 0x32, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x32, 0x0a, 0x2e, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x4f, 0x57,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x49, 0x45, 0x53, 0x10, 0x0f, 0x12, 0x28, 0x0a,
	0x24, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54,
	0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x10, 0x12, 0x34, 0x0a, 0x30, 0x47, 0x41, 0x4d, 0x45, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x48, 0x4f, 0x55, 0x4c,
	0x44, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x46, 0x4f, 0x57, 0x10, 0x11, 0x12, 0x37, 0x0a,
	0x33, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0x10, 0x12, 0x12, 0x3a, 0x0a, 0x36, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50,
	0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54,
	0x10, 0x13, 0x12, 0x35, 0x0a, 0x31, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x10, 0x14, 0x12, 0x3d, 0x0a, 0x39, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47,
	0x45, 0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x45,
	0x4e, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49,
	0x43, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x10, 0x15, 0x12, 0x3f, 0x0a, 0x3b, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45,
	0x52, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x49, 0x4e, 0x54, 0x5f, 0x41, 0x4e,
	0x44, 0x5f, 0x44, 0x45, 0x53, 0x41, 0x54, 0x10, 0x16, 0x2a, 0x74, 0x0a, 0x10, 0x45, 0x48, 0x61,
	0x70, 0x74, 0x69, 0x63, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x48, 0x41, 0x50, 0x54, 0x49, 0x43, 0x5f,
	0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0x00, 0x12, 0x1f, 0x0a,
	0x1b, 0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x48, 0x41, 0x50, 0x54, 0x49, 0x43, 0x5f,
	0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x56, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x5f, 0x48, 0x41, 0x50, 0x54, 0x49, 0x43,
	0x5f, 0x50, 0x55, 0x4c, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x42,
	0x05, 0x48, 0x01, 0x80, 0x01, 0x00,
}

var (
	file_usermessages_proto_rawDescOnce sync.Once
	file_usermessages_proto_rawDescData = file_usermessages_proto_rawDesc
)

func file_usermessages_proto_rawDescGZIP() []byte {
	file_usermessages_proto_rawDescOnce.Do(func() {
		file_usermessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_usermessages_proto_rawDescData)
	})
	return file_usermessages_proto_rawDescData
}

var file_usermessages_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_usermessages_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_usermessages_proto_goTypes = []interface{}{
	(EBaseUserMessages)(0),                                        // 0: dota.EBaseUserMessages
	(EBaseEntityMessages)(0),                                      // 1: dota.EBaseEntityMessages
	(ERollType)(0),                                                // 2: dota.eRollType
	(PARTICLE_MESSAGE)(0),                                         // 3: dota.PARTICLE_MESSAGE
	(EHapticPulseType)(0),                                         // 4: dota.EHapticPulseType
	(*CUserMessageAchievementEvent)(nil),                          // 5: dota.CUserMessageAchievementEvent
	(*CUserMessageCloseCaption)(nil),                              // 6: dota.CUserMessageCloseCaption
	(*CUserMessageCloseCaptionDirect)(nil),                        // 7: dota.CUserMessageCloseCaptionDirect
	(*CUserMessageCloseCaptionPlaceholder)(nil),                   // 8: dota.CUserMessageCloseCaptionPlaceholder
	(*CUserMessageCurrentTimescale)(nil),                          // 9: dota.CUserMessageCurrentTimescale
	(*CUserMessageDesiredTimescale)(nil),                          // 10: dota.CUserMessageDesiredTimescale
	(*CUserMessageFade)(nil),                                      // 11: dota.CUserMessageFade
	(*CUserMessageShake)(nil),                                     // 12: dota.CUserMessageShake
	(*CUserMessageShakeDir)(nil),                                  // 13: dota.CUserMessageShakeDir
	(*CUserMessageScreenTilt)(nil),                                // 14: dota.CUserMessageScreenTilt
	(*CUserMessageSayText)(nil),                                   // 15: dota.CUserMessageSayText
	(*CUserMessageSayText2)(nil),                                  // 16: dota.CUserMessageSayText2
	(*CUserMessageHudMsg)(nil),                                    // 17: dota.CUserMessageHudMsg
	(*CUserMessageHudText)(nil),                                   // 18: dota.CUserMessageHudText
	(*CUserMessageTextMsg)(nil),                                   // 19: dota.CUserMessageTextMsg
	(*CUserMessageGameTitle)(nil),                                 // 20: dota.CUserMessageGameTitle
	(*CUserMessageResetHUD)(nil),                                  // 21: dota.CUserMessageResetHUD
	(*CUserMessageSendAudio)(nil),                                 // 22: dota.CUserMessageSendAudio
	(*CUserMessageAudioParameter)(nil),                            // 23: dota.CUserMessageAudioParameter
	(*CUserMessageVoiceMask)(nil),                                 // 24: dota.CUserMessageVoiceMask
	(*CUserMessageRequestState)(nil),                              // 25: dota.CUserMessageRequestState
	(*CUserMessageHintText)(nil),                                  // 26: dota.CUserMessageHintText
	(*CUserMessageKeyHintText)(nil),                               // 27: dota.CUserMessageKeyHintText
	(*CUserMessageVoiceSubtitle)(nil),                             // 28: dota.CUserMessageVoiceSubtitle
	(*CUserMessageVGUIMenu)(nil),                                  // 29: dota.CUserMessageVGUIMenu
	(*CUserMessageRumble)(nil),                                    // 30: dota.CUserMessageRumble
	(*CUserMessageTrain)(nil),                                     // 31: dota.CUserMessageTrain
	(*CUserMessageSayTextChannel)(nil),                            // 32: dota.CUserMessageSayTextChannel
	(*CUserMessageColoredText)(nil),                               // 33: dota.CUserMessageColoredText
	(*CUserMessageItemPickup)(nil),                                // 34: dota.CUserMessageItemPickup
	(*CUserMessageAmmoDenied)(nil),                                // 35: dota.CUserMessageAmmoDenied
	(*CUserMessageCrosshairAngle)(nil),                            // 36: dota.CUserMessageCrosshairAngle
	(*CUserMessageShowMenu)(nil),                                  // 37: dota.CUserMessageShowMenu
	(*CUserMessageCreditsMsg)(nil),                                // 38: dota.CUserMessageCreditsMsg
	(*CEntityMessagePlayJingle)(nil),                              // 39: dota.CEntityMessagePlayJingle
	(*CEntityMessageScreenOverlay)(nil),                           // 40: dota.CEntityMessageScreenOverlay
	(*CEntityMessageRemoveAllDecals)(nil),                         // 41: dota.CEntityMessageRemoveAllDecals
	(*CEntityMessagePropagateForce)(nil),                          // 42: dota.CEntityMessagePropagateForce
	(*CEntityMessageDoSpark)(nil),                                 // 43: dota.CEntityMessageDoSpark
	(*CEntityMessageFixAngle)(nil),                                // 44: dota.CEntityMessageFixAngle
	(*CUserMessageCameraTransition)(nil),                          // 45: dota.CUserMessageCameraTransition
	(*CUserMsg_ParticleManager)(nil),                              // 46: dota.CUserMsg_ParticleManager
	(*CUserMsg_HudError)(nil),                                     // 47: dota.CUserMsg_HudError
	(*CUserMsg_CustomGameEvent)(nil),                              // 48: dota.CUserMsg_CustomGameEvent
	(*CUserMessageHapticsManagerPulse)(nil),                       // 49: dota.CUserMessageHapticsManagerPulse
	(*CUserMessageHapticsManagerEffect)(nil),                      // 50: dota.CUserMessageHapticsManagerEffect
	(*CUserMessageAnimStateGraphState)(nil),                       // 51: dota.CUserMessageAnimStateGraphState
	(*CUserMessageVGUIMenu_Keys)(nil),                             // 52: dota.CUserMessageVGUIMenu.Keys
	(*CUserMessageCameraTransition_Transition_DataDriven)(nil),    // 53: dota.CUserMessageCameraTransition.Transition_DataDriven
	(*CUserMsg_ParticleManager_ReleaseParticleIndex)(nil),         // 54: dota.CUserMsg_ParticleManager.ReleaseParticleIndex
	(*CUserMsg_ParticleManager_CreateParticle)(nil),               // 55: dota.CUserMsg_ParticleManager.CreateParticle
	(*CUserMsg_ParticleManager_DestroyParticle)(nil),              // 56: dota.CUserMsg_ParticleManager.DestroyParticle
	(*CUserMsg_ParticleManager_DestroyParticleInvolving)(nil),     // 57: dota.CUserMsg_ParticleManager.DestroyParticleInvolving
	(*CUserMsg_ParticleManager_UpdateParticle)(nil),               // 58: dota.CUserMsg_ParticleManager.UpdateParticle
	(*CUserMsg_ParticleManager_UpdateParticleFwd)(nil),            // 59: dota.CUserMsg_ParticleManager.UpdateParticleFwd
	(*CUserMsg_ParticleManager_UpdateParticleOrient)(nil),         // 60: dota.CUserMsg_ParticleManager.UpdateParticleOrient
	(*CUserMsg_ParticleManager_UpdateParticleFallback)(nil),       // 61: dota.CUserMsg_ParticleManager.UpdateParticleFallback
	(*CUserMsg_ParticleManager_UpdateParticleOffset)(nil),         // 62: dota.CUserMsg_ParticleManager.UpdateParticleOffset
	(*CUserMsg_ParticleManager_UpdateParticleEnt)(nil),            // 63: dota.CUserMsg_ParticleManager.UpdateParticleEnt
	(*CUserMsg_ParticleManager_UpdateParticleSetFrozen)(nil),      // 64: dota.CUserMsg_ParticleManager.UpdateParticleSetFrozen
	(*CUserMsg_ParticleManager_UpdateParticleShouldDraw)(nil),     // 65: dota.CUserMsg_ParticleManager.UpdateParticleShouldDraw
	(*CUserMsg_ParticleManager_ChangeControlPointAttachment)(nil), // 66: dota.CUserMsg_ParticleManager.ChangeControlPointAttachment
	(*CUserMsg_ParticleManager_UpdateEntityPosition)(nil),         // 67: dota.CUserMsg_ParticleManager.UpdateEntityPosition
	(*CUserMsg_ParticleManager_SetParticleFoWProperties)(nil),     // 68: dota.CUserMsg_ParticleManager.SetParticleFoWProperties
	(*CUserMsg_ParticleManager_SetParticleShouldCheckFoW)(nil),    // 69: dota.CUserMsg_ParticleManager.SetParticleShouldCheckFoW
	(*CUserMsg_ParticleManager_SetControlPointModel)(nil),         // 70: dota.CUserMsg_ParticleManager.SetControlPointModel
	(*CUserMsg_ParticleManager_SetControlPointSnapshot)(nil),      // 71: dota.CUserMsg_ParticleManager.SetControlPointSnapshot
	(*CUserMsg_ParticleManager_SetParticleText)(nil),              // 72: dota.CUserMsg_ParticleManager.SetParticleText
	(*CUserMsg_ParticleManager_SetTextureAttribute)(nil),          // 73: dota.CUserMsg_ParticleManager.SetTextureAttribute
	(*CUserMsg_ParticleManager_SetSceneObjectGenericFlag)(nil),    // 74: dota.CUserMsg_ParticleManager.SetSceneObjectGenericFlag
	(*CUserMsg_ParticleManager_SetSceneObjectTintAndDesat)(nil),   // 75: dota.CUserMsg_ParticleManager.SetSceneObjectTintAndDesat
	(*CMsgVector)(nil),                                            // 76: dota.CMsgVector
	(*CMsgQAngle)(nil),                                            // 77: dota.CMsgQAngle
	(*CEntityMsg)(nil),                                            // 78: dota.CEntityMsg
}
var file_usermessages_proto_depIdxs = []int32{
	12, // 0: dota.CUserMessageShakeDir.shake:type_name -> dota.CUserMessageShake
	76, // 1: dota.CUserMessageShakeDir.direction:type_name -> dota.CMsgVector
	76, // 2: dota.CUserMessageScreenTilt.angle:type_name -> dota.CMsgVector
	52, // 3: dota.CUserMessageVGUIMenu.keys:type_name -> dota.CUserMessageVGUIMenu.Keys
	77, // 4: dota.CUserMessageCrosshairAngle.angcrosshair:type_name -> dota.CMsgQAngle
	2,  // 5: dota.CUserMessageCreditsMsg.rolltype:type_name -> dota.eRollType
	78, // 6: dota.CEntityMessagePlayJingle.entity_msg:type_name -> dota.CEntityMsg
	78, // 7: dota.CEntityMessageScreenOverlay.entity_msg:type_name -> dota.CEntityMsg
	78, // 8: dota.CEntityMessageRemoveAllDecals.entity_msg:type_name -> dota.CEntityMsg
	76, // 9: dota.CEntityMessagePropagateForce.impulse:type_name -> dota.CMsgVector
	78, // 10: dota.CEntityMessagePropagateForce.entity_msg:type_name -> dota.CEntityMsg
	76, // 11: dota.CEntityMessageDoSpark.origin:type_name -> dota.CMsgVector
	78, // 12: dota.CEntityMessageDoSpark.entity_msg:type_name -> dota.CEntityMsg
	77, // 13: dota.CEntityMessageFixAngle.angle:type_name -> dota.CMsgQAngle
	78, // 14: dota.CEntityMessageFixAngle.entity_msg:type_name -> dota.CEntityMsg
	53, // 15: dota.CUserMessageCameraTransition.params_data_driven:type_name -> dota.CUserMessageCameraTransition.Transition_DataDriven
	3,  // 16: dota.CUserMsg_ParticleManager.type:type_name -> dota.PARTICLE_MESSAGE
	54, // 17: dota.CUserMsg_ParticleManager.release_particle_index:type_name -> dota.CUserMsg_ParticleManager.ReleaseParticleIndex
	55, // 18: dota.CUserMsg_ParticleManager.create_particle:type_name -> dota.CUserMsg_ParticleManager.CreateParticle
	56, // 19: dota.CUserMsg_ParticleManager.destroy_particle:type_name -> dota.CUserMsg_ParticleManager.DestroyParticle
	57, // 20: dota.CUserMsg_ParticleManager.destroy_particle_involving:type_name -> dota.CUserMsg_ParticleManager.DestroyParticleInvolving
	58, // 21: dota.CUserMsg_ParticleManager.update_particle:type_name -> dota.CUserMsg_ParticleManager.UpdateParticle
	59, // 22: dota.CUserMsg_ParticleManager.update_particle_fwd:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleFwd
	60, // 23: dota.CUserMsg_ParticleManager.update_particle_orient:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleOrient
	61, // 24: dota.CUserMsg_ParticleManager.update_particle_fallback:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleFallback
	62, // 25: dota.CUserMsg_ParticleManager.update_particle_offset:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleOffset
	63, // 26: dota.CUserMsg_ParticleManager.update_particle_ent:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleEnt
	65, // 27: dota.CUserMsg_ParticleManager.update_particle_should_draw:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleShouldDraw
	64, // 28: dota.CUserMsg_ParticleManager.update_particle_set_frozen:type_name -> dota.CUserMsg_ParticleManager.UpdateParticleSetFrozen
	66, // 29: dota.CUserMsg_ParticleManager.change_control_point_attachment:type_name -> dota.CUserMsg_ParticleManager.ChangeControlPointAttachment
	67, // 30: dota.CUserMsg_ParticleManager.update_entity_position:type_name -> dota.CUserMsg_ParticleManager.UpdateEntityPosition
	68, // 31: dota.CUserMsg_ParticleManager.set_particle_fow_properties:type_name -> dota.CUserMsg_ParticleManager.SetParticleFoWProperties
	72, // 32: dota.CUserMsg_ParticleManager.set_particle_text:type_name -> dota.CUserMsg_ParticleManager.SetParticleText
	69, // 33: dota.CUserMsg_ParticleManager.set_particle_should_check_fow:type_name -> dota.CUserMsg_ParticleManager.SetParticleShouldCheckFoW
	70, // 34: dota.CUserMsg_ParticleManager.set_control_point_model:type_name -> dota.CUserMsg_ParticleManager.SetControlPointModel
	71, // 35: dota.CUserMsg_ParticleManager.set_control_point_snapshot:type_name -> dota.CUserMsg_ParticleManager.SetControlPointSnapshot
	73, // 36: dota.CUserMsg_ParticleManager.set_texture_attribute:type_name -> dota.CUserMsg_ParticleManager.SetTextureAttribute
	74, // 37: dota.CUserMsg_ParticleManager.set_scene_object_generic_flag:type_name -> dota.CUserMsg_ParticleManager.SetSceneObjectGenericFlag
	75, // 38: dota.CUserMsg_ParticleManager.set_scene_object_tint_and_desat:type_name -> dota.CUserMsg_ParticleManager.SetSceneObjectTintAndDesat
	76, // 39: dota.CUserMsg_ParticleManager.UpdateParticle.position:type_name -> dota.CMsgVector
	76, // 40: dota.CUserMsg_ParticleManager.UpdateParticleFwd.forward:type_name -> dota.CMsgVector
	76, // 41: dota.CUserMsg_ParticleManager.UpdateParticleOrient.forward:type_name -> dota.CMsgVector
	76, // 42: dota.CUserMsg_ParticleManager.UpdateParticleOrient.right:type_name -> dota.CMsgVector
	76, // 43: dota.CUserMsg_ParticleManager.UpdateParticleOrient.up:type_name -> dota.CMsgVector
	76, // 44: dota.CUserMsg_ParticleManager.UpdateParticleOrient.left:type_name -> dota.CMsgVector
	76, // 45: dota.CUserMsg_ParticleManager.UpdateParticleFallback.position:type_name -> dota.CMsgVector
	76, // 46: dota.CUserMsg_ParticleManager.UpdateParticleOffset.origin_offset:type_name -> dota.CMsgVector
	77, // 47: dota.CUserMsg_ParticleManager.UpdateParticleOffset.angle_offset:type_name -> dota.CMsgQAngle
	76, // 48: dota.CUserMsg_ParticleManager.UpdateParticleEnt.fallback_position:type_name -> dota.CMsgVector
	76, // 49: dota.CUserMsg_ParticleManager.UpdateEntityPosition.position:type_name -> dota.CMsgVector
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_usermessages_proto_init() }
func file_usermessages_proto_init() {
	if File_usermessages_proto != nil {
		return
	}
	file_networkbasetypes_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_usermessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageAchievementEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCloseCaption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCloseCaptionDirect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCloseCaptionPlaceholder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCurrentTimescale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageDesiredTimescale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageFade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageShake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageShakeDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageScreenTilt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageSayText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageSayText2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageHudMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageHudText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageTextMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageGameTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageResetHUD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageSendAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageAudioParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageVoiceMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageRequestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageHintText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageKeyHintText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageVoiceSubtitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageVGUIMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageRumble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageTrain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageSayTextChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageColoredText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageItemPickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageAmmoDenied); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCrosshairAngle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageShowMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCreditsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessagePlayJingle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageScreenOverlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageRemoveAllDecals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessagePropagateForce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageDoSpark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEntityMessageFixAngle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCameraTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_HudError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_CustomGameEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageHapticsManagerPulse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageHapticsManagerEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageAnimStateGraphState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageVGUIMenu_Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMessageCameraTransition_Transition_DataDriven); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_ReleaseParticleIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_CreateParticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_DestroyParticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_DestroyParticleInvolving); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleFwd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleOrient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleFallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleEnt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleSetFrozen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateParticleShouldDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_ChangeControlPointAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_UpdateEntityPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetParticleFoWProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetParticleShouldCheckFoW); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetControlPointModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetControlPointSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetParticleText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetTextureAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetSceneObjectGenericFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_usermessages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CUserMsg_ParticleManager_SetSceneObjectTintAndDesat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_usermessages_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_usermessages_proto_goTypes,
		DependencyIndexes: file_usermessages_proto_depIdxs,
		EnumInfos:         file_usermessages_proto_enumTypes,
		MessageInfos:      file_usermessages_proto_msgTypes,
	}.Build()
	File_usermessages_proto = out.File
	file_usermessages_proto_rawDesc = nil
	file_usermessages_proto_goTypes = nil
	file_usermessages_proto_depIdxs = nil
}
